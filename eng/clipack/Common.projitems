<Project Sdk="Microsoft.Build.NoTargets">
  <PropertyGroup>
    <TargetFramework>$(DefaultTargetFramework)</TargetFramework>

    <ArchiveName>aspire-cli-$(CliRuntime)</ArchiveName>
    <ArchiveFormat Condition="$(CliRuntime.StartsWith('linux-'))">tar.gz</ArchiveFormat>
    <ArchiveFormat Condition="!$(CliRuntime.StartsWith('linux-'))">zip</ArchiveFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Archives" />
  </ItemGroup>

  <Target Name="PublishToDisk">
    <ItemGroup>
      <AdditionalProperties Include="Configuration=$(Configuration)" />
      <AdditionalProperties Include="RuntimeIdentifier=$(CliRuntime)" />
      <AdditionalProperties Include="PublishSingleFile=true" />
      <AdditionalProperties Include="SelfContained=true" />
      <AdditionalProperties Include="PublishDir=$(OutputPath)" />

      <!-- Windows pdb aren't really needed any more. See https://github.com/dotnet/arcade/issues/15724
          As the pdb file is in the same location for all the RIDs it causes arcade's `_DeployPortableSymbolsToSymStore`
          target to race.

          `The process cannot access the file 'D:\a\_work\1\s\artifacts\SymStore\Release\Aspire.Cli\net8.0\aspire.pdb' because it is being used by another process`
      -->
      <AdditionalProperties Include="PublishWindowsPdb=false" />
    </ItemGroup>

    <!-- Remove OutputPath, and TargetFramework so the defaults can be used -->
    <MSBuild
        Projects="$(RepoRoot)src\Aspire.Cli\Aspire.Cli.csproj"
        Targets="publish"
        Properties="@(AdditionalProperties)"
        RemoveProperties="OutputPath;TargetFramework" />

    <!-- TODO: avoid generating the file instead of manually deleting it here -->
    <Delete Files="$(OutputPath)\aspire.xml" Condition="Exists('$(OutputPath)\aspire.xml')" />
  </Target>
</Project>
