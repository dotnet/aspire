<Project>

  <!--
    In short, this file automates the creation of a combined JSON runsheet from individual test runsheets,
    making it easy to integrate quarantined test execution into CI workflows, especially GitHub Actions.
   -->

  <!--
    This MSBuild targets file automates the generation of a combined test runsheet after building a solution,
    using the QuarantinedTestRunsheetBuilder (located in eng/QuarantinedTestRunsheetBuilder/QuarantinedTestRunsheetBuilder.targets).

    Here's a high-level overview of its logic:

    1. **Conditionally Triggered Target**:
      - The target _GenerateTestMatrix runs before the Test target, but only if the TestRunnerName property is set to QuarantinedTestRunsheetBuilder.

    2. **Define Paths and Script Content**:
      - Defines a combined runsheet JSON file path (_CombinedRunsheetFile) in the artifacts temporary directory.
      - Defines a PowerShell script (_Command) that:
        - Finds all individual .runsheet.json files in the artifacts directory.
        - Reads and merges their JSON content into a single combined JSON array.
        - Writes the combined JSON to the combined runsheet file.
        - Checks if running in GitHub Actions environment:
          - If yes, outputs the combined JSON to GitHub Actions output (GITHUB_OUTPUT).
          - If no, prints the combined JSON to the console.

    3. **Write and Execute the Script**:
      - Writes the defined PowerShell script content to a temporary script file (create-runsheet.ps1).
      - Executes this script using MSBuild's <Exec> task.

    4. **Output Results**:
      - After execution, logs a message indicating the combined runsheet was created, along with the script's output.

    A runsheet is a JSON file that describes what tests to be run.
    For example:

      ```json
      [
        {
          "project": "Aspire.Test",
          "os": "windows-latest",
          "command": "./eng/build.ps1 -restore -build -test -projects \"$(RelativeTestProjectPath)\" /bl:\"$(RelativeTestBinLog)\" -c $(Configuration) -ci /p:RunQuarantinedTests=true /p:CI=false"
        },
        {
          "project": "Aspire.Cli.Test",
          "os": "ubuntu-latest",
          "command": "./eng/build.sh -restore -build -test -projects \"$(RelativeTestProjectPath)\" /bl:\"$(RelativeTestBinLog)\" -c $(Configuration) -ci /p:RunQuarantinedTests=true /p:CI=false"
        }
      ]
      ```

    -->
  <Target Name="_GenerateTestMatrix" BeforeTargets="Test" Condition=" '$(TestRunnerName)' == 'QuarantinedTestRunsheetBuilder' ">
    <PropertyGroup>
      <_CombinedRunsheetFile>$(ArtifactsTmpDir)/combined_runsheet.json</_CombinedRunsheetFile>
      <_Command>
        $combined = @()
        Get-ChildItem -Path '$(ArtifactsTmpDir)' -Filter '*.runsheet.json' |
            ForEach-Object {
                $content = Get-Content -Raw $_.FullName | ConvertFrom-Json
                if ($content -is [Array]) {
                    $combined += $content
                }
                else {
                    $combined += @($content)
                }
            }
        $jsonString = ($combined | ConvertTo-Json -Depth 10 -Compress)
        $jsonString | Set-Content '$(_CombinedRunsheetFile)';

        # determine if the script is running in a GitHub Actions environment
        if ($env:CI -and $env:GITHUB_ACTIONS) {
            "runsheet=$jsonString" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        }
        else {
            Write-Host "runsheet=$jsonString"
        }
      </_Command>
      <_Script>$([MSBuild]::NormalizePath($(ArtifactsTmpDir), 'create-runsheet.ps1'))</_Script>
    </PropertyGroup>

    <WriteLinesToFile File="$(_Script)"
                      Lines="$(_Command)"
                      Overwrite="true" />
    <Exec Command="pwsh -File $(_Script)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="ScriptOutput" />
    </Exec>
    <Message Importance="high" Text="Combined runsheet created%0D%0A%0D%0A$(ScriptOutput)" />
  </Target>
</Project>
