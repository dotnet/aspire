<Project>
  <Target Name="Build">
    <!-- Validate that all project file names are unique to prevent build output conflicts -->
    <!-- Skip validation if requested or if ProjectToBuild items are not available -->
    <PropertyGroup>
      <SkipValidation Condition="'$(SkipProjectNameValidation)' == 'true' or '@(ProjectToBuild)' == ''">true</SkipValidation>
    </PropertyGroup>
    
    <ItemGroup Condition="'$(SkipValidation)' != 'true'">
      <!-- Extract just the file name (without path) from each project -->
      <_ProjectFileName Include="@(ProjectToBuild -> '%(Filename)%(Extension)')">
        <OriginalPath>%(ProjectToBuild.Identity)</OriginalPath>
      </_ProjectFileName>
      <!-- Create a list of distinct file names -->
      <_DistinctProjectFileName Include="@(_ProjectFileName -> Distinct())" />
    </ItemGroup>
    
    <PropertyGroup Condition="'$(SkipValidation)' != 'true'">
      <!-- Count total project files and distinct project files -->
      <_TotalProjectCount>@(_ProjectFileName -> Count())</_TotalProjectCount>
      <_DistinctProjectCount>@(_DistinctProjectFileName -> Count())</_DistinctProjectCount>
    </PropertyGroup>
    
    <!-- If counts don't match, we have duplicates -->
    <Error Condition="'$(SkipValidation)' != 'true' and '$(_TotalProjectCount)' != '$(_DistinctProjectCount)'"
           Text="Found duplicate project file names that can cause build output conflicts.%0ATotal projects: $(_TotalProjectCount), Unique names: $(_DistinctProjectCount)%0A%0AProject files:%0A@(_ProjectFileName -> '%(Identity): %(OriginalPath)', '%0A')%0A%0AEach project file must have a unique name to prevent compiled assemblies from overwriting each other in shared output directories." />
  </Target>
</Project>