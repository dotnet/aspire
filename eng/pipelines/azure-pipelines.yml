trigger:
  batch: true
  branches:
    include:
    - main*
    - release/*
    - internal/release/*
  paths:
    include:
      - '*'
    exclude:
      - '**.md'
      - eng/Version.Details.xml
      - .github/*
      - docs/*
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main*
    - release/*
    - feature/*
    - internal/release/*
  paths:
    include:
      - '*'
    exclude:
      - '**.md'
      - eng/Version.Details.xml
      - .github/*
      - docs/*
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common-variables.yml@self
  - template: /eng/common/templates-official/variables/pool-providers.yml@self

  - name: _BuildConfig
    value: Release
  - name: Build.Arcade.ArtifactsPath
    value: $(Build.SourcesDirectory)/artifacts/
  - name: Build.Arcade.LogsPath
    value: $(Build.Arcade.ArtifactsPath)log/$(_BuildConfig)/
  - name: Build.Arcade.TestResultsPath
    value: $(Build.Arcade.ArtifactsPath)TestResults/$(_BuildConfig)/

  # Produce test-signed build for PR and Public builds
  - ${{ if or(eq(variables['_RunAsPublic'], 'true'), eq(variables['Build.Reason'], 'PullRequest')) }}:
    # needed for darc (dependency flow) publishing
    - name: _PublishArgs
      value: ''
    - name: _OfficialBuildIdArgs
      value: ''
    # needed for signing
    - name: _SignType
      value: test
    - name: _SignArgs
      value: ''
    - name: _Sign
      value: false

  # Set up non-PR build from internal project
  - ${{ if and(ne(variables['_RunAsPublic'], 'true'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    # needed for darc (dependency flow) publishing
    - name: _PublishArgs
      value: >-
            /p:DotNetPublishUsingPipelines=true
    - name: _OfficialBuildIdArgs
      value: /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
    # needed for signing
    - name: _SignType
      value: real
    - name: _SignArgs
      value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:Sign=$(_Sign) /p:DotNetPublishUsingPipelines=true
    - name: _Sign
      value: true

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      policheck:
        enabled: true
        exclusionsFile: $(Build.SourcesDirectory)\.config\PoliCheckExclusions.xml
      eslint:
        enabled: false
        justificationForDisabling: 'see https://portal.microsofticm.com/imp/v3/incidents/incident/482258316/summary'
      sourceAnalysisPool:
        name: NetCore1ESPool-Internal
        image: windows.vs2022preview.amd64
        os: windows
      tsa:
        enabled: true
    customBuildTags:
    - ES365AIMigrationTooling
    containers:
      linux_x64:
        image: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-amd64
        env:
          SysRoot: /crossrootfs/x64
          LinkerFlavor: lld
      linux_arm64:
        image: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-arm64
        env:
          SysRoot: /crossrootfs/arm64
          LinkerFlavor: lld
      linux_musl_x64:
        image: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-amd64-musl
        env:
          SysRoot: /crossrootfs/x64
          LinkerFlavor: lld

    stages:

    - stage: build_sign_native
      displayName: Build+Sign native packages

      jobs:
      - template: /eng/pipelines/templates/build_sign_native.yml@self
        parameters:
          agentOs: macos
          targetRidsForSameOS:
            - osx-arm64
            - osx-x64
          codeSign: true
          teamName: $(_TeamName)
          extraBuildArgs: >-
            /p:Configuration=$(_BuildConfig)
            $(_SignArgs)
            $(_OfficialBuildIdArgs)

      - template: /eng/pipelines/templates/build_sign_native.yml@self
        parameters:
          agentOs: linux
          targetRidsForSameOS:
            - linux-x64
            - linux-arm64
            - linux-musl-x64
          # no need to sign ELF binaries on linux
          codeSign: false
          teamName: $(_TeamName)
          extraBuildArgs: >-
            /p:Configuration=$(_BuildConfig)
            $(_SignArgs)
            $(_OfficialBuildIdArgs)

    # ----------------------------------------------------------------
    # This stage performs build, test, packaging
    # ----------------------------------------------------------------
    - stage: build
      displayName: Build
      dependsOn:
      - build_sign_native
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          # Publish NuGet packages using v3
          # https://github.com/dotnet/arcade/blob/main/Documentation/CorePackages/Publishing.md#basic-onboarding-scenario-for-new-repositories-to-the-current-publishing-version-v3
          enablePublishUsingPipelines: true
          enablePublishBuildAssets: true
          enableTelemetry: true
          enableSourceIndex: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/main') }}
          publishAssetsImmediately: true
          # Publish build logs
          enablePublishBuildArtifacts: true
          # Publish test logs
          enablePublishTestResults: true
          workspace:
            clean: all

          jobs:

          - job: Windows
            ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), eq(variables['Build.Reason'], 'Manual')) }}:
              # If the build is getting signed, then the timeout should be increased.
              timeoutInMinutes: 120
            ${{ else }}:
              # timeout accounts for wait times for helix agents up to 30mins
              timeoutInMinutes: 90

            pool:
              name: NetCore1ESPool-Internal
              image: windows.vs2022preview.amd64
              os: windows

            variables:
              - name: _buildScript
                value: $(Build.SourcesDirectory)/build.cmd -ci

            preSteps:
              - checkout: self
                fetchDepth: 1
                clean: true

            steps:
              - task: DownloadPipelineArtifact@2
                displayName: ðŸŸ£Download All Native Archives
                inputs:
                  itemPattern: |
                    **/aspire-cli-*.zip
                    **/aspire-cli-*.tar.gz
                  targetPath: '$(Build.SourcesDirectory)/artifacts/packages/$(_BuildConfig)'

              - task: PowerShell@2
                displayName: ðŸŸ£List artifacts packages contents
                inputs:
                  targetType: 'inline'
                  script: |
                    Get-ChildItem -Path "$(Build.SourcesDirectory)\artifacts\packages" -File -Recurse | Select-Object FullName, @{Name="Size(MB)";Expression={[math]::Round($_.Length/1MB,2)}} | Format-Table -AutoSize

              - template: /eng/pipelines/templates/BuildAndTest.yml
                parameters:
                  dotnetScript: $(Build.SourcesDirectory)/dotnet.cmd
                  buildScript: $(_buildScript)
                  buildConfig: $(_BuildConfig)
                  repoArtifactsPath: $(Build.Arcade.ArtifactsPath)
                  repoLogPath: $(Build.Arcade.LogsPath)
                  repoTestResultsPath: $(Build.Arcade.TestResultsPath)
                  isWindows: true
                  targetRids:
                    # aot
                    - win-x64
                    - win-arm64
                    # non-aot - single file builds
                    - win-x86

      - ${{ if and(notin(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
        - template: /eng/common/templates-official/job/onelocbuild.yml@self
          parameters:
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-ASPIRE'
            MirrorRepo: aspire
            MirrorBranch: main
