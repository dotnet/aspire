//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class MauiProjectExtensions
    {
        public static Maui.MauiProjectBuilder AddMauiProject(this IDistributedApplicationBuilder builder, string name, string projectPath) { throw null; }
    }
}

namespace Aspire.Hosting.Maui
{
    public sealed partial class MauiProjectBuilder
    {
        internal MauiProjectBuilder() { }

        public string ProjectPath { get { throw null; } }

        public MauiProjectBuilder WithAndroid(string? adbTarget = null) { throw null; }

        public MauiProjectBuilder WithiOS(string? deviceUdid = null) { throw null; }

        public MauiProjectBuilder WithMacCatalyst(string? runtimeIdentifier = null) { throw null; }

        public MauiProjectBuilder WithOtlpDevTunnel(string? tunnelName = null, bool enableOtelDebug = false) { throw null; }

        public MauiProjectBuilder WithReference(ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithEndpoints> source, ApplicationModel.IResourceBuilder<Hosting.DevTunnels.DevTunnelResource> tunnel) { throw null; }

        public MauiProjectBuilder WithReference<TSource>(ApplicationModel.IResourceBuilder<TSource> source, string? connectionName = null)
            where TSource : ApplicationModel.IResource { throw null; }

        public MauiProjectBuilder WithWindows(string? runtimeIdentifier = null) { throw null; }
    }

    public sealed partial class MauiProjectResource : ApplicationModel.Resource
    {
        public MauiProjectResource(string name, string projectPath) : base(default!) { }

        public string ProjectPath { get { throw null; } }
    }
}