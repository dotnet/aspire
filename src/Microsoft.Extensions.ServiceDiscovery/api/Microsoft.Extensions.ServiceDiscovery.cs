//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class ServiceDiscoveryHttpClientBuilderExtensions
    {
        public static IHttpClientBuilder AddServiceDiscovery(this IHttpClientBuilder httpClientBuilder) { throw null; }
    }

    public static partial class ServiceDiscoveryServiceCollectionExtensions
    {
        public static IServiceCollection AddConfigurationServiceEndpointProvider(this IServiceCollection services, System.Action<ServiceDiscovery.ConfigurationServiceEndpointProviderOptions> configureOptions) { throw null; }

        public static IServiceCollection AddConfigurationServiceEndpointProvider(this IServiceCollection services) { throw null; }

        public static IServiceCollection AddPassThroughServiceEndpointProvider(this IServiceCollection services) { throw null; }

        public static IServiceCollection AddServiceDiscovery(this IServiceCollection services, System.Action<ServiceDiscovery.ServiceDiscoveryOptions> configureOptions) { throw null; }

        public static IServiceCollection AddServiceDiscovery(this IServiceCollection services) { throw null; }

        public static IServiceCollection AddServiceDiscoveryCore(this IServiceCollection services, System.Action<ServiceDiscovery.ServiceDiscoveryOptions> configureOptions) { throw null; }

        public static IServiceCollection AddServiceDiscoveryCore(this IServiceCollection services) { throw null; }
    }
}

namespace Microsoft.Extensions.ServiceDiscovery
{
    public sealed partial class ConfigurationServiceEndpointProviderOptions
    {
        public string SectionName { get { throw null; } set { } }

        public System.Func<ServiceEndpoint, bool> ShouldApplyHostNameMetadata { get { throw null; } set { } }
    }

    public sealed partial class ServiceDiscoveryOptions
    {
        public bool AllowAllSchemes { get { throw null; } set { } }

        public System.Collections.Generic.IList<string> AllowedSchemes { get { throw null; } set { } }

        public System.TimeSpan RefreshPeriod { get { throw null; } set { } }
    }

    public sealed partial class ServiceEndpointResolver : System.IAsyncDisposable
    {
        internal ServiceEndpointResolver() { }

        public System.Threading.Tasks.ValueTask DisposeAsync() { throw null; }

        public System.Threading.Tasks.ValueTask<ServiceEndpointSource> GetEndpointsAsync(string serviceName, System.Threading.CancellationToken cancellationToken) { throw null; }
    }
}

namespace Microsoft.Extensions.ServiceDiscovery.Http
{
    public partial interface IServiceDiscoveryHttpMessageHandlerFactory
    {
        System.Net.Http.HttpMessageHandler CreateHandler(System.Net.Http.HttpMessageHandler handler);
    }
}