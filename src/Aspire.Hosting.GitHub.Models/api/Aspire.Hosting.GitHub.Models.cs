//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class GitHubModelsExtensions
    {
        public static ApplicationModel.IResourceBuilder<GitHub.Models.GitHubModelResource> AddGitHubModel(this IDistributedApplicationBuilder builder, string name, string model, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? organization = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<GitHub.Models.GitHubModelResource> WithApiKey(this ApplicationModel.IResourceBuilder<GitHub.Models.GitHubModelResource> builder, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource> apiKey) { throw null; }

        public static ApplicationModel.IResourceBuilder<GitHub.Models.GitHubModelResource> WithHealthCheck(this ApplicationModel.IResourceBuilder<GitHub.Models.GitHubModelResource> builder) { throw null; }
    }
}

namespace Aspire.Hosting.GitHub.Models
{
    public partial class GitHubModelResource : ApplicationModel.Resource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IResource, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, ApplicationModel.IResourceWithoutLifetime
    {
        public GitHubModelResource(string name, string model, ApplicationModel.ParameterResource? organization, ApplicationModel.ParameterResource key) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public ApplicationModel.ParameterResource Key { get { throw null; } }

        public string Model { get { throw null; } set { } }

        public ApplicationModel.ParameterResource? Organization { get { throw null; } set { } }
    }
}