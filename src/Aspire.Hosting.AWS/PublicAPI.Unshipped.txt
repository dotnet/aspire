#nullable enable
Aspire.Hosting.AWS.CDK.ConstructBuilderDelegate<T>
Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<T>
Aspire.Hosting.AWS.CDK.IConstructResource
Aspire.Hosting.AWS.CDK.IConstructResource<T>
Aspire.Hosting.AWS.CDK.IResourceWithConstruct
Aspire.Hosting.AWS.CDK.IResourceWithConstruct.Construct.get -> Constructs.IConstruct!
Aspire.Hosting.AWS.CDK.IResourceWithConstruct<T>
Aspire.Hosting.AWS.CDK.IResourceWithConstruct<T>.Construct.get -> T
Aspire.Hosting.AWS.CDK.IStackResource
Aspire.Hosting.AWS.CDK.IStackResource.Stack.get -> Amazon.CDK.Stack!
Aspire.Hosting.AWS.CDK.IStackResource<T>
Aspire.Hosting.AWS.CDK.IStackResource<T>.Stack.get -> T!
Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource
Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource.CloudFormationClient.get -> Amazon.CloudFormation.IAmazonCloudFormation?
Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource.CloudFormationClient.set -> void
Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource.Outputs.get -> System.Collections.Generic.List<Amazon.CloudFormation.Model.Output!>?
Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource.StackName.get -> string!
Aspire.Hosting.AWS.CloudFormation.ICloudFormationStackResource
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.AddParameter(string! parameterName, string! parameterValue) -> Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource!
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.DisabledCapabilities.get -> System.Collections.Generic.IList<string!>!
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.DisableDiffCheck.get -> bool
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.DisableDiffCheck.set -> void
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.RoleArn.get -> string?
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.RoleArn.set -> void
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.StackPollingInterval.get -> int
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.StackPollingInterval.set -> void
Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource.TemplatePath.get -> string!
Aspire.Hosting.AWS.CloudFormation.StackOutputReference
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.GetValueAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string?>
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.Name.get -> string!
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.Resource.get -> Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource!
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.StackOutputReference(string! name, Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource! resource) -> void
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.Value.get -> string?
Aspire.Hosting.AWS.CloudFormation.StackOutputReference.ValueExpression.get -> string!
Aspire.Hosting.AWS.IAWSResource
Aspire.Hosting.AWS.IAWSResource.AWSSDKConfig.get -> Aspire.Hosting.AWS.IAWSSDKConfig?
Aspire.Hosting.AWS.IAWSResource.AWSSDKConfig.set -> void
Aspire.Hosting.AWS.IAWSResource.ProvisioningTaskCompletionSource.get -> System.Threading.Tasks.TaskCompletionSource?
Aspire.Hosting.AWS.IAWSResource.ProvisioningTaskCompletionSource.set -> void
Aspire.Hosting.AWS.IAWSSDKConfig
Aspire.Hosting.AWS.IAWSSDKConfig.Profile.get -> string?
Aspire.Hosting.AWS.IAWSSDKConfig.Profile.set -> void
Aspire.Hosting.AWS.IAWSSDKConfig.Region.get -> Amazon.RegionEndpoint?
Aspire.Hosting.AWS.IAWSSDKConfig.Region.set -> void
Aspire.Hosting.AWS.Provisioning.AWSProvisioningException
Aspire.Hosting.AWS.Provisioning.AWSProvisioningException.AWSProvisioningException(string! message, System.Exception? innerException = null) -> void
Aspire.Hosting.CDKExtensions
Aspire.Hosting.CloudFormationExtensions
Aspire.Hosting.CognitoResourceExtensions
Aspire.Hosting.DynamoDBResourceExtensions
Aspire.Hosting.KinesisResourceExtensions
Aspire.Hosting.S3ResourceExtensions
Aspire.Hosting.SDKResourceExtensions
Aspire.Hosting.SNSResourceExtensions
Aspire.Hosting.SQSResourceExtensions
static Aspire.Hosting.CDKExtensions.AddAWSCDKStack(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>!
static Aspire.Hosting.CDKExtensions.AddAWSCDKStack(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string! stackName) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>!
static Aspire.Hosting.CDKExtensions.AddAWSCDKStack<T>(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, Aspire.Hosting.AWS.CDK.ConstructBuilderDelegate<T!>! stackBuilder) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource<T!>!>!
static Aspire.Hosting.CDKExtensions.AddConstruct<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IResourceWithConstruct!>! builder, string! name, Aspire.Hosting.AWS.CDK.ConstructBuilderDelegate<T!>! constructBuilder) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<T!>!>!
static Aspire.Hosting.CDKExtensions.AddOutput<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<T!>!>! builder, string! name, Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<T!>! output) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<T!>!>!
static Aspire.Hosting.CDKExtensions.AddOutput<TStack>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource<TStack!>!>! builder, string! name, Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<TStack!>! output) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource<TStack!>!>!
static Aspire.Hosting.CDKExtensions.GetOutput<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<T!>!>! builder, string! name, Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<T!>! output) -> Aspire.Hosting.AWS.CloudFormation.StackOutputReference!
static Aspire.Hosting.CDKExtensions.WithEnvironment<TDestination, TConstruct>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<TConstruct>!>! construct, Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<TConstruct>! outputDelegate, string? outputName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.CDKExtensions.WithReference<TDestination, TConstruct>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<TConstruct>!>! construct, Aspire.Hosting.AWS.CDK.ConstructOutputDelegate<TConstruct>! outputDelegate, string! outputName, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.CloudFormationExtensions.AddAWSCloudFormationStack(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string? stackName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationStackResource!>!
static Aspire.Hosting.CloudFormationExtensions.AddAWSCloudFormationTemplate(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string! templatePath, string? stackName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource!>!
static Aspire.Hosting.CloudFormationExtensions.GetOutput(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource!>! builder, string! name) -> Aspire.Hosting.AWS.CloudFormation.StackOutputReference!
static Aspire.Hosting.CloudFormationExtensions.WithEnvironment<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder, string! name, Aspire.Hosting.AWS.CloudFormation.StackOutputReference! stackOutputReference) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static Aspire.Hosting.CloudFormationExtensions.WithParameter(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource!>! builder, string! parameterName, string! parameterValue) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationTemplateResource!>!
static Aspire.Hosting.CloudFormationExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Amazon.CloudFormation.IAmazonCloudFormation! cloudFormationClient) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.CloudFormationExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CloudFormation.ICloudFormationResource!>! cloudFormationResourceBuilder, string! configSection = "AWS:Resources") -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.CloudFormationExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.AWS.IAWSSDKConfig! awsSdkConfig) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.CognitoResourceExtensions.AddClient(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Cognito.UserPool!>!>! builder, string! name, Amazon.CDK.AWS.Cognito.IUserPoolClientOptions? options = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Cognito.UserPoolClient!>!>!
static Aspire.Hosting.CognitoResourceExtensions.AddCognitoUserPool(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.Cognito.IUserPoolProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Cognito.UserPool!>!>!
static Aspire.Hosting.CognitoResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Cognito.UserPool!>!>! userPool, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.DynamoDBResourceExtensions.AddDynamoDBTable(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.DynamoDB.ITableProps! props) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>!
static Aspire.Hosting.DynamoDBResourceExtensions.AddGlobalSecondaryIndex(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>! builder, Amazon.CDK.AWS.DynamoDB.IGlobalSecondaryIndexProps! props) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>!
static Aspire.Hosting.DynamoDBResourceExtensions.AddLocalSecondaryIndex(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>! builder, Amazon.CDK.AWS.DynamoDB.ILocalSecondaryIndexProps! props) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>!
static Aspire.Hosting.DynamoDBResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.DynamoDB.Table!>!>! table, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.KinesisResourceExtensions.AddKinesisStream(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.Kinesis.IStreamProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Kinesis.Stream!>!>!
static Aspire.Hosting.KinesisResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.Kinesis.Stream!>!>! stream, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.S3ResourceExtensions.AddEventNotification(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.IQueue!>!>! destination, Amazon.CDK.AWS.S3.EventType eventType, params Amazon.CDK.AWS.S3.INotificationKeyFilter![]! filters) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.AddObjectCreatedNotification(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.ITopic!>!>! destination, params Amazon.CDK.AWS.S3.INotificationKeyFilter![]! filters) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.AddObjectCreatedNotification(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.IQueue!>!>! destination, params Amazon.CDK.AWS.S3.INotificationKeyFilter![]! filters) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.AddObjectRemovedNotification(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.ITopic!>!>! destination, params Amazon.CDK.AWS.S3.INotificationKeyFilter![]! filters) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.AddObjectRemovedNotification(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.IQueue!>!>! destination, params Amazon.CDK.AWS.S3.INotificationKeyFilter![]! filters) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.AddS3Bucket(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.S3.IBucketProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>!
static Aspire.Hosting.S3ResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.S3.Bucket!>!>! bucket, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.SDKResourceExtensions.AddAWSSDKConfig(this Aspire.Hosting.IDistributedApplicationBuilder! builder) -> Aspire.Hosting.AWS.IAWSSDKConfig!
static Aspire.Hosting.SDKResourceExtensions.WithProfile(this Aspire.Hosting.AWS.IAWSSDKConfig! config, string! profile) -> Aspire.Hosting.AWS.IAWSSDKConfig!
static Aspire.Hosting.SDKResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.AWS.IAWSSDKConfig! awsSdkConfig) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.SDKResourceExtensions.WithRegion(this Aspire.Hosting.AWS.IAWSSDKConfig! config, Amazon.RegionEndpoint! region) -> Aspire.Hosting.AWS.IAWSSDKConfig!
static Aspire.Hosting.SNSResourceExtensions.AddSNSTopic(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.SNS.ITopicProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.Topic!>!>!
static Aspire.Hosting.SNSResourceExtensions.AddSubscription(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.Topic!>!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.IQueue!>!>! destination, Amazon.CDK.AWS.SNS.Subscriptions.SqsSubscriptionProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.Topic!>!>!
static Aspire.Hosting.SNSResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SNS.Topic!>!>! topic, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
static Aspire.Hosting.SQSResourceExtensions.AddSQSQueue(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IStackResource!>! builder, string! name, Amazon.CDK.AWS.SQS.IQueueProps? props = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.Queue!>!>!
static Aspire.Hosting.SQSResourceExtensions.WithReference<TDestination>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AWS.CDK.IConstructResource<Amazon.CDK.AWS.SQS.Queue!>!>! queue, string? configSection = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<TDestination>!
