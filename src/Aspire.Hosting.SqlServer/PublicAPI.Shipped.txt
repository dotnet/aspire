#nullable enable
Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource
Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource.DatabaseName.get -> string!
Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource.Parent.get -> Aspire.Hosting.ApplicationModel.SqlServerServerResource!
Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource.SqlServerDatabaseResource(string! name, string! databaseName, Aspire.Hosting.ApplicationModel.SqlServerServerResource! parent) -> void
Aspire.Hosting.ApplicationModel.SqlServerServerResource
Aspire.Hosting.ApplicationModel.SqlServerServerResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.SqlServerServerResource.Databases.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
Aspire.Hosting.ApplicationModel.SqlServerServerResource.GetConnectionStringAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string?>
Aspire.Hosting.ApplicationModel.SqlServerServerResource.PasswordParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource!
Aspire.Hosting.ApplicationModel.SqlServerServerResource.PrimaryEndpoint.get -> Aspire.Hosting.ApplicationModel.EndpointReference!
Aspire.Hosting.ApplicationModel.SqlServerServerResource.SqlServerServerResource(string! name, Aspire.Hosting.ApplicationModel.ParameterResource! password) -> void
Aspire.Hosting.SqlServerBuilderExtensions
static Aspire.Hosting.SqlServerBuilderExtensions.AddDatabase(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>! builder, string! name, string? databaseName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerDatabaseResource!>!
static Aspire.Hosting.SqlServerBuilderExtensions.AddSqlServer(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? password = null, int? port = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>!
static Aspire.Hosting.SqlServerBuilderExtensions.WithDataBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>!
static Aspire.Hosting.SqlServerBuilderExtensions.WithDataVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.SqlServerServerResource!>!
