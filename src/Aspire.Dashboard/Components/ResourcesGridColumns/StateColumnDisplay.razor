@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<Columns> Loc

<div class="resource-state-container">
    @if (Resource is { State: ResourceStates.ExitedState /* containers */ or ResourceStates.FinishedState /* executables */, ExitCode: not null and not 0 })
    {
        <!-- process completed unexpectedly, hence the non-zero code. this is almost certainly an error, so warn users -->
        <FluentIcon
            Title="@string.Format(Loc[Columns.StateColumnResourceExitedUnexpectedly], Resource.ResourceType, Resource.ExitCode)"
            Icon="Icons.Filled.Size16.ErrorCircle"
            Color="Color.Error"
            Class="severity-icon"/>
    }
    else if (Resource is { State: ResourceStates.ExitedState /* containers */ or ResourceStates.FinishedState /* containers */ })
    {
        <!-- process completed, which may not have been unexpected -->
        <FluentIcon
            Title="@string.Format(Loc[Columns.StateColumnResourceExited], Resource.ResourceType)"
            Icon="Icons.Filled.Size16.Warning"
            Color="Color.Warning"
            Class="severity-icon"/>
    }

    @Resource.State
    <UnreadLogErrorsBadge UnviewedCount="@GetUnviewedErrorCount(Resource)" Resource="@Resource"/>
</div>

@code {
    [Parameter, EditorRequired]
    public Dictionary<OtlpApplication, int>? UnviewedErrorCounts { get; set; }

    [Parameter, EditorRequired]
    public required ResourceViewModel Resource { get; set; }
}
