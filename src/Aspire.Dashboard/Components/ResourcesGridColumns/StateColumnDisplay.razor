@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<Columns> Loc

@if (Resource is { State: ResourceStates.ExitedState /* containers */ or ResourceStates.FinishedState /* executables */ })
{
    if (Resource.TryGetExitCode(out int exitCode) && exitCode is not 0)
    {
        <!-- process completed unexpectedly, hence the non-zero code. this is almost certainly an error, so warn users -->
        <FluentIcon Title="@string.Format(Loc[Columns.StateColumnResourceExitedUnexpectedly], Resource.ResourceType, exitCode)"
                    Icon="Icons.Filled.Size16.ErrorCircle"
                    Color="Color.Error"
                    Class="severity-icon"/>
    }
    else
    {
        <!-- process completed, which may not have been unexpected -->
        <FluentIcon Title="@string.Format(Loc[Columns.StateColumnResourceExited], Resource.ResourceType)"
                    Icon="Icons.Filled.Size16.Warning"
                    Color="Color.Warning"
                    Class="severity-icon"/>
    }
}
else
{
    <FluentIcon Icon="Icons.Filled.Size16.CheckmarkCircle"
                Color="Color.Success"
                Class="severity-icon"/>
}

@Resource.State

@code {
    [Parameter, EditorRequired]
    public required ResourceViewModel Resource { get; set; }
}
