@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<Columns> Loc

<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
    <span><FluentHighlighter HighlightedText="@FilterText" Text="@FormatName(Resource)" /></span>
    @if (Resource is ContainerViewModel containerViewModel)
    {
        <div class="subtext">
            <GridValue Value="@containerViewModel.ContainerId"
                       MaxDisplayLength="8"
                       EnableHighlighting="false"
                       PreCopyToolTip="@Loc[Columns.ResourceNameDisplayCopyContainerIdText]"
                       ToolTip="@string.Format(Loc[Columns.ResourceNameDisplayContainerIdText], containerViewModel.ContainerId)"/>
        </div>
    }
    else if (Resource is ExecutableViewModel executableViewModel)
    {
        // NOTE projects are also executables, so this will handle both
        var title = string.Format(Loc[Columns.ResourceNameDisplayProcessIdText], executableViewModel.ProcessId);
        <span class="subtext" title="@title" aria-label="@title">@executableViewModel.ProcessId</span>
    }
</FluentStack>

@code {
    [Parameter, EditorRequired]
    public required ResourceViewModel Resource { get; set; }

    [Parameter, EditorRequired]
    public required Func<ResourceViewModel, string> FormatName { get; set; }

    [Parameter, EditorRequired]
    public required string FilterText { get; set; }
}
