@page "/consolelogs"
@page "/consolelogs/resource/{resourceName}"

@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Resources
@namespace Aspire.Dashboard.Components.Pages

<PageTitle>
    <ApplicationName
        AdditionalText="@PageViewModel.SelectedOption.Id?.ReplicaSetName"
        ResourceName="@nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsPageTitle)"
        Loc="@Loc"/>
</PageTitle>

<div class="page-content-container">
    <AspirePageContentLayout AddNewlineOnToolbar="true"
                             @ref="@_contentLayout"
                             MainContentStyle="margin-top: 10px;"
                             MobileToolbarButtonText="@Loc[nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsSelectResourceToolbar)]">
        <PageTitleSection>
            <h1 class="page-header">@Loc[nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsHeader)]</h1>
        </PageTitleSection>
        <ToolbarSection>
            <ResourceSelect Resources="_resources"
                            AriaLabel="@ControlsStringsLoc[nameof(ControlsStrings.ResourceLabel)]"
                            @bind-SelectedResource="PageViewModel.SelectedOption"
                            @bind-SelectedResource:after="HandleSelectedOptionChangedAsync"
                            LabelClass="toolbar-left" />

            <PauseIncomingDataSwitch IsPaused="@PauseManager.ConsoleLogsPaused" IsPausedChanged="@OnPausedChanged" />
            <ClearSignalsButton SelectedResource="PageViewModel.SelectedOption" HandleClearSignal="ClearConsoleLogs" />

            @if (PageViewModel.SelectedResource is { } selectedResource)
            {
                if (_highlightedCommands.Count > 0)
                {
                    <span style="margin-left: 10px;">@Loc[nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsResourceCommands)]</span>

                    @foreach (var command in _highlightedCommands)
                    {
                        <FluentButton Appearance="Appearance.Lightweight"
                                      Title="@(!string.IsNullOrEmpty(command.DisplayDescription) ? command.DisplayDescription : command.DisplayName)"
                                      Disabled="@(command.State == CommandViewModelState.Disabled || DashboardCommandExecutor.IsExecuting(selectedResource.Name, command.Name))"
                                      OnClick="@(() => ExecuteResourceCommandAsync(command))"
                                      Class="highlighted-command">
                            @if (!string.IsNullOrEmpty(command.IconName) && IconResolver.ResolveIconName(command.IconName, IconSize.Size16, command.IconVariant) is { } icon)
                            {
                                <FluentIcon Value="@icon" Width="16px" />
                            }
                            else
                            {
                                @command.DisplayName
                            }
                        </FluentButton>
                    }
                }

                if (_resourceMenuItems.Count > 0)
                {
                    <AspireMenuButton ButtonAppearance="Appearance.Lightweight"
                                      Icon="@(new Icons.Regular.Size20.MoreHorizontal())"
                                      Items="@_resourceMenuItems"
                                      Title="@Loc[nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsResourceCommands)]" />
                }
            }

            @if (ViewportInformation.IsDesktop)
            {
                // This takes up too much horizontal space on mobile, so show on a new line on mobile
                <FluentLabel Typo="Typography.Body" aria-live="polite" aria-label="@Loc[nameof(Dashboard.Resources.ConsoleLogs.LogStatusLabel)]" slot="end">@PageViewModel.Status</FluentLabel>
            }

            <AspireMenuButton ButtonAppearance="Appearance.Lightweight"
                              Icon="@(new Icons.Regular.Size20.Options())"
                              Items="@_logsMenuItems"
                              Title="@Loc[nameof(Dashboard.Resources.ConsoleLogs.ConsoleLogsSettings)]"
                              slot="end" />
        </ToolbarSection>

        <MobilePageTitleToolbarSection>
            <FluentLabel Typo="Typography.Body" aria-live="polite" aria-label="@Loc[nameof(Dashboard.Resources.ConsoleLogs.LogStatusLabel)]">
                @if (PageViewModel.SelectedOption?.Id is not null)
                {
                    @($"{PageViewModel.SelectedOption.Name}: {PageViewModel.Status}")
                }
                else
                {
                    @PageViewModel.Status
                }
            </FluentLabel>
        </MobilePageTitleToolbarSection>

        <MainSection>
            <LogViewer
                LogEntries="@_logEntries"
                ShowTimestamp="@_showTimestamp"
                IsTimestampUtc="@_isTimestampUtc"
                ApplicationName="@PageViewModel.SelectedResource?.Name"/>
        </MainSection>
    </AspirePageContentLayout>
</div>
