@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Model.Otlp
@using Aspire.Dashboard.Otlp.Storage
@using Aspire.Dashboard.Resources
@using Microsoft.FluentUI.AspNetCore.Components;
@implements IDialogContentComponent<FilterDialogViewModel>
@inject IStringLocalizer<Dialogs> Loc

<EditForm EditContext="@EditContext" OnValidSubmit="@Apply">
    <DataAnnotationsValidator />

    <FluentStack Orientation="Orientation.Vertical" VerticalGap="8">
        <FluentCombobox Placeholder="@Loc[Dialogs.FilterDialogFieldPlaceholder]" Items=@Parameters @bind-Value="@_formModel.Parameter" Width="100%" Height="500px" />

        <FluentSelect TOption="SelectViewModel<FilterCondition>" Items="@s_filterConditions" @bind-SelectedOption="@_formModel.Condition" OptionText="@(i => i.Name)" Width="100%" />

        <FluentTextField @bind-Value="_formModel.Value" Placeholder="@Loc[Dialogs.FilterDialogTextValuePlaceholder]" />
        <ValidationMessage For="() => _formModel.Value" />

        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Right">
            <FluentButton OnClick="Cancel">@Loc[Dialogs.FilterDialogCancelButtonText]</FluentButton>
            <FluentButton Color="Color.Primary" Type="ButtonType.Submit">@Loc[Dialogs.FilterDialogApplyFilterButtonText]</FluentButton>
            @if (Content.Filter is not null)
            {
                <FluentButton Appearance="Appearance.Stealth" aria-label="@Loc[Dialogs.FilterDialogRemoveFilterButtonText]" OnClick="Delete"><FluentIcon Value="@(new Icons.Regular.Size16.Delete())" /></FluentButton>
            }
        </FluentStack>
    </FluentStack>

</EditForm>
