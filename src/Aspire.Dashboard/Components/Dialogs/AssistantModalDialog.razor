@using Aspire.Dashboard.Components.CustomIcons
@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Model.Assistant
@using Aspire.Dashboard.Resources

@implements IDialogContentComponent<AssistantDialogViewModel>

@inject IStringLocalizer<AIAssistant> Loc

<FluentStack Orientation="Orientation.Horizontal"
             VerticalAlignment="VerticalAlignment.Top"
             Style="justify-content: start; align-items: start; column-gap: 10px; row-gap: 10px; width: 100%;"
             Class="fluent-dialog-header">
    <div style="width: 100%;">
        <div class="dialog-title-grid">
            <FluentIcon Value="@(new AspireIcons.Size24.GitHubCopilot())" Style="grid-area: dialog-icon; align-self: center;" />
            <FluentLabel Typo="Typography.PaneHeader" Class="col-long-content" Style="grid-area: dialog-title;">
                @Loc[nameof(AIAssistant.DialogTitle)]
            </FluentLabel>
        </div>
    </div>

    <FluentStack Orientation="Orientation.Horizontal" Style="width: auto;">
        <FluentButton Appearance="Appearance.Stealth" OnClick="@(() => StartNewChatAsync())" aria-label="@Loc[nameof(AIAssistant.SidebarNewChat)]" Title="@Loc[nameof(AIAssistant.SidebarNewChat)]">
            <FluentIcon Value="@(new Icons.Regular.Size20.ChatAdd())" Width="20px" Color="Color.Neutral" />
        </FluentButton>
        @if (ViewportInformation.IsDesktop)
        {
            <FluentButton Id="dialog_minimize" Appearance="Appearance.Stealth" OnClick="@(() => CloseAndDisplaySidebarAsync())" aria-label="@Loc[nameof(AIAssistant.SidebarExpandDialog)]" Title="@Loc[nameof(AIAssistant.SidebarExpandDialog)]">
                <FluentIcon Value="@(new Icons.Regular.Size20.PanelRightContract())" Width="20px" Color="Color.Neutral" />
            </FluentButton>
        }
        <FluentButton Id="dialog_close" Appearance="Appearance.Stealth" OnClick="@(() => Dialog.CancelAsync())" aria-label="@Dialog.Instance?.Parameters?.DismissTitle" Title="@Dialog.Instance?.Parameters?.DismissTitle">
            <FluentIcon Value="@(new Icons.Regular.Size20.Dismiss())" Width="20px" Color="Color.Neutral" />
        </FluentButton>
    </FluentStack>
</FluentStack>

@* The default header is hidden because a custom header, with new buttons, is displayed *@
<FluentDialogHeader Visible="false" />

@* overflow-x hidden to stop content from expanding outside the bounds of the dialog *@
<FluentDialogBody Style="overflow-x: hidden">
    <div class="modal-chat-body">
        <AssistantChat Class="chat-assistant-modal" ChatViewModel="@Content.Chat" ModelInitialized="OnModelInitialized" />
    </div>
</FluentDialogBody>

<FluentDialogFooter Visible="false" />
