@namespace Aspire.Dashboard.Components

@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Otlp.Model.MetricValues
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<ControlsStrings> Loc

<div title="@Model.Name"><span class="dimension-name">@Model.Name</span></div>
<div title="@string.Join(", ", Model.SelectedValues.Select(v => v.Name))">
    <FluentOverflow Class="dimension-overflow">
        <ChildContent>
            @if (Model.SelectedValues.Count == 0)
            {
                <FluentBadge>(None)</FluentBadge>
            }
            else
            {
                foreach (var item in Model.SelectedValues.OrderBy(g => g.Name))
                {
                    <FluentOverflowItem @key=item>
                        <FluentBadge>@item.Name</FluentBadge>
                    </FluentOverflowItem>
                }
            }
        </ChildContent>
        <MoreButtonTemplate>
            <FluentBadge>
                @($"+{context.ItemsOverflow.Count()}")
            </FluentBadge>
        </MoreButtonTemplate>
    </FluentOverflow>
</div>
<div>
    <FluentButton id="@($"typeFilterButton-{Model.Name}")"
                  IconEnd="@(new Icons.Regular.Size20.Filter())"
                  Appearance="@(Model.AreAllTypesVisible is true ? Appearance.Stealth : Appearance.Accent)"
                  @onclick="() => Model.PopupVisible = !Model.PopupVisible" />
    <FluentPopover AnchorId="@($"typeFilterButton-{Model.Name}")" @bind-Open="Model.PopupVisible">
        <Header>@Model.Name</Header>
        <Body>
            <FluentStack Orientation="Orientation.Vertical" Class="dimension-popup">
                <FluentCheckbox Label="All"
                                ThreeState="true"
                                ShowIndeterminate="false"
                                @bind-CheckState="Model.AreAllTypesVisible" />
                @foreach (var tag in Model.Values)
                {
                    bool isChecked = Model.SelectedValues.Contains(tag);
                    <FluentCheckbox Label="@tag.Name"
                                    @bind-Value:get="isChecked"
                                    @bind-Value:set="c => OnResourceTypeVisibilityChanged(tag, c)" />
                }
            </FluentStack>
        </Body>
    </FluentPopover>
</div>
