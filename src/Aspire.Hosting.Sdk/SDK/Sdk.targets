<Project>

  <!--
  A property-based workload cannot import props files (except AutoImport.props, which has very tight limitations.
  Instead, we copy everything from Aspire.Hosting.AppHost.props into these targets.
  This means they cannot be overridden in the csproj, and may cause ordering issues, particularly StaticWebAssets.
  -->

  <ItemGroup>
    <ProjectCapability Include="DynamicFileNesting" />
    <ProjectCapability Include="DynamicFileNestingEnabled" />
    <ProjectCapability Include="AspireOrchestration" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Aspire hosting projects aren't publishable right now until https://github.com/dotnet/aspire/issues/147 is good -->
    <IsPublishable Condition="'$(IsPublishable)' == ''">false</IsPublishable>
    <IsPackable Condition="'$(IsPackable)' == ''">false</IsPackable>
  </PropertyGroup>

  <!--
  Default AppHost ProjectReference items to not be referenced in the AppHost, unless it is IsAspireProjectResource=false.
  This defaulting needs to happen in the SDK targets so this metadata affects NuGet Restore.
  -->
  <ItemGroup Condition="'$(IsAspireHost)' == 'true'">
    
    <ProjectReference Update="@(ProjectReference)">
      <IsAspireProjectResource Condition="'%(IsAspireProjectResource)' != 'false'">true</IsAspireProjectResource>

      <ReferenceOutputAssembly Condition="'%(ReferenceOutputAssembly)' == '' and '%(IsAspireProjectResource)' == 'true'">false</ReferenceOutputAssembly>
      <SkipGetTargetFrameworkProperties Condition="'%(SkipGetTargetFrameworkProperties)' == '' and '%(IsAspireProjectResource)' == 'true'">true</SkipGetTargetFrameworkProperties>
      <ExcludeAssets Condition="'%(ExcludeAssets)' == '' and '%(IsAspireProjectResource)' == 'true'">all</ExcludeAssets>
      <Private Condition="'%(Private)' == '' and '%(IsAspireProjectResource)' == 'true'">false</Private>
    </ProjectReference>
    
  </ItemGroup>

  <Target Name="__WarnOnAspireCapabilityMissing" BeforeTargets="PrepareForBuild" Condition="!@(ProjectCapability->AnyHaveMetadataValue('Identity', 'Aspire'))">
    <Warning Code="ASPIRE002" Text="$(MSBuildProjectName) is an Aspire AppHost project but necessary dependencies aren't present. Are you missing an Aspire.Hosting.AppHost PackageReference?" />
  </Target>

  <Target Name="__WarnOnMininumVsVersionMissing" BeforeTargets="PrepareForBuild" Condition="'$(BuildingInsideVisualStudio)' == 'true' and $([MSBuild]::VersionLessThan('$(MSBuildVersion)', '17.10.0'))">
    <Warning Code="ASPIRE003" Text="$(MSBuildProjectName) is a .NET Aspire AppHost project that requires Visual Studio version 17.10 or above to work correctly. You are using version $(MSBuildVersion)." />
  </Target>

</Project>
