<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema
    Version 2.0
    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.
    Example:
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
    There are any number of "resheader" rows that contain simple
    name/value pairs.
    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.
    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:
    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>Initialize Aspire support in an existing solution or create a single-file AppHost.</value>
  </data>
  <data name="SolutionDetected" xml:space="preserve">
    <value>Solution detected: {0}</value>
  </data>
  <data name="CreatingAppHostProject" xml:space="preserve">
    <value>Creating AppHost project...</value>
  </data>
  <data name="CreatingServiceDefaultsProject" xml:space="preserve">
    <value>Creating ServiceDefaults project...</value>
  </data>
  <data name="AddingProjectsToSolution" xml:space="preserve">
    <value>Adding projects to solution...</value>
  </data>
  <data name="NoSolutionFoundCreatingSingleFileAppHost" xml:space="preserve">
    <value>No solution file found. Creating single-file AppHost...</value>
  </data>
  <data name="AspireInitializationComplete" xml:space="preserve">
    <value>Aspire initialization complete!</value>
  </data>
  <data name="MultipleSolutionsFound" xml:space="preserve">
    <value>Multiple solution files found. Please select which one to add the Aspire projects to:</value>
  </data>
  <data name="SolutionAlreadyInitialized" xml:space="preserve">
    <value>Solution has already been initialized with Aspire.</value>
  </data>
  <data name="AddingAppHostProjectToSolution" xml:space="preserve">
    <value>Adding AppHost project to solution...</value>
  </data>
  <data name="AddingServiceDefaultsProjectToSolution" xml:space="preserve">
    <value>Adding ServiceDefaults project to solution...</value>
  </data>
</root>