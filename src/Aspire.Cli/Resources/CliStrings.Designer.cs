//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aspire.Cli.Resources;

using System;


/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class CliStrings
{
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal CliStrings()
    {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager
    {
        get
        {
            if (object.ReferenceEquals(resourceMan, null))
            {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aspire.Cli.Resources.CliStrings", typeof(CliStrings).Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture
    {
        get
        {
            return resourceCulture;
        }
        set
        {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Add an integration to the Aspire project..
    /// </summary>
    internal static string AddCommand_Description
    {
        get
        {
            return ResourceManager.GetString("AddCommand_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Adding Aspire integration....
    /// </summary>
    internal static string AddCommand_AddingIntegration
    {
        get
        {
            return ResourceManager.GetString("AddCommand_AddingIntegration", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The package installation failed with exit code {0}. For more information run with --debug switch..
    /// </summary>
    internal static string AddCommand_InstallationFailed
    {
        get
        {
            return ResourceManager.GetString("AddCommand_InstallationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The name of the integration to add (e.g. redis, postgres)..
    /// </summary>
    internal static string AddCommand_IntegrationArgument_Description
    {
        get
        {
            return ResourceManager.GetString("AddCommand_IntegrationArgument_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The project argument was not specified and no *.csproj files were detected..
    /// </summary>
    internal static string AddCommand_NoProjectFiles
    {
        get
        {
            return ResourceManager.GetString("AddCommand_NoProjectFiles", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No integration packages were found. Please check your internet connection or NuGet source configuration..
    /// </summary>
    internal static string AddCommand_NoPackagesFound
    {
        get
        {
            return ResourceManager.GetString("AddCommand_NoPackagesFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No packages found..
    /// </summary>
    internal static string AddCommand_NoPackagesFoundShort
    {
        get
        {
            return ResourceManager.GetString("AddCommand_NoPackagesFoundShort", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The --project option was not specified and multiple app host project files were detected..
    /// </summary>
    internal static string AddCommand_MultipleProjectsFound
    {
        get
        {
            return ResourceManager.GetString("AddCommand_MultipleProjectsFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The package {0}::{1} was added successfully..
    /// </summary>
    internal static string AddCommand_PackageAddedSuccessfully
    {
        get
        {
            return ResourceManager.GetString("AddCommand_PackageAddedSuccessfully", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The --project option specified a project that does not exist..
    /// </summary>
    internal static string AddCommand_ProjectNotFound
    {
        get
        {
            return ResourceManager.GetString("AddCommand_ProjectNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path to the project file to add the integration to..
    /// </summary>
    internal static string AddCommand_ProjectOption_Description
    {
        get
        {
            return ResourceManager.GetString("AddCommand_ProjectOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Searching for Aspire packages....
    /// </summary>
    internal static string AddCommand_SearchingPackages
    {
        get
        {
            return ResourceManager.GetString("AddCommand_SearchingPackages", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Select an integration to add:.
    /// </summary>
    internal static string AddCommand_SelectIntegration
    {
        get
        {
            return ResourceManager.GetString("AddCommand_SelectIntegration", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Select a version of the {0}:.
    /// </summary>
    internal static string AddCommand_SelectVersion
    {
        get
        {
            return ResourceManager.GetString("AddCommand_SelectVersion", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The NuGet source to use for the integration..
    /// </summary>
    internal static string AddCommand_SourceOption_Description
    {
        get
        {
            return ResourceManager.GetString("AddCommand_SourceOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The version of the integration to add..
    /// </summary>
    internal static string AddCommand_VersionOption_Description
    {
        get
        {
            return ResourceManager.GetString("AddCommand_VersionOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Already connected to AppHost backchannel..
    /// </summary>
    internal static string Backchannel_AlreadyConnected
    {
        get
        {
            return ResourceManager.GetString("Backchannel_AlreadyConnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to AppHost is incompatible with the CLI. The AppHost must be updated to a version that supports the {0} capability..
    /// </summary>
    internal static string Backchannel_AppHostIncompatible
    {
        get
        {
            return ResourceManager.GetString("Backchannel_AppHostIncompatible", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Checking certificates....
    /// </summary>
    internal static string CertificateService_CheckingCertificates
    {
        get
        {
            return ResourceManager.GetString("CertificateService_CheckingCertificates", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to There was an error trusting the HTTPS developer certificate. It will be trusted by some clients but not by others..
    /// </summary>
    internal static string CertificateService_DevCertsPartialTrustMessage
    {
        get
        {
            return ResourceManager.GetString("CertificateService_DevCertsPartialTrustMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Developer certificates may not be fully trusted (trust exit code was: {0}).
    /// </summary>
    internal static string CertificateService_DeveloperCertificatesNotTrusted
    {
        get
        {
            return ResourceManager.GetString("CertificateService_DeveloperCertificatesNotTrusted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Trusting certificates....
    /// </summary>
    internal static string CertificateService_TrustingCertificates
    {
        get
        {
            return ResourceManager.GetString("CertificateService_TrustingCertificates", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred while adding the package: {0}.
    /// </summary>
    internal static string Error_AddingPackage
    {
        get
        {
            return ResourceManager.GetString("Error_AddingPackage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple project files found..
    /// </summary>
    internal static string Error_MultipleProjectFiles
    {
        get
        {
            return ResourceManager.GetString("Error_MultipleProjectFiles", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No project file.
    /// </summary>
    internal static string Error_NoProjectFile
    {
        get
        {
            return ResourceManager.GetString("Error_NoProjectFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Project file does not exist..
    /// </summary>
    internal static string Error_ProjectFileNotExist
    {
        get
        {
            return ResourceManager.GetString("Error_ProjectFileNotExist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected number of packages found..
    /// </summary>
    internal static string Error_UnexpectedPackageCount
    {
        get
        {
            return ResourceManager.GetString("Error_UnexpectedPackageCount", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The app host is not compatible. Consider upgrading the app host or Aspire CLI..
    /// </summary>
    internal static string InteractionService_AppHostNotCompatible
    {
        get
        {
            return ResourceManager.GetString("InteractionService_AppHostNotCompatible", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Aspire CLI Version.
    /// </summary>
    internal static string InteractionService_AspireCliVersion
    {
        get
        {
            return ResourceManager.GetString("InteractionService_AspireCliVersion", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Aspire Hosting SDK Version.
    /// </summary>
    internal static string InteractionService_AspireHostingSdkVersion
    {
        get
        {
            return ResourceManager.GetString("InteractionService_AspireHostingSdkVersion", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dashboard.
    /// </summary>
    internal static string InteractionService_Dashboard
    {
        get
        {
            return ResourceManager.GetString("InteractionService_Dashboard", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No items available for selection: {0}.
    /// </summary>
    internal static string InteractionService_NoItemsAvailable
    {
        get
        {
            return ResourceManager.GetString("InteractionService_NoItemsAvailable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Required Capability.
    /// </summary>
    internal static string InteractionService_RequiredCapability
    {
        get
        {
            return ResourceManager.GetString("InteractionService_RequiredCapability", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Stopping Aspire..
    /// </summary>
    internal static string InteractionService_StoppingAspire
    {
        get
        {
            return ResourceManager.GetString("InteractionService_StoppingAspire", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Create a new Aspire sample project..
    /// </summary>
    internal static string NewCommand_Description
    {
        get
        {
            return ResourceManager.GetString("NewCommand_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enter the output path:.
    /// </summary>
    internal static string NewCommand_EnterOutputPath
    {
        get
        {
            return ResourceManager.GetString("NewCommand_EnterOutputPath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enter the project name:.
    /// </summary>
    internal static string NewCommand_EnterProjectName
    {
        get
        {
            return ResourceManager.GetString("NewCommand_EnterProjectName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Invalid project name..
    /// </summary>
    internal static string NewCommand_InvalidProjectName
    {
        get
        {
            return ResourceManager.GetString("NewCommand_InvalidProjectName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The name of the project to create..
    /// </summary>
    internal static string NewCommand_NameOption_Description
    {
        get
        {
            return ResourceManager.GetString("NewCommand_NameOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The output path for the project..
    /// </summary>
    internal static string NewCommand_OutputOption_Description
    {
        get
        {
            return ResourceManager.GetString("NewCommand_OutputOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Select a project template:.
    /// </summary>
    internal static string NewCommand_SelectProjectTemplate
    {
        get
        {
            return ResourceManager.GetString("NewCommand_SelectProjectTemplate", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Select a template version:.
    /// </summary>
    internal static string NewCommand_SelectTemplateVersion
    {
        get
        {
            return ResourceManager.GetString("NewCommand_SelectTemplateVersion", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The NuGet source to use for the project templates..
    /// </summary>
    internal static string NewCommand_SourceOption_Description
    {
        get
        {
            return ResourceManager.GetString("NewCommand_SourceOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The version of the project templates to use..
    /// </summary>
    internal static string NewCommand_VersionOption_Description
    {
        get
        {
            return ResourceManager.GetString("NewCommand_VersionOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Run an Aspire app host in development mode..
    /// </summary>
    internal static string RunCommand_Description
    {
        get
        {
            return ResourceManager.GetString("RunCommand_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path to the Aspire app host project file..
    /// </summary>
    internal static string RunCommand_ProjectOption_Description
    {
        get
        {
            return ResourceManager.GetString("RunCommand_ProjectOption_Description", resourceCulture);
        }
    }
      /// <summary>
    ///   Looks up a localized string similar to Start project resources in watch mode..
    /// </summary>
    internal static string RunCommand_WatchOption_Description
    {
        get
        {
            return ResourceManager.GetString("RunCommand_WatchOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Aspire CLI can be used to create, run, and publish Aspire-based applications..
    /// </summary>
    internal static string RootCommand_Description
    {
        get
        {
            return ResourceManager.GetString("RootCommand_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enable debug logging to the console..
    /// </summary>
    internal static string RootCommand_DebugOption_Description
    {
        get
        {
            return ResourceManager.GetString("RootCommand_DebugOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Wait for a debugger to attach before executing the command..
    /// </summary>
    internal static string RootCommand_WaitForDebuggerOption_Description
    {
        get
        {
            return ResourceManager.GetString("RootCommand_WaitForDebuggerOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to :bug:  Waiting for debugger to attach to CLI process ID: {0}.
    /// </summary>
    internal static string RootCommand_WaitingForDebugger
    {
        get
        {
            return ResourceManager.GetString("RootCommand_WaitingForDebugger", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Generates deployment artifacts for an Aspire app host project..
    /// </summary>
    internal static string PublishCommand_Description
    {
        get
        {
            return ResourceManager.GetString("PublishCommand_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path to the Aspire app host project file..
    /// </summary>
    internal static string PublishCommand_ProjectOption_Description
    {
        get
        {
            return ResourceManager.GetString("PublishCommand_ProjectOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The output path for the generated artifacts..
    /// </summary>
    internal static string PublishCommand_OutputPathOption_Description
    {
        get
        {
            return ResourceManager.GetString("PublishCommand_OutputPathOption_Description", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Select a publisher:.
    /// </summary>
    internal static string PublishCommand_SelectPublisher
    {
        get
        {
            return ResourceManager.GetString("PublishCommand_SelectPublisher", resourceCulture);
        }
    }
}
