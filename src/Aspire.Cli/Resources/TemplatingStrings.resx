<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtLeastOneTemplateFactoryMustBeProvided" xml:space="preserve">
    <value>At least one template factory must be provided.</value>
  </data>
  <data name="AspireStarter_Description" xml:space="preserve">
    <value>Aspire Starter App</value>
  </data>
  <data name="AspireEmpty_Description" xml:space="preserve">
    <value>Aspire Empty App</value>
  </data>
  <data name="AspireAppHost_Description" xml:space="preserve">
    <value>Aspire App Host</value>
  </data>
  <data name="AspireServiceDefaults_Description" xml:space="preserve">
    <value>Aspire Service Defaults</value>
  </data>
  <data name="AspireMSTest_Description" xml:space="preserve">
    <value>Aspire Test Project (MSTest)</value>
  </data>
  <data name="AspireNUnit_Description" xml:space="preserve">
    <value>Aspire Test Project (NUnit)</value>
  </data>
  <data name="AspireXUnit_Description" xml:space="preserve">
    <value>Aspire Test Project (xUnit)</value>
  </data>
  <data name="UseRedisCache_Prompt" xml:space="preserve">
    <value>Use Redis Cache</value>
  </data>
  <data name="UseRedisCache_Description" xml:space="preserve">
    <value>Configures whether to setup the application to use Redis for caching.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="UseRedisCache_UnexpectedChoice" xml:space="preserve">
    <value>Unexpected choice for Redis Cache option</value>
  </data>
  <data name="UseRedisCache_UsingRedisCache" xml:space="preserve">
    <value>Using Redis Cache for caching.</value>
  </data>
  <data name="PromptForTFMOptions_Prompt" xml:space="preserve">
    <value>Do you want to create a test project?</value>
  </data>
  <data name="PromptForTFMOptions_Description" xml:space="preserve">
    <value>Configures whether to create a project for integration tests using MSTest, NUnit, or xUnit.net.</value>
  </data>
  <data name="PromptForTFM_Prompt" xml:space="preserve">
    <value>Select a test framework</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="PromptForTFM_UsingForTesting" xml:space="preserve">
    <value>Using {0} for testing.</value>
  </data>
  <data name="EnterXUnitVersion_Prompt" xml:space="preserve">
    <value>Enter the xUnit.net version to use</value>
  </data>
  <data name="EnterXUnitVersion_Description" xml:space="preserve">
    <value>The version of xUnit.net to use for the test project.</value>
  </data>
  <data name="GettingLatestTemplates" xml:space="preserve">
    <value>Getting latest templates...</value>
  </data>
  <data name="TemplateInstallationFailed" xml:space="preserve">
    <value>The template installation failed with exit code {0}. For more information run with --debug switch.</value>
    <comment>{0} is a number, --debug should not be localized</comment>
  </data>
  <data name="UsingProjectTemplatesVersion" xml:space="preserve">
    <value>Using project templates version: {0}</value>
  </data>
  <data name="CreatingNewProject" xml:space="preserve">
    <value>Creating new Aspire project...</value>
  </data>
  <data name="ProjectCreationFailed" xml:space="preserve">
    <value>Project creation failed with exit code {0}. For more information run with --debug switch.</value>
    <comment>{0} is a number, --debug should not be localized</comment>
  </data>
  <data name="ProjectCreatedSuccessfully" xml:space="preserve">
    <value>Project created successfully in {0}.</value>
    <comment>{0} is a path</comment>
  </data>
  <data name="CertificateTrustError" xml:space="preserve">
    <value>An error occurred while trusting the certificates: {0}</value>
    <comment>{0} is an exception message</comment>
  </data>
  <data name="SearchingForAvailableTemplateVersions" xml:space="preserve">
    <value>Searching for available project template versions...</value>
  </data>
  <data name="NoTemplateVersionsFound" xml:space="preserve">
    <value>No template versions were found. Please check your internet connection or NuGet source configuration.</value>
  </data>
</root>
