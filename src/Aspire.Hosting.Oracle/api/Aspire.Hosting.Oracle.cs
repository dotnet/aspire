//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class OracleDatabaseBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseResource> AddDatabase(this ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> builder, string name, string? databaseName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> AddOracle(this IDistributedApplicationBuilder builder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? password = null, int? port = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> builder, string source) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> builder, string? name = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> WithDbSetupBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> builder, string source) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> WithInitBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.OracleDatabaseServerResource> builder, string source) { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class OracleDatabaseResource : Resource, IResourceWithParent<OracleDatabaseServerResource>, IResourceWithParent, IResource, IResourceWithConnectionString, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public OracleDatabaseResource(string name, string databaseName, OracleDatabaseServerResource parent) : base(default!) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public string DatabaseName { get { throw null; } }

        public OracleDatabaseServerResource Parent { get { throw null; } }
    }

    public partial class OracleDatabaseServerResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public OracleDatabaseServerResource(string name, ParameterResource password) : base(default!, default) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public System.Collections.Generic.IReadOnlyDictionary<string, string> Databases { get { throw null; } }

        public ParameterResource PasswordParameter { get { throw null; } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }
    }
}