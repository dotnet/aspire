#nullable enable
Aspire.Hosting.ApplicationModel.OracleDatabaseResource
Aspire.Hosting.ApplicationModel.OracleDatabaseResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.OracleDatabaseResource.DatabaseName.get -> string!
Aspire.Hosting.ApplicationModel.OracleDatabaseResource.OracleDatabaseResource(string! name, string! databaseName, Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource! parent) -> void
Aspire.Hosting.ApplicationModel.OracleDatabaseResource.Parent.get -> Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource.Databases.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource.OracleDatabaseServerResource(string! name, Aspire.Hosting.ApplicationModel.ParameterResource! password) -> void
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource.PasswordParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource!
Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource.PrimaryEndpoint.get -> Aspire.Hosting.ApplicationModel.EndpointReference!
Aspire.Hosting.OracleDatabaseBuilderExtensions
static Aspire.Hosting.OracleDatabaseBuilderExtensions.AddDatabase(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>! builder, string! name, string? databaseName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseResource!>!
static Aspire.Hosting.OracleDatabaseBuilderExtensions.AddOracle(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? password = null, int? port = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>!
static Aspire.Hosting.OracleDatabaseBuilderExtensions.WithDataBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>! builder, string! source) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>!
static Aspire.Hosting.OracleDatabaseBuilderExtensions.WithDataVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>! builder, string? name = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>!
static Aspire.Hosting.OracleDatabaseBuilderExtensions.WithDbSetupBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>! builder, string! source, bool isReadOnly = true) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>!
static Aspire.Hosting.OracleDatabaseBuilderExtensions.WithInitBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>! builder, string! source, bool isReadOnly = true) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.OracleDatabaseServerResource!>!
