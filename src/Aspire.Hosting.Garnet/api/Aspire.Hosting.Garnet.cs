//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class GarnetBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> AddGarnet(this IDistributedApplicationBuilder builder, string name, int? port = null, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? password = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> AddGarnet(this IDistributedApplicationBuilder builder, string name, int? port) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> builder, string source, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> builder, string? name = null, bool isReadOnly = false) { throw null; }

        [System.Obsolete("This method is obsolete and will be removed in a future version. Use the overload without the keysChangedThreshold parameter.")]
        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> WithPersistence(this ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> builder, System.TimeSpan? interval, long keysChangedThreshold) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> WithPersistence(this ApplicationModel.IResourceBuilder<ApplicationModel.GarnetResource> builder, System.TimeSpan? interval = null) { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class GarnetResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public GarnetResource(string name, ParameterResource password) : base(default!, default) { }

        public GarnetResource(string name) : base(default!, default) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public ParameterResource? PasswordParameter { get { throw null; } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }
    }
}