#nullable enable
Aspire.Hosting.ApplicationModel.IAzureResource
Aspire.Hosting.ApplicationModel.IAzureResource.ProvisioningTaskCompletionSource.get -> System.Threading.Tasks.TaskCompletionSource?
Aspire.Hosting.ApplicationModel.IAzureResource.ProvisioningTaskCompletionSource.set -> void
Aspire.Hosting.Azure.AzureBicepResource
Aspire.Hosting.Azure.AzureBicepResource.AzureBicepResource(string! name, string? templateFile = null, string? templateString = null, string? templateResourceName = null) -> void
Aspire.Hosting.Azure.AzureBicepResource.KnownParameters
Aspire.Hosting.Azure.AzureBicepResource.Outputs.get -> System.Collections.Generic.Dictionary<string!, object?>!
Aspire.Hosting.Azure.AzureBicepResource.Parameters.get -> System.Collections.Generic.Dictionary<string!, object?>!
Aspire.Hosting.Azure.AzureBicepResource.ProvisioningTaskCompletionSource.get -> System.Threading.Tasks.TaskCompletionSource?
Aspire.Hosting.Azure.AzureBicepResource.ProvisioningTaskCompletionSource.set -> void
Aspire.Hosting.Azure.AzureBicepResource.SecretOutputs.get -> System.Collections.Generic.Dictionary<string!, string?>!
Aspire.Hosting.Azure.AzureBicepResourceAnnotation
Aspire.Hosting.Azure.AzureBicepResourceAnnotation.AzureBicepResourceAnnotation(Aspire.Hosting.Azure.AzureBicepResource! resource) -> void
Aspire.Hosting.Azure.AzureBicepResourceAnnotation.Resource.get -> Aspire.Hosting.Azure.AzureBicepResource!
Aspire.Hosting.Azure.BicepOutputReference
Aspire.Hosting.Azure.BicepOutputReference.BicepOutputReference(string! name, Aspire.Hosting.Azure.AzureBicepResource! resource) -> void
Aspire.Hosting.Azure.BicepOutputReference.GetValueAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string?>
Aspire.Hosting.Azure.BicepOutputReference.Name.get -> string!
Aspire.Hosting.Azure.BicepOutputReference.Resource.get -> Aspire.Hosting.Azure.AzureBicepResource!
Aspire.Hosting.Azure.BicepOutputReference.Value.get -> string?
Aspire.Hosting.Azure.BicepOutputReference.ValueExpression.get -> string!
Aspire.Hosting.Azure.BicepSecretOutputReference
Aspire.Hosting.Azure.BicepSecretOutputReference.BicepSecretOutputReference(string! name, Aspire.Hosting.Azure.AzureBicepResource! resource) -> void
Aspire.Hosting.Azure.BicepSecretOutputReference.GetValueAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string?>
Aspire.Hosting.Azure.BicepSecretOutputReference.Name.get -> string!
Aspire.Hosting.Azure.BicepSecretOutputReference.Resource.get -> Aspire.Hosting.Azure.AzureBicepResource!
Aspire.Hosting.Azure.BicepSecretOutputReference.Value.get -> string?
Aspire.Hosting.Azure.BicepSecretOutputReference.ValueExpression.get -> string!
Aspire.Hosting.Azure.BicepTemplateFile
Aspire.Hosting.Azure.BicepTemplateFile.BicepTemplateFile() -> void
Aspire.Hosting.Azure.BicepTemplateFile.BicepTemplateFile(string! path, bool deleteFileOnDispose) -> void
Aspire.Hosting.Azure.BicepTemplateFile.Dispose() -> void
Aspire.Hosting.Azure.BicepTemplateFile.Path.get -> string!
Aspire.Hosting.AzureBicepResourceExtensions
Aspire.Hosting.AzureConstructResource
Aspire.Hosting.AzureConstructResource.AzureConstructResource(string! name, System.Action<Aspire.Hosting.ResourceModuleConstruct!>! configureConstruct) -> void
Aspire.Hosting.AzureConstructResource.ConfigureConstruct.get -> System.Action<Aspire.Hosting.ResourceModuleConstruct!>!
Aspire.Hosting.AzureConstructResourceExtensions
Aspire.Hosting.AzureProvisionerExtensions
Aspire.Hosting.AzureResourceExtensions
Aspire.Hosting.ResourceModuleConstruct
Aspire.Hosting.ResourceModuleConstruct.PrincipalIdParameter.get -> Azure.Provisioning.Parameter
Aspire.Hosting.ResourceModuleConstruct.PrincipalNameParameter.get -> Azure.Provisioning.Parameter
Aspire.Hosting.ResourceModuleConstruct.PrincipalTypeParameter.get -> Azure.Provisioning.Parameter
Aspire.Hosting.ResourceModuleConstruct.Resource.get -> Aspire.Hosting.AzureConstructResource!
override Aspire.Hosting.AzureConstructResource.GetBicepTemplateFile(string? directory = null, bool deleteTemporaryFileOnDispose = true) -> Aspire.Hosting.Azure.BicepTemplateFile
override Aspire.Hosting.AzureConstructResource.GetBicepTemplateString() -> string!
static Aspire.Hosting.AzureBicepResourceExtensions.AddBicepTemplate(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string! bicepFile) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureBicepResource!>!
static Aspire.Hosting.AzureBicepResourceExtensions.AddBicepTemplateString(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string! bicepContent) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureBicepResource!>!
static Aspire.Hosting.AzureBicepResourceExtensions.GetOutput(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureBicepResource!>! builder, string! name) -> Aspire.Hosting.Azure.BicepOutputReference!
static Aspire.Hosting.AzureBicepResourceExtensions.GetSecretOutput(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureBicepResource!>! builder, string! name) -> Aspire.Hosting.Azure.BicepSecretOutputReference!
static Aspire.Hosting.AzureBicepResourceExtensions.WithEnvironment<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder, string! name, Aspire.Hosting.Azure.BicepOutputReference! bicepOutputReference) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithEnvironment<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder, string! name, Aspire.Hosting.Azure.BicepSecretOutputReference! bicepOutputReference) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.ApplicationModel.ParameterResource! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.Azure.BicepOutputReference! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, string! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, System.Collections.Generic.IEnumerable<string!>! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, System.Func<object?>! valueCallback) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureBicepResourceExtensions.WithParameter<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, System.Text.Json.Nodes.JsonNode! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureConstructResourceExtensions.AddAzureConstruct(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, System.Action<Aspire.Hosting.ResourceModuleConstruct!>! configureConstruct) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.AzureConstructResource!>!
static Aspire.Hosting.AzureConstructResourceExtensions.AssignProperty<T>(this Azure.Provisioning.Resource<T>! resource, System.Linq.Expressions.Expression<System.Func<T, object?>!>! propertySelector, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! parameterResourceBuilder, string? parameterName = null) -> void
static Aspire.Hosting.AzureConstructResourceExtensions.AssignProperty<T>(this Azure.Provisioning.Resource<T>! resource, System.Linq.Expressions.Expression<System.Func<T, object?>!>! propertySelector, Aspire.Hosting.Azure.BicepOutputReference! outputReference, string? parameterName = null) -> void
static Aspire.Hosting.AzureConstructResourceExtensions.ConfigureConstruct<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, System.Action<Aspire.Hosting.ResourceModuleConstruct!>! configure) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.AzureProvisionerExtensions.AddAzureProvisioning(this Aspire.Hosting.IDistributedApplicationBuilder! builder) -> Aspire.Hosting.IDistributedApplicationBuilder!
static Aspire.Hosting.AzureResourceExtensions.PublishAsConnectionString<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.KeyVaultName -> string!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.Location -> string!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.LogAnalyticsWorkspaceId -> string!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.PrincipalId -> string!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.PrincipalName -> string!
static readonly Aspire.Hosting.Azure.AzureBicepResource.KnownParameters.PrincipalType -> string!
virtual Aspire.Hosting.Azure.AzureBicepResource.GetBicepTemplateFile(string? directory = null, bool deleteTemporaryFileOnDispose = true) -> Aspire.Hosting.Azure.BicepTemplateFile
virtual Aspire.Hosting.Azure.AzureBicepResource.GetBicepTemplateString() -> string!
virtual Aspire.Hosting.Azure.AzureBicepResource.WriteToManifest(Aspire.Hosting.Publishing.ManifestPublishingContext! context) -> void
