//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting.Azure.Kusto
{
    public static partial class AzureKustoBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<AzureKustoClusterResource> AddAzureKustoCluster(this IDistributedApplicationBuilder builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<AzureKustoReadWriteDatabaseResource> AddReadWriteDatabase(this ApplicationModel.IResourceBuilder<AzureKustoClusterResource> builder, string name, string? databaseName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<AzureKustoClusterResource> RunAsEmulator(this ApplicationModel.IResourceBuilder<AzureKustoClusterResource> builder, System.Action<ApplicationModel.IResourceBuilder<AzureKustoEmulatorResource>>? configureContainer = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<AzureKustoReadWriteDatabaseResource> WithCreationScript(this ApplicationModel.IResourceBuilder<AzureKustoReadWriteDatabaseResource> builder, string script) { throw null; }

        public static ApplicationModel.IResourceBuilder<AzureKustoEmulatorResource> WithHostPort(this ApplicationModel.IResourceBuilder<AzureKustoEmulatorResource> builder, int port) { throw null; }
    }

    public partial class AzureKustoClusterResource : AzureProvisioningResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IResource, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, ApplicationModel.IResourceWithEndpoints
    {
        public AzureKustoClusterResource(string name, System.Action<AzureResourceInfrastructure> configureInfrastructure) : base(default!, default!) { }

        public BicepOutputReference ClusterUri { get { throw null; } }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public bool IsEmulator { get { throw null; } }

        public BicepOutputReference NameOutputReference { get { throw null; } }

        public override global::Azure.Provisioning.Primitives.ProvisionableResource AddAsExistingResource(AzureResourceInfrastructure infra) { throw null; }

        public override void AddRoleAssignments(IAddRoleAssignmentsContext roleAssignmentContext) { }
    }

    public partial class AzureKustoEmulatorResource : ApplicationModel.ContainerResource
    {
        public AzureKustoEmulatorResource(AzureKustoClusterResource innerResource) : base(default!, default) { }

        public override ApplicationModel.ResourceAnnotationCollection Annotations { get { throw null; } }
    }

    public partial class AzureKustoReadWriteDatabaseResource : ApplicationModel.Resource, ApplicationModel.IResourceWithParent<AzureKustoClusterResource>, ApplicationModel.IResourceWithParent, ApplicationModel.IResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences
    {
        public AzureKustoReadWriteDatabaseResource(string name, string databaseName, AzureKustoClusterResource kustoParentResource) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public string DatabaseName { get { throw null; } }

        public AzureKustoClusterResource Parent { get { throw null; } }
    }
}