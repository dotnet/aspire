//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class MySqlBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.MySqlDatabaseResource> AddDatabase(this ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> builder, string name, string? databaseName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> AddMySql(this IDistributedApplicationBuilder builder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? password = null, int? port = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> builder, string source, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> builder, string? name = null, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<MySql.PhpMyAdminContainerResource> WithHostPort(this ApplicationModel.IResourceBuilder<MySql.PhpMyAdminContainerResource> builder, int? port) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> WithInitBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.MySqlServerResource> builder, string source, bool isReadOnly = true) { throw null; }

        public static ApplicationModel.IResourceBuilder<T> WithPhpMyAdmin<T>(this ApplicationModel.IResourceBuilder<T> builder, System.Action<ApplicationModel.IResourceBuilder<MySql.PhpMyAdminContainerResource>>? configureContainer = null, string? containerName = null)
            where T : ApplicationModel.MySqlServerResource { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class MySqlDatabaseResource : Resource, IResourceWithParent<MySqlServerResource>, IResourceWithParent, IResource, IResourceWithConnectionString, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public MySqlDatabaseResource(string name, string databaseName, MySqlServerResource parent) : base(default!) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public string DatabaseName { get { throw null; } }

        public MySqlServerResource Parent { get { throw null; } }
    }

    public partial class MySqlServerResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public MySqlServerResource(string name, ParameterResource password) : base(default!, default) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public System.Collections.Generic.IReadOnlyDictionary<string, string> Databases { get { throw null; } }

        public ParameterResource PasswordParameter { get { throw null; } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }
    }
}

namespace Aspire.Hosting.MySql
{
    public sealed partial class PhpMyAdminContainerResource : ApplicationModel.ContainerResource
    {
        public PhpMyAdminContainerResource(string name) : base(default!, default) { }
    }
}