#nullable enable
Aspire.RabbitMQ.Client.RabbitMQClientSettings
Aspire.RabbitMQ.Client.RabbitMQClientSettings.ConnectionString.get -> string?
Aspire.RabbitMQ.Client.RabbitMQClientSettings.ConnectionString.set -> void
Aspire.RabbitMQ.Client.RabbitMQClientSettings.DisableHealthChecks.get -> bool
Aspire.RabbitMQ.Client.RabbitMQClientSettings.DisableHealthChecks.set -> void
Aspire.RabbitMQ.Client.RabbitMQClientSettings.DisableTracing.get -> bool
Aspire.RabbitMQ.Client.RabbitMQClientSettings.DisableTracing.set -> void
Aspire.RabbitMQ.Client.RabbitMQClientSettings.MaxConnectRetryCount.get -> int
Aspire.RabbitMQ.Client.RabbitMQClientSettings.MaxConnectRetryCount.set -> void
Aspire.RabbitMQ.Client.RabbitMQClientSettings.RabbitMQClientSettings() -> void
Microsoft.Extensions.Hosting.AspireRabbitMQExtensions
static Microsoft.Extensions.Hosting.AspireRabbitMQExtensions.AddKeyedRabbitMQClient(this Microsoft.Extensions.Hosting.IHostApplicationBuilder! builder, string! name, System.Action<Aspire.RabbitMQ.Client.RabbitMQClientSettings!>? configureSettings = null, System.Action<RabbitMQ.Client.ConnectionFactory!>? configureConnectionFactory = null) -> void
static Microsoft.Extensions.Hosting.AspireRabbitMQExtensions.AddRabbitMQClient(this Microsoft.Extensions.Hosting.IHostApplicationBuilder! builder, string! connectionName, System.Action<Aspire.RabbitMQ.Client.RabbitMQClientSettings!>? configureSettings = null, System.Action<RabbitMQ.Client.ConnectionFactory!>? configureConnectionFactory = null) -> void
