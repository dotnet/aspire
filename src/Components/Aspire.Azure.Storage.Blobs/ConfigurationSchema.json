{
  "definitions": {
    "logLevel": {
      "properties": {
        "Azure": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Azure.Core": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Azure.Identity": {
          "$ref": "#/definitions/logLevelThreshold"
        }
      }
    }
  },
  "properties": {
    "Aspire": {
      "type": "object",
      "properties": {
        "Azure": {
          "type": "object",
          "properties": {
            "Storage": {
              "type": "object",
              "properties": {
                "Blobs": {
                  "type": "object",
                  "properties": {
                    "ServiceUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Gets or sets the 'Uri' referencing the Blob service. This is likely to be similar to \"https://{account_name}.blob.core.windows.net\""
                    },
                    "HealthChecks": {
                      "type": "boolean",
                      "description": "Gets or sets a boolean value that indicates whether the Blob Storage health check is enabled or not.",
                      "default": true
                    },
                    "Tracing": {
                      "type": "boolean",
                      "description": "Gets or sets a boolean value that indicates whether the OpenTelemetry tracing is enabled or not.",
                      "default": false
                    },
                    "ClientOptions": {
                      "type": "object",
                      "description": "Provides the client configuration options for connecting to Azure Blob Storage.",
                      "properties": {
                        "EnableTenantDiscovery": {
                          "type": "boolean",
                          "description": "Enables tenant discovery through the authorization challenge when the client is configured to use a TokenCredential. When enabled, the client will attempt an initial un-authorized request to prompt a challenge in order to discover the correct tenant for the resource."
                        },
                        "EncryptionScope": {
                          "type": "string",
                          "description": "Gets the EncryptionScope to be used when making requests."
                        },
                        "GeoRedundantSecondaryUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Gets or sets the secondary storage Uri that can be read from for the storage account if the account is enabled for RA-GRS."
                        },
                        "Retry": {
                          "type": "object",
                          "description": "The set of options that can be specified to influence how retry attempts are made, and a failure is eligible to be retried",
                          "properties": {
                            "Delay": {
                              "type": "string",
                              "format": "duration",
                              "description": "The delay between retry attempts for a fixed approach or the delay on which to base calculations for a backoff-based approach. If the service provides a Retry-After response header, the next retry will be delayed by the duration specified by the header value."
                            },
                            "MaxDelay": {
                              "type": "string",
                              "format": "duration",
                              "description": "The maximum permissible delay between retry attempts when the service does not provide a Retry-After response header. If the service provides a Retry-After response header, the next retry will be delayed by the duration specified by the header value."
                            },
                            "MaxRetries": {
                              "type": "integer",
                              "description": "The maximum number of retry attempts before giving up."
                            },
                            "Mode": {
                              "enum": [ "Fixed", "Exponential" ],
                              "description": "The approach to use for calculating retry delays."
                            },
                            "NetworkTimeout": {
                              "type": "string",
                              "format": "duration",
                              "description": "The timeout applied to an individual network operations."
                            }
                          }
                        },
                        "TrimBlobNameSlashes": {
                          "type": "boolean",
                          "description": "Whether to trim leading and trailing slashes on a blob name when using GetBlobClient(String) and similar methods.",
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "type": "object"
}
