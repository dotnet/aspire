{
  "definitions": {
    "logLevel": {
      "properties": {
        "Azure": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Azure.Core": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Azure.Identity": {
          "$ref": "#/definitions/logLevelThreshold"
        }
      }
    }
  },
  "properties": {
    "Aspire": {
      "type": "object",
      "properties": {
        "Azure": {
          "type": "object",
          "properties": {
            "Storage": {
              "type": "object",
              "properties": {
                "Blobs": {
                  "type": "object",
                  "properties": {
                    "ClientOptions": {
                      "type": "object",
                      "properties": {
                        "Diagnostics": {
                          "type": "object",
                          "properties": {
                            "ApplicationId": {
                              "type": "string",
                              "description": "Gets or sets the value sent as the first part of \"User-Agent\" headers for all requests issues by this client. Defaults to 'Azure.Core.DiagnosticsOptions.DefaultApplicationId'."
                            },
                            "DefaultApplicationId": {
                              "type": "string",
                              "description": "Gets or sets the default application id. Default application id would be set on all instances."
                            },
                            "IsDistributedTracingEnabled": {
                              "type": "boolean",
                              "description": "Gets or sets value indicating whether distributed tracing activities ( 'System.Diagnostics.Activity' ) are going to be created for the clients methods calls and HTTP calls."
                            },
                            "IsLoggingContentEnabled": {
                              "type": "boolean",
                              "description": "Gets or sets value indicating if request or response content should be logged."
                            },
                            "IsLoggingEnabled": {
                              "type": "boolean",
                              "description": "Get or sets value indicating whether HTTP pipeline logging is enabled."
                            },
                            "IsTelemetryEnabled": {
                              "type": "boolean",
                              "description": "Gets or sets value indicating whether the \"User-Agent\" header containing 'Azure.Core.DiagnosticsOptions.ApplicationId' , client library package name and version, 'System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription' and 'System.Runtime.InteropServices.RuntimeInformation.OSDescription' should be sent.\nThe default value can be controlled process wide by setting AZURE_TELEMETRY_DISABLED to true , false , 1 or 0."
                            },
                            "LoggedContentSizeLimit": {
                              "type": "integer",
                              "description": "Gets or sets value indicating maximum size of content to log in bytes. Defaults to 4096."
                            }
                          },
                          "description": "Gets the client diagnostic options."
                        },
                        "EnableTenantDiscovery": {
                          "type": "boolean",
                          "description": "Enables tenant discovery through the authorization challenge when the client is configured to use a TokenCredential.\nWhen enabled, the client will attempt an initial un-authorized request to prompt a challenge in order to discover the correct tenant for the resource."
                        },
                        "EncryptionScope": {
                          "type": "string",
                          "description": "Gets the 'Azure.Storage.Blobs.BlobClientOptions.EncryptionScope' to be used when making requests."
                        },
                        "GeoRedundantSecondaryUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Gets or sets the secondary storage 'System.Uri' that can be read from for the storage account if the\naccount is enabled for RA-GRS.\n\nIf this property is set, the secondary Uri will be used for GET or HEAD requests during retries.\nIf the status of the response from the secondary Uri is a 404, then subsequent retries for\nthe request will not use the secondary Uri again, as this indicates that the resource\nmay not have propagated there yet. Otherwise, subsequent retries will alternate back and forth\nbetween primary and secondary Uri."
                        },
                        "Retry": {
                          "type": "object",
                          "properties": {
                            "Delay": {
                              "type": "string",
                              "pattern": "^-?(\\d{1,7}|((\\d{1,7}[\\.:])?(([01]?\\d|2[0-3]):[0-5]?\\d|([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d)(\\.\\d{1,7})?))$",
                              "description": "The delay between retry attempts for a fixed approach or the delay\non which to base calculations for a backoff-based approach.\nIf the service provides a Retry-After response header, the next retry will be delayed by the duration specified by the header value."
                            },
                            "MaxDelay": {
                              "type": "string",
                              "pattern": "^-?(\\d{1,7}|((\\d{1,7}[\\.:])?(([01]?\\d|2[0-3]):[0-5]?\\d|([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d)(\\.\\d{1,7})?))$",
                              "description": "The maximum permissible delay between retry attempts when the service does not provide a Retry-After response header.\nIf the service provides a Retry-After response header, the next retry will be delayed by the duration specified by the header value."
                            },
                            "MaxRetries": {
                              "type": "integer",
                              "description": "The maximum number of retry attempts before giving up."
                            },
                            "Mode": {
                              "enum": [
                                "Fixed",
                                "Exponential"
                              ],
                              "description": "The approach to use for calculating retry delays."
                            },
                            "NetworkTimeout": {
                              "type": "string",
                              "pattern": "^-?(\\d{1,7}|((\\d{1,7}[\\.:])?(([01]?\\d|2[0-3]):[0-5]?\\d|([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d)(\\.\\d{1,7})?))$",
                              "description": "The timeout applied to an individual network operations."
                            }
                          },
                          "description": "Gets the client retry options."
                        },
                        "TransferValidation": {
                          "type": "object",
                          "properties": {
                            "Download": {
                              "type": "object",
                              "properties": {
                                "AutoValidateChecksum": {
                                  "type": "boolean",
                                  "description": "Defaults to true. False can only be specified on specific operations and not at the client level.\nIndicates whether the SDK should validate the content\nbody against the content hash before returning contents to the caller.\nIf set to false, caller is responsible for extracting the hash out\nof the 'Azure.Response`1' and validating the hash themselves."
                                },
                                "ChecksumAlgorithm": {
                                  "enum": [
                                    "Auto",
                                    "None",
                                    "MD5",
                                    "StorageCrc64"
                                  ],
                                  "description": "Checksum algorithm to use."
                                }
                              },
                              "description": "Options on download."
                            },
                            "Upload": {
                              "type": "object",
                              "properties": {
                                "ChecksumAlgorithm": {
                                  "enum": [
                                    "Auto",
                                    "None",
                                    "MD5",
                                    "StorageCrc64"
                                  ],
                                  "description": "Checksum algorithm to use."
                                }
                              },
                              "description": "Options on upload."
                            }
                          },
                          "description": "Configures whether to send or receive checksum headers for blob uploads and downloads. Downloads\ncan optionally validate that the content matches the checksum."
                        },
                        "TrimBlobNameSlashes": {
                          "type": "boolean",
                          "description": "Whether to trim leading and trailing slashes on a blob name when using 'Azure.Storage.Blobs.BlobContainerClient.GetBlobClient(System.String)' and similar methods.\nDefaults to true for backwards compatibility."
                        }
                      },
                      "description": "Provides the client configuration options for connecting to Azure Blob\nStorage."
                    },
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string used to connect to the blob service."
                    },
                    "DisableHealthChecks": {
                      "type": "boolean",
                      "description": "Gets or sets a boolean value that indicates whether the Blob Storage health check is disabled or not.",
                      "default": false
                    },
                    "DisableTracing": {
                      "type": "boolean",
                      "description": "Gets or sets a boolean value that indicates whether the OpenTelemetry tracing is disabled or not.",
                      "default": false
                    },
                    "ServiceUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "A 'System.Uri' referencing the blob service.\nThis is likely to be similar to \"https://{account_name}.blob.core.windows.net\"."
                    }
                  },
                  "description": "Provides the client configuration settings for connecting to Azure Blob Storage."
                }
              }
            }
          }
        }
      }
    }
  },
  "type": "object"
}
