//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class AspireKeycloakExtensions
    {
        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakJwtBearer(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, System.Action<AspNetCore.Authentication.JwtBearer.JwtBearerOptions>? configureOptions) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakJwtBearer(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, string authenticationScheme, System.Action<AspNetCore.Authentication.JwtBearer.JwtBearerOptions>? configureOptions) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakJwtBearer(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, string authenticationScheme) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakJwtBearer(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakOpenIdConnect(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, System.Action<AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions>? configureOptions) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakOpenIdConnect(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, string authenticationScheme, System.Action<AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions>? configureOptions) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakOpenIdConnect(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm, string authenticationScheme) { throw null; }

        public static AspNetCore.Authentication.AuthenticationBuilder AddKeycloakOpenIdConnect(this AspNetCore.Authentication.AuthenticationBuilder builder, string serviceName, string realm) { throw null; }
    }
}