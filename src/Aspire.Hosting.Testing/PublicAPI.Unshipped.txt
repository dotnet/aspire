#nullable enable
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.CreateHttpClient(string! resourceName, string? endpointName = null) -> System.Net.Http.HttpClient!
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.DistributedApplicationFactory() -> void
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.GetConnectionString(string! resourceName) -> System.Threading.Tasks.ValueTask<string?>
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.GetEndpoint(string! resourceName, string? endpointName = null) -> System.Uri!
Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.StartAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Aspire.Hosting.Testing.DistributedApplicationHostingTestingExtensions
Aspire.Hosting.Testing.DistributedApplicationTestingBuilder
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.AddResource<T>(T resource) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.AppHostDirectory.get -> string!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.BuildAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Aspire.Hosting.DistributedApplication!>!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.Configuration.get -> Microsoft.Extensions.Configuration.ConfigurationManager!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.CreateResourceBuilder<T>(T resource) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.Environment.get -> Microsoft.Extensions.Hosting.IHostEnvironment!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.ExecutionContext.get -> Aspire.Hosting.DistributedApplicationExecutionContext!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.Resources.get -> Aspire.Hosting.ApplicationModel.IResourceCollection!
Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Aspire.Hosting.Testing.DistributedApplicationHostingTestingExtensions.CreateHttpClient(this Aspire.Hosting.DistributedApplication! app, string! resourceName, string? endpointName = null) -> System.Net.Http.HttpClient!
static Aspire.Hosting.Testing.DistributedApplicationHostingTestingExtensions.GetConnectionStringAsync(this Aspire.Hosting.DistributedApplication! app, string! resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string?>
static Aspire.Hosting.Testing.DistributedApplicationHostingTestingExtensions.GetEndpoint(this Aspire.Hosting.DistributedApplication! app, string! resourceName, string? endpointName = null) -> System.Uri!
static Aspire.Hosting.Testing.DistributedApplicationTestingBuilder.CreateAsync<TEntryPoint>(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder!>!
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.Dispose() -> void
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.DisposeAsync() -> System.Threading.Tasks.ValueTask
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.OnBuilderCreated(Aspire.Hosting.DistributedApplicationBuilder! applicationBuilder) -> void
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.OnBuilderCreating(Aspire.Hosting.DistributedApplicationOptions! applicationOptions, Microsoft.Extensions.Hosting.HostApplicationBuilderSettings! hostOptions) -> void
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.OnBuilding(Aspire.Hosting.DistributedApplicationBuilder! applicationBuilder) -> void
virtual Aspire.Hosting.Testing.DistributedApplicationFactory<TEntryPoint>.OnBuilt(Aspire.Hosting.DistributedApplication! application) -> void
