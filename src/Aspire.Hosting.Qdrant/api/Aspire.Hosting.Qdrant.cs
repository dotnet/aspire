//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class QdrantBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> AddQdrant(this IDistributedApplicationBuilder builder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? apiKey = null, int? grpcPort = null, int? httpPort = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> builder, string source, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> builder, string? name = null, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<TDestination> WithReference<TDestination>(this ApplicationModel.IResourceBuilder<TDestination> builder, ApplicationModel.IResourceBuilder<ApplicationModel.QdrantServerResource> qdrantResource)
            where TDestination : ApplicationModel.IResourceWithEnvironment { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class QdrantServerResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public QdrantServerResource(string name, ParameterResource apiKey) : base(default!, default) { }

        public ParameterResource ApiKeyParameter { get { throw null; } }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public ReferenceExpression HttpConnectionStringExpression { get { throw null; } }

        public EndpointReference HttpEndpoint { get { throw null; } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }
    }
}