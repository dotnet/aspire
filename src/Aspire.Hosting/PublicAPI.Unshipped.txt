#nullable enable
Aspire.Hosting.ApplicationModel.UserSecretsParameterDefault
Aspire.Hosting.ApplicationModel.UserSecretsParameterDefault.UserSecretsParameterDefault(System.Reflection.Assembly? appHostAssembly, string! applicationName, string! parameterName, Aspire.Hosting.ApplicationModel.ParameterDefault! parameterDefault) -> void
Aspire.Hosting.DistributedApplicationBuilder.AppHostAssembly.get -> System.Reflection.Assembly?
Aspire.Hosting.IDistributedApplicationBuilder.AppHostAssembly.get -> System.Reflection.Assembly?
override Aspire.Hosting.ApplicationModel.UserSecretsParameterDefault.GetDefaultValue() -> string!
override Aspire.Hosting.ApplicationModel.UserSecretsParameterDefault.WriteToManifest(Aspire.Hosting.Publishing.ManifestPublishingContext! context) -> void
static Aspire.Hosting.ParameterResourceBuilderExtensions.CreateGeneratedParameter(Microsoft.Extensions.Configuration.IConfiguration! configuration, string! name, bool secret, Aspire.Hosting.ApplicationModel.GenerateParameterDefault! parameterDefault) -> Aspire.Hosting.ApplicationModel.ParameterResource!
static Aspire.Hosting.ContainerResourceBuilderExtensions.AddDockerfile(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, string! contextPath, string? dockerfilePath = null, string? stage = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ContainerResource!>!
static Aspire.Hosting.ContainerResourceBuilderExtensions.WithDockerfile<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! contextPath, string? dockerfilePath = null, string? stage = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ContainerResourceBuilderExtensions.WithBuildArg<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ContainerResourceBuilderExtensions.WithBuildArg<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, object! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ContainerResourceBuilderExtensions.WithBuildSecret<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! value) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ContainerResourceBuilderExtensions.WithBuildSecret<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! name, System.IO.FileInfo! filePath) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
