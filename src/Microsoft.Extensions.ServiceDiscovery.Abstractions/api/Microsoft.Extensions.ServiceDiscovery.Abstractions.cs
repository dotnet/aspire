//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.ServiceDiscovery
{
    public partial interface IHostNameFeature
    {
        string HostName { get; }
    }

    public partial interface IServiceEndpointBuilder
    {
        System.Collections.Generic.IList<ServiceEndpoint> Endpoints { get; }

        AspNetCore.Http.Features.IFeatureCollection Features { get; }

        void AddChangeToken(Primitives.IChangeToken changeToken);
    }

    public partial interface IServiceEndpointProvider : System.IAsyncDisposable
    {
        System.Threading.Tasks.ValueTask PopulateAsync(IServiceEndpointBuilder endpoints, System.Threading.CancellationToken cancellationToken);
    }

    public partial interface IServiceEndpointProviderFactory
    {
        bool TryCreateProvider(ServiceEndpointQuery query, out IServiceEndpointProvider? provider);
    }

    public abstract partial class ServiceEndpoint
    {
        public abstract System.Net.EndPoint EndPoint { get; }
        public abstract AspNetCore.Http.Features.IFeatureCollection Features { get; }

        public static ServiceEndpoint Create(System.Net.EndPoint endPoint, AspNetCore.Http.Features.IFeatureCollection? features = null) { throw null; }
    }

    public sealed partial class ServiceEndpointQuery
    {
        internal ServiceEndpointQuery() { }

        public string? EndpointName { get { throw null; } }

        public System.Collections.Generic.IReadOnlyList<string> IncludedSchemes { get { throw null; } }

        public string ServiceName { get { throw null; } }

        public override string? ToString() { throw null; }

        public static bool TryParse(string input, out ServiceEndpointQuery? query) { throw null; }
    }

    [System.Diagnostics.DebuggerDisplay("{ToString(),nq}")]
    public sealed partial class ServiceEndpointSource
    {
        public ServiceEndpointSource(System.Collections.Generic.List<ServiceEndpoint>? endpoints, Primitives.IChangeToken changeToken, AspNetCore.Http.Features.IFeatureCollection features) { }

        public Primitives.IChangeToken ChangeToken { get { throw null; } }

        public System.Collections.Generic.IReadOnlyList<ServiceEndpoint> Endpoints { get { throw null; } }

        public AspNetCore.Http.Features.IFeatureCollection Features { get { throw null; } }

        public override string ToString() { throw null; }
    }
}