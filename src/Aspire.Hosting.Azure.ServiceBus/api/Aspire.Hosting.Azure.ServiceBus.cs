//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class AzureServiceBusExtensions
    {
        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> AddAzureServiceBus(this IDistributedApplicationBuilder builder, string name) { throw null; }

        [System.Obsolete("This method is obsolete because it has the wrong return type and will be removed in a future version. Use AddServiceBusQueue instead to add an Azure Service Bus Queue.")]
        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> AddQueue(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusQueueResource> AddServiceBusQueue(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string name, string? queueName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusSubscriptionResource> AddServiceBusSubscription(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusTopicResource> builder, string name, string? subscriptionName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusTopicResource> AddServiceBusTopic(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string name, string? topicName = null) { throw null; }

        [System.Obsolete("This method is obsolete and will be removed in a future version. Use AddServiceBusSubscription instead to add an Azure Service Bus Subscription to a Topic.")]
        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> AddSubscription(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string topicName, string subscriptionName) { throw null; }

        [System.Obsolete("This method is obsolete because it has the wrong return type and will be removed in a future version. Use AddServiceBusTopic and AddServiceBusSubscription instead to add an Azure Service Bus Topic and Subscriptions.")]
        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> AddTopic(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string name, string[] subscriptions) { throw null; }

        [System.Obsolete("This method is obsolete because it has the wrong return type and will be removed in a future version. Use AddServiceBusTopic instead to add an Azure Service Bus Topic.")]
        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> AddTopic(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> RunAsEmulator(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusResource> builder, System.Action<ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource>>? configureContainer = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> WithConfiguration(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> builder, System.Action<System.Text.Json.Nodes.JsonNode> configJson) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> WithConfigurationFile(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> builder, string path) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> WithHostPort(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusEmulatorResource> builder, int? port) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusQueueResource> WithProperties(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusQueueResource> builder, System.Action<Azure.AzureServiceBusQueueResource> configure) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusSubscriptionResource> WithProperties(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusSubscriptionResource> builder, System.Action<Azure.AzureServiceBusSubscriptionResource> configure) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureServiceBusTopicResource> WithProperties(this ApplicationModel.IResourceBuilder<Azure.AzureServiceBusTopicResource> builder, System.Action<Azure.AzureServiceBusTopicResource> configure) { throw null; }
    }
}

namespace Aspire.Hosting.Azure
{
    public partial class AzureServiceBusCorrelationFilter
    {
        public string? ContentType { get { throw null; } set { } }

        public string? CorrelationId { get { throw null; } set { } }

        public string? MessageId { get { throw null; } set { } }

        public System.Collections.Generic.Dictionary<string, object> Properties { get { throw null; } set { } }

        public string? ReplyTo { get { throw null; } set { } }

        public string? ReplyToSessionId { get { throw null; } set { } }

        public bool? RequiresPreprocessing { get { throw null; } set { } }

        public string? SendTo { get { throw null; } set { } }

        public string? SessionId { get { throw null; } set { } }

        public string? Subject { get { throw null; } set { } }
    }

    public partial class AzureServiceBusEmulatorResource : ApplicationModel.ContainerResource, ApplicationModel.IResource
    {
        public AzureServiceBusEmulatorResource(AzureServiceBusResource innerResource) : base(default!, default) { }

        public override ApplicationModel.ResourceAnnotationCollection Annotations { get { throw null; } }
    }

    public enum AzureServiceBusFilterType
    {
        SqlFilter = 0,
        CorrelationFilter = 1
    }

    public partial class AzureServiceBusQueueResource : ApplicationModel.Resource, ApplicationModel.IResourceWithParent<AzureServiceBusResource>, ApplicationModel.IResourceWithParent, ApplicationModel.IResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, IResourceWithAzureFunctionsConfig
    {
        public AzureServiceBusQueueResource(string name, string queueName, AzureServiceBusResource parent) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public bool? DeadLetteringOnMessageExpiration { get { throw null; } set { } }

        public System.TimeSpan? DefaultMessageTimeToLive { get { throw null; } set { } }

        public System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get { throw null; } set { } }

        public string? ForwardDeadLetteredMessagesTo { get { throw null; } set { } }

        public string? ForwardTo { get { throw null; } set { } }

        public System.TimeSpan? LockDuration { get { throw null; } set { } }

        public int? MaxDeliveryCount { get { throw null; } set { } }

        public AzureServiceBusResource Parent { get { throw null; } }

        public string QueueName { get { throw null; } set { } }

        public bool? RequiresDuplicateDetection { get { throw null; } set { } }

        public bool? RequiresSession { get { throw null; } set { } }

        void IResourceWithAzureFunctionsConfig.ApplyAzureFunctionsConfiguration(System.Collections.Generic.IDictionary<string, object> target, string connectionName) { }
    }

    public partial class AzureServiceBusResource : AzureProvisioningResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IResource, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, IResourceWithAzureFunctionsConfig, ApplicationModel.IResourceWithEndpoints
    {
        public AzureServiceBusResource(string name, System.Action<AzureResourceInfrastructure> configureInfrastructure) : base(default!, default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public bool IsEmulator { get { throw null; } }

        public BicepOutputReference ServiceBusEndpoint { get { throw null; } }

        void IResourceWithAzureFunctionsConfig.ApplyAzureFunctionsConfiguration(System.Collections.Generic.IDictionary<string, object> target, string connectionName) { }
    }

    public partial class AzureServiceBusRule
    {
        public AzureServiceBusRule(string name) { }

        public AzureServiceBusCorrelationFilter CorrelationFilter { get { throw null; } set { } }

        public AzureServiceBusFilterType FilterType { get { throw null; } set { } }

        public string Name { get { throw null; } set { } }
    }

    public partial class AzureServiceBusSubscriptionResource : ApplicationModel.Resource, ApplicationModel.IResourceWithParent<AzureServiceBusTopicResource>, ApplicationModel.IResourceWithParent, ApplicationModel.IResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, IResourceWithAzureFunctionsConfig
    {
        public AzureServiceBusSubscriptionResource(string name, string subscriptionName, AzureServiceBusTopicResource parent) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public bool? DeadLetteringOnMessageExpiration { get { throw null; } set { } }

        public System.TimeSpan? DefaultMessageTimeToLive { get { throw null; } set { } }

        public string? ForwardDeadLetteredMessagesTo { get { throw null; } set { } }

        public string? ForwardTo { get { throw null; } set { } }

        public System.TimeSpan? LockDuration { get { throw null; } set { } }

        public int? MaxDeliveryCount { get { throw null; } set { } }

        public AzureServiceBusTopicResource Parent { get { throw null; } }

        public bool? RequiresSession { get { throw null; } set { } }

        public System.Collections.Generic.List<AzureServiceBusRule> Rules { get { throw null; } }

        public string SubscriptionName { get { throw null; } set { } }

        void IResourceWithAzureFunctionsConfig.ApplyAzureFunctionsConfiguration(System.Collections.Generic.IDictionary<string, object> target, string connectionName) { }
    }

    public partial class AzureServiceBusTopicResource : ApplicationModel.Resource, ApplicationModel.IResourceWithParent<AzureServiceBusResource>, ApplicationModel.IResourceWithParent, ApplicationModel.IResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences, IResourceWithAzureFunctionsConfig
    {
        public AzureServiceBusTopicResource(string name, string topicName, AzureServiceBusResource parent) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public System.TimeSpan? DefaultMessageTimeToLive { get { throw null; } set { } }

        public System.TimeSpan? DuplicateDetectionHistoryTimeWindow { get { throw null; } set { } }

        public AzureServiceBusResource Parent { get { throw null; } }

        public bool? RequiresDuplicateDetection { get { throw null; } set { } }

        public string TopicName { get { throw null; } set { } }

        void IResourceWithAzureFunctionsConfig.ApplyAzureFunctionsConfiguration(System.Collections.Generic.IDictionary<string, object> target, string connectionName) { }
    }
}