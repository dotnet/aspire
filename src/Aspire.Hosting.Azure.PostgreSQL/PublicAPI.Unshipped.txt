#nullable enable
*REMOVED*static Aspire.Hosting.AzurePostgresExtensions.AsAzurePostgresFlexibleServer(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.PostgresServerResource!>! builder, System.Action<Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresResource!>!, Aspire.Hosting.ResourceModuleConstruct!, Azure.Provisioning.PostgreSql.PostgreSqlFlexibleServer!>? configureResource) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.PostgresServerResource!>!
*REMOVED*static Aspire.Hosting.AzurePostgresExtensions.PublishAsAzurePostgresFlexibleServer(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.PostgresServerResource!>! builder, System.Action<Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresResource!>!, Aspire.Hosting.ResourceModuleConstruct!, Azure.Provisioning.PostgreSql.PostgreSqlFlexibleServer!>? configureResource) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.PostgresServerResource!>!
*REMOVED*Aspire.Hosting.Azure.AzurePostgresResource.AzurePostgresResource(Aspire.Hosting.ApplicationModel.PostgresServerResource! innerResource, System.Action<Aspire.Hosting.ResourceModuleConstruct!>! configureConstruct) -> void
Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource
Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource.AzurePostgresFlexibleServerDatabaseResource(string! name, string! databaseName, Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource! postgresParentResource) -> void
Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource.DatabaseName.get -> string!
Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource.Parent.get -> Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!
Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource
Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource.AzurePostgresFlexibleServerResource(string! name, System.Action<Aspire.Hosting.Azure.AzureResourceInfrastructure!>! configureInfrastructure) -> void
Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource.Databases.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
Aspire.Hosting.Azure.AzurePostgresResource.AzurePostgresResource(Aspire.Hosting.ApplicationModel.PostgresServerResource! innerResource, System.Action<Aspire.Hosting.Azure.AzureResourceInfrastructure!>! configureInfrastructure) -> void
override Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource.Annotations.get -> Aspire.Hosting.ApplicationModel.ResourceAnnotationCollection!
override Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource.Annotations.get -> Aspire.Hosting.ApplicationModel.ResourceAnnotationCollection!
static Aspire.Hosting.AzurePostgresExtensions.AddAzurePostgresFlexibleServer(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>!
static Aspire.Hosting.AzurePostgresExtensions.AddDatabase(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>! builder, string! name, string? databaseName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerDatabaseResource!>!
static Aspire.Hosting.AzurePostgresExtensions.RunAsContainer(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>! builder, System.Action<Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.PostgresServerResource!>!>? configureContainer = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>!
static Aspire.Hosting.AzurePostgresExtensions.WithPasswordAuthentication(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>! builder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? userName = null, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? password = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzurePostgresFlexibleServerResource!>!
