//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class KubernetesPublisherExtensions
    {
        public static IDistributedApplicationBuilder AddKubernetesPublisher(this IDistributedApplicationBuilder builder, System.Action<Kubernetes.KubernetesPublisherOptions>? configureOptions = null) { throw null; }

        public static IDistributedApplicationBuilder AddKubernetesPublisher(this IDistributedApplicationBuilder builder, string name, System.Action<Kubernetes.KubernetesPublisherOptions>? configureOptions = null) { throw null; }
    }
}

namespace Aspire.Hosting.Kubernetes
{
    public sealed partial class KubernetesPublisherOptions : Publishing.PublishingOptions
    {
        public string HelmChartDescription { get { throw null; } set { } }

        public string HelmChartName { get { throw null; } set { } }

        public string HelmChartVersion { get { throw null; } set { } }

        public string ImagePullPolicy { get { throw null; } set { } }

        public string ServiceType { get { throw null; } set { } }

        public string? StorageClassName { get { throw null; } set { } }

        public string StorageReadWritePolicy { get { throw null; } set { } }

        public string StorageSize { get { throw null; } set { } }

        public string StorageType { get { throw null; } set { } }
    }
}

namespace Aspire.Hosting.Kubernetes.Resources
{
    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class AffinityV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "nodeAffinity")]
        public NodeAffinityV1 NodeAffinity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "podAffinity")]
        public PodAffinityV1 PodAffinity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "podAntiAffinity")]
        public PodAntiAffinityV1 PodAntiAffinity { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class AggregationRuleV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "clusterRoleSelectors")]
        public System.Collections.Generic.List<LabelSelectorV1> ClusterRoleSelectors { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class AllowedHostPathV1Beta1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "pathPrefix")]
        public string PathPrefix { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readOnly")]
        public bool? ReadOnly { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class AppArmorProfileV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "localhostProfile")]
        public string LocalhostProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public abstract partial class BaseKubernetesObject
    {
        protected BaseKubernetesObject(string? apiVersion = null, string? kind = null) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "apiVersion", Order = -3)]
        public string? ApiVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kind", Order = -2)]
        public string? Kind { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public abstract partial class BaseKubernetesResource : BaseKubernetesObject
    {
        protected BaseKubernetesResource(string apiVersion, string kind) : base(default, default) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "metadata", Order = -1)]
        public ObjectMetaV1 Metadata { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class CapabilitiesV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "add")]
        public System.Collections.Generic.List<string> Add { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "drop")]
        public System.Collections.Generic.List<string> Drop { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ClientIPConfigV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "timeoutSeconds")]
        public int? TimeoutSeconds { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ClusterRole : BaseKubernetesResource
    {
        public ClusterRole() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "aggregationRule")]
        public AggregationRuleV1 AggregationRule { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "rules")]
        public System.Collections.Generic.List<PolicyRuleV1> Rules { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ClusterRoleBinding : BaseKubernetesResource
    {
        public ClusterRoleBinding() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "roleRef")]
        public RoleRefV1 RoleRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subjects")]
        public System.Collections.Generic.List<SubjectV1> Subjects { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ConfigMap : BaseKubernetesResource
    {
        public ConfigMap() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "binaryData")]
        public System.Collections.Generic.Dictionary<string, string> BinaryData { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "data")]
        public System.Collections.Generic.Dictionary<string, string> Data { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "immutable")]
        public bool? Immutable { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ConfigMapEnvSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ConfigMapKeySelectorV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ConfigMapVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "defaultMode")]
        public int? DefaultMode { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "items")]
        public System.Collections.Generic.List<KeyToPathV1> Items { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ContainerPortV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "containerPort")]
        public Int32OrStringV1? ContainerPort { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostIP")]
        public string HostIp { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostPort")]
        public Int32OrStringV1? HostPort { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "protocol")]
        public string Protocol { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ContainerResizePolicyV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "resourceName")]
        public string ResourceName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "restartPolicy")]
        public string RestartPolicy { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ContainerResourceMetricSourceV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "container")]
        public string Container { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "target")]
        public MetricTargetV2 Target { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ContainerV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "args")]
        public System.Collections.Generic.List<string> Args { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "command")]
        public System.Collections.Generic.List<string> Command { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "env")]
        public System.Collections.Generic.List<EnvVarV1> Env { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "envFrom")]
        public System.Collections.Generic.List<EnvFromSourceV1> EnvFrom { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "image")]
        public string Image { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "imagePullPolicy")]
        public string ImagePullPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "lifecycle")]
        public LifecycleV1? Lifecycle { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "livenessProbe")]
        public ProbeV1? LivenessProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ports")]
        public System.Collections.Generic.List<ContainerPortV1> Ports { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readinessProbe")]
        public ProbeV1? ReadinessProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resizePolicy")]
        public System.Collections.Generic.List<ContainerResizePolicyV1> ResizePolicy { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resources")]
        public ResourceRequirementsV1? Resources { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "restartPolicy")]
        public string? RestartPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "securityContext")]
        public SecurityContextV1? SecurityContext { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "startupProbe")]
        public ProbeV1? StartupProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stdin")]
        public bool? Stdin { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stdinOnce")]
        public bool? StdinOnce { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationMessagePath")]
        public string? TerminationMessagePath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationMessagePolicy")]
        public string? TerminationMessagePolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tty")]
        public bool? Tty { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeDevices")]
        public System.Collections.Generic.List<VolumeDeviceV1> VolumeDevices { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeMounts")]
        public System.Collections.Generic.List<VolumeMountV1> VolumeMounts { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "workingDir")]
        public string? WorkingDir { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class CrossVersionObjectReferenceV1 : BaseKubernetesResource
    {
        public CrossVersionObjectReferenceV1() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class CrossVersionObjectReferenceV2 : BaseKubernetesResource
    {
        public CrossVersionObjectReferenceV2() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Deployment : BaseKubernetesResource
    {
        public Deployment() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public DeploymentSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class DeploymentSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "minReadySeconds")]
        public int? MinReadySeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "paused")]
        public bool? Paused { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "progressDeadlineSeconds")]
        public int? ProgressDeadlineSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "replicas")]
        public int? Replicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "revisionHistoryLimit")]
        public int? RevisionHistoryLimit { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public LabelSelectorV1 Selector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "strategy")]
        public DeploymentStrategyV1 Strategy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "template")]
        public PodTemplateSpecV1 Template { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class DeploymentStrategyV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "rollingUpdate")]
        public RollingUpdateDeploymentV1 RollingUpdate { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EmptyDirVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "medium")]
        public string? Medium { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sizeLimit")]
        public string? SizeLimit { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EnvFromSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "configMapRef")]
        public ConfigMapEnvSourceV1? ConfigMapRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "prefix")]
        public string? Prefix { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "secretRef")]
        public SecretEnvSourceV1? SecretRef { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EnvVarSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "configMapKeyRef")]
        public ConfigMapKeySelectorV1? ConfigMapKeyRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fieldRef")]
        public ObjectFieldSelectorV1? FieldRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceFieldRef")]
        public ResourceFieldSelectorV1? ResourceFieldRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "secretKeyRef")]
        public SecretKeySelectorV1? SecretKeyRef { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EnvVarV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "valueFrom")]
        public EnvVarSourceV1? ValueFrom { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EphemeralContainerV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "args")]
        public System.Collections.Generic.List<string> Args { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "command")]
        public System.Collections.Generic.List<string> Command { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "env")]
        public System.Collections.Generic.List<EnvVarV1> Env { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "envFrom")]
        public System.Collections.Generic.List<EnvFromSourceV1> EnvFrom { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "image")]
        public string Image { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "imagePullPolicy")]
        public string ImagePullPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "lifecycle")]
        public LifecycleV1? Lifecycle { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "livenessProbe")]
        public ProbeV1? LivenessProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ports")]
        public System.Collections.Generic.List<ContainerPortV1> Ports { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readinessProbe")]
        public ProbeV1? ReadinessProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resizePolicy")]
        public System.Collections.Generic.List<ContainerResizePolicyV1> ResizePolicy { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resources")]
        public ResourceRequirementsV1? Resources { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "restartPolicy")]
        public string? RestartPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "securityContext")]
        public SecurityContextV1? SecurityContext { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "startupProbe")]
        public ProbeV1? StartupProbe { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stdin")]
        public bool? Stdin { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stdinOnce")]
        public bool? StdinOnce { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "targetContainerName")]
        public string? TargetContainerName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationMessagePath")]
        public string? TerminationMessagePath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationMessagePolicy")]
        public string? TerminationMessagePolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tty")]
        public bool? Tty { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeDevices")]
        public System.Collections.Generic.List<VolumeDeviceV1> VolumeDevices { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeMounts")]
        public System.Collections.Generic.List<VolumeMountV1> VolumeMounts { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "workingDir")]
        public string? WorkingDir { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class EphemeralVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "volumeClaimTemplate")]
        public PersistentVolumeClaimTemplateV1 VolumeClaimTemplate { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ExecActionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "command")]
        public System.Collections.Generic.List<string> Command { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ExternalMetricSourceV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "metric")]
        public MetricIdentifierV2 Metric { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "target")]
        public MetricTargetV2 Target { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class FieldSelectorAttributesV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "rawSelector")]
        public string RawSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requirements")]
        public System.Collections.Generic.List<FieldSelectorRequirementV1> Requirements { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class FieldSelectorRequirementV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "operator")]
        public string Operator { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "values")]
        public System.Collections.Generic.List<string> Values { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class FieldsV1
    {
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class FsGroupStrategyOptionsV1Beta1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "ranges")]
        public System.Collections.Generic.List<IdRangeV1Beta1> Ranges { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "rule")]
        public string Rule { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class GrpcActionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "port")]
        public int Port { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "service")]
        public string Service { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HelmChart
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "annotations")]
        public System.Collections.Generic.Dictionary<string, string> Annotations { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "apiVersion")]
        public string ApiVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "appVersion")]
        public string AppVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "dependencies")]
        public System.Collections.Generic.List<HelmChartDependency> Dependencies { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "deprecated")]
        public bool? Deprecated { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "description")]
        public string Description { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "home")]
        public string? Home { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "icon")]
        public string? Icon { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "keywords")]
        public System.Collections.Generic.List<string> Keywords { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kubeVersion")]
        public string? KubeVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "maintainers")]
        public System.Collections.Generic.List<HelmChartMaintainer> Maintainers { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sources")]
        public System.Collections.Generic.List<string> Sources { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string? Type { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "version")]
        public string Version { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HelmChartDependency
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "alias")]
        public string Alias { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "condition")]
        public string Condition { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "import-values")]
        public System.Collections.Generic.List<string> ImportValues { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "repository")]
        public string Repository { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tags")]
        public System.Collections.Generic.List<string> Tags { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "version")]
        public string Version { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HelmChartMaintainer
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "email")]
        public string Email { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "url")]
        public string Url { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HorizontalPodAutoscaler : BaseKubernetesResource
    {
        public HorizontalPodAutoscaler() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public HorizontalPodAutoscalerSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HorizontalPodAutoscalerBehaviorV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "scaleDown")]
        public HpaScalingRulesV2 ScaleDown { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "scaleUp")]
        public HpaScalingRulesV2 ScaleUp { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HorizontalPodAutoscalerSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "maxReplicas")]
        public int MaxReplicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "minReplicas")]
        public int? MinReplicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "scaleTargetRef")]
        public CrossVersionObjectReferenceV1 ScaleTargetRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "targetCPUUtilizationPercentage")]
        public int? TargetCPUUtilizationPercentage { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HorizontalPodAutoscalerSpecV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "behavior")]
        public HorizontalPodAutoscalerBehaviorV2 Behavior { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "maxReplicas")]
        public int MaxReplicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "metrics")]
        public System.Collections.Generic.List<MetricSpecV2> Metrics { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "minReplicas")]
        public int? MinReplicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "scaleTargetRef")]
        public CrossVersionObjectReferenceV2 ScaleTargetRef { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HorizontalPodAutoscalerV2 : BaseKubernetesResource
    {
        public HorizontalPodAutoscalerV2() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public HorizontalPodAutoscalerSpecV2 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HostAliasV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "hostnames")]
        public System.Collections.Generic.List<string> Hostnames { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ip")]
        public string Ip { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HostPathVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "path")]
        public string Path { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HostPortRangeV1Beta1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "max")]
        public int Max { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "min")]
        public int Min { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HpaScalingPolicyV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "periodSeconds")]
        public int PeriodSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public int Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HpaScalingRulesV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "policies")]
        public System.Collections.Generic.List<HpaScalingPolicyV2> Policies { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selectPolicy")]
        public string SelectPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stabilizationWindowSeconds")]
        public int? StabilizationWindowSeconds { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HttpGetActionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "host")]
        public string Host { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "httpHeaders")]
        public System.Collections.Generic.List<HttpHeaderV1> HttpHeaders { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "path")]
        public string Path { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "port")]
        public int Port { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "scheme")]
        public string Scheme { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HttpHeaderV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HttpIngressPathV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "backend")]
        public IngressBackendV1 Backend { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "path")]
        public string Path { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "pathType")]
        public string PathType { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class HttpIngressRuleValueV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "paths")]
        public System.Collections.Generic.List<HttpIngressPathV1> Paths { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IdRangeV1Beta1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "max")]
        public long Max { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "min")]
        public long Min { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ImageVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "pullPolicy")]
        public string PullPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "reference")]
        public string Reference { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Ingress : BaseKubernetesResource
    {
        public Ingress() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public IngressSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IngressBackendV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "resource")]
        public TypedLocalObjectReferenceV1 Resource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "service")]
        public IngressServiceBackendV1 Service { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IngressRuleV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "host")]
        public string Host { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "http")]
        public HttpIngressRuleValueV1 Http { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IngressServiceBackendV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "port")]
        public ServiceBackendPortV1 Port { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IngressSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "defaultBackend")]
        public IngressBackendV1 DefaultBackend { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ingressClassName")]
        public string IngressClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "rules")]
        public System.Collections.Generic.List<IngressRuleV1> Rules { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tls")]
        public System.Collections.Generic.List<IngressTLSV1> Tls { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class IngressTLSV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "hosts")]
        public System.Collections.Generic.List<string> Hosts { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "secretName")]
        public string SecretName { get { throw null; } set { } }
    }

    public sealed partial record Int32OrStringV1(int? Number = null, string? Text = null) : System.IEquatable<int>, System.IEquatable<string>
    {
        public Int32OrStringV1(int value) { }

        public Int32OrStringV1(string? value) { }

        public string? Value { get { throw null; } }

        public bool Equals(int other) { throw null; }

        public bool Equals(string? other) { throw null; }

        public static bool operator ==(Int32OrStringV1? left, int right) { throw null; }

        public static bool operator ==(Int32OrStringV1? left, string? right) { throw null; }

        public static explicit operator int(Int32OrStringV1 value) { throw null; }

        public static explicit operator string?(Int32OrStringV1? value) { throw null; }

        public static implicit operator Int32OrStringV1(int value) { throw null; }

        public static implicit operator Int32OrStringV1?(string? value) { throw null; }

        public static bool operator !=(Int32OrStringV1? left, int right) { throw null; }

        public static bool operator !=(Int32OrStringV1? left, string? right) { throw null; }

        public override string? ToString() { throw null; }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class KeyToPathV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "mode")]
        public int? Mode { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "path")]
        public string Path { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LabelSelectorAttributesV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "rawSelector")]
        public string RawSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requirements")]
        public System.Collections.Generic.List<LabelSelectorRequirementV1> Requirements { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LabelSelectorRequirementV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "operator")]
        public string Operator { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "values")]
        public System.Collections.Generic.List<string> Values { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LabelSelectorV1
    {
        public LabelSelectorV1() { }

        public LabelSelectorV1(System.Collections.Generic.Dictionary<string, string> matchLabels) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "matchExpressions")]
        public System.Collections.Generic.List<LabelSelectorRequirementV1> MatchExpressions { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "matchLabels")]
        public System.Collections.Generic.Dictionary<string, string> MatchLabels { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LifecycleHandlerV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "exec")]
        public ExecActionV1 Exec { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "httpGet")]
        public HttpGetActionV1 HttpGet { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sleep")]
        public SleepActionV1 Sleep { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tcpSocket")]
        public TcpSocketActionV1 TcpSocket { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LifecycleV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "postStart")]
        public LifecycleHandlerV1 PostStart { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "preStop")]
        public LifecycleHandlerV1 PreStop { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LocalObjectReferenceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class LocalVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "fsType")]
        public string FsType { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "path")]
        public string Path { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ManagedFieldsEntryV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiVersion")]
        public string ApiVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fieldsType")]
        public string FieldsType { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fieldsV1")]
        public FieldsV1 FieldsV1 { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "manager")]
        public string Manager { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "operation")]
        public string Operation { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subresource")]
        public string Subresource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "time")]
        public System.DateTime? Time { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class MetricIdentifierV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public LabelSelectorV1 Selector { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class MetricSpecV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "containerResource")]
        public ContainerResourceMetricSourceV2 ContainerResource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "external")]
        public ExternalMetricSourceV2 External { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "object")]
        public ObjectMetricSourceV2 Object { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "pods")]
        public PodsMetricSourceV2 Pods { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resource")]
        public ResourceMetricSourceV2 Resource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class MetricTargetV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "averageUtilization")]
        public int? AverageUtilization { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "averageValue")]
        public string AverageValue { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Namespace : BaseKubernetesResource
    {
        public Namespace() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public NamespaceSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class NamespaceSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "finalizers")]
        public System.Collections.Generic.List<string> Finalizers { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class NodeAffinityV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "preferredDuringSchedulingIgnoredDuringExecution")]
        public System.Collections.Generic.List<PreferredSchedulingTermV1> PreferredDuringSchedulingIgnoredDuringExecution { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requiredDuringSchedulingIgnoredDuringExecution")]
        public NodeSelectorV1 RequiredDuringSchedulingIgnoredDuringExecution { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class NodeSelectorRequirementV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "operator")]
        public string Operator { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "values")]
        public System.Collections.Generic.List<string> Values { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class NodeSelectorTermV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "matchExpressions")]
        public System.Collections.Generic.List<NodeSelectorRequirementV1> MatchExpressions { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "matchFields")]
        public System.Collections.Generic.List<NodeSelectorRequirementV1> MatchFields { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class NodeSelectorV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "nodeSelectorTerms")]
        public System.Collections.Generic.List<NodeSelectorTermV1> NodeSelectorTerms { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ObjectFieldSelectorV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiVersion")]
        public string ApiVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fieldPath")]
        public string FieldPath { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ObjectMetaV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "annotations")]
        public System.Collections.Generic.Dictionary<string, string> Annotations { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "creationTimestamp")]
        public System.DateTime? CreationTimestamp { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "deletionGracePeriodSeconds")]
        public long? DeletionGracePeriodSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "deletionTimestamp")]
        public System.DateTime? DeletionTimestamp { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "finalizers")]
        public System.Collections.Generic.List<string> Finalizers { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "generateName")]
        public string GenerateName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "generation")]
        public long? Generation { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "labels")]
        public System.Collections.Generic.Dictionary<string, string> Labels { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "managedFields")]
        public System.Collections.Generic.List<ManagedFieldsEntryV1> ManagedFields { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespace")]
        public string Namespace { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ownerReferences")]
        public System.Collections.Generic.List<OwnerReferenceV1> OwnerReferences { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceVersion")]
        public string ResourceVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selfLink")]
        public string SelfLink { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "uid")]
        public string Uid { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ObjectMetricSourceV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "describedObject")]
        public CrossVersionObjectReferenceV2 DescribedObject { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "metric")]
        public MetricIdentifierV2 Metric { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "target")]
        public MetricTargetV2 Target { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ObjectReferenceV1 : BaseKubernetesObject
    {
        public ObjectReferenceV1() : base(default, default) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "fieldPath")]
        public string FieldPath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespace")]
        public string Namespace { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceVersion")]
        public string ResourceVersion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "uid")]
        public string Uid { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class OwnerReferenceV1 : BaseKubernetesObject
    {
        public OwnerReferenceV1() : base(default, default) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "blockOwnerDeletion")]
        public bool? BlockOwnerDeletion { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "controller")]
        public bool? Controller { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "uid")]
        public string Uid { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolume : BaseKubernetesResource
    {
        public PersistentVolume() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public PersistentVolumeSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolumeClaim : BaseKubernetesResource
    {
        public PersistentVolumeClaim() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public PersistentVolumeClaimSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolumeClaimSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "accessModes")]
        public System.Collections.Generic.List<string> AccessModes { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "dataSource")]
        public TypedLocalObjectReferenceV1 DataSource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "dataSourceRef")]
        public TypedObjectReferenceV1 DataSourceRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resources")]
        public VolumeResourceRequirementsV1 Resources { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public LabelSelectorV1 Selector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "storageClassName")]
        public string StorageClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeAttributesClassName")]
        public string VolumeAttributesClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeMode")]
        public string VolumeMode { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeName")]
        public string VolumeName { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolumeClaimTemplateV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "metadata")]
        public ObjectMetaV1 Metadata { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public PersistentVolumeClaimSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolumeClaimVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "claimName")]
        public string ClaimName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readOnly")]
        public bool? ReadOnly { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PersistentVolumeSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "accessModes")]
        public System.Collections.Generic.List<string> AccessModes { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "capacity")]
        public System.Collections.Generic.Dictionary<string, string> Capacity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "claimRef")]
        public ObjectReferenceV1 ClaimRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostPath")]
        public HostPathVolumeSourceV1 HostPath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "local")]
        public LocalVolumeSourceV1 Local { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "mountOptions")]
        public System.Collections.Generic.List<string> MountOptions { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodeAffinity")]
        public VolumeNodeAffinityV1 NodeAffinity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "persistentVolumeReclaimPolicy")]
        public string PersistentVolumeReclaimPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "storageClassName")]
        public string StorageClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeAttributesClassName")]
        public string VolumeAttributesClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeMode")]
        public string VolumeMode { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Pod : BaseKubernetesResource
    {
        public Pod() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public PodSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodAffinityTermV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "labelSelector")]
        public LabelSelectorV1 LabelSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "matchLabelKeys")]
        public System.Collections.Generic.List<string> MatchLabelKeys { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "mismatchLabelKeys")]
        public System.Collections.Generic.List<string> MismatchLabelKeys { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespaces")]
        public System.Collections.Generic.List<string> Namespaces { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespaceSelector")]
        public LabelSelectorV1 NamespaceSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "topologyKey")]
        public string TopologyKey { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodAffinityV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "preferredDuringSchedulingIgnoredDuringExecution")]
        public System.Collections.Generic.List<WeightedPodAffinityTermV1> PreferredDuringSchedulingIgnoredDuringExecution { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requiredDuringSchedulingIgnoredDuringExecution")]
        public System.Collections.Generic.List<PodAffinityTermV1> RequiredDuringSchedulingIgnoredDuringExecution { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodAntiAffinityV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "preferredDuringSchedulingIgnoredDuringExecution")]
        public System.Collections.Generic.List<WeightedPodAffinityTermV1> PreferredDuringSchedulingIgnoredDuringExecution { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requiredDuringSchedulingIgnoredDuringExecution")]
        public System.Collections.Generic.List<PodAffinityTermV1> RequiredDuringSchedulingIgnoredDuringExecution { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodDnsConfigOptionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodDnsConfigV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "nameservers")]
        public System.Collections.Generic.List<string> Nameservers { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "options")]
        public System.Collections.Generic.List<PodDnsConfigOptionV1> Options { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "searches")]
        public System.Collections.Generic.List<string> Searches { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodOsv1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodReadinessGateV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "conditionType")]
        public string ConditionType { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodResourceClaimV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceClaimName")]
        public string ResourceClaimName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceClaimTemplateName")]
        public string ResourceClaimTemplateName { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodSchedulingGateV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodSecurityContextV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "appArmorProfile")]
        public AppArmorProfileV1? AppArmorProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fsGroup")]
        public long? FsGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "fsGroupChangePolicy")]
        public string FsGroupChangePolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsGroup")]
        public long? RunAsGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsNonRoot")]
        public bool? RunAsNonRoot { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsUser")]
        public long? RunAsUser { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "seccompProfile")]
        public SeccompProfileV1? SeccompProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "seLinuxOptions")]
        public SeLinuxOptionsV1? SeLinuxOptions { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "supplementalGroups")]
        public System.Collections.Generic.List<long> SupplementalGroups { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "supplementalGroupsPolicy")]
        public string SupplementalGroupsPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sysctls")]
        public System.Collections.Generic.List<SysctlV1> Sysctls { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "windowsOptions")]
        public WindowsSecurityContextOptionsV1? WindowsOptions { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodsMetricSourceV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "metric")]
        public MetricIdentifierV2 Metric { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "target")]
        public MetricTargetV2 Target { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "activeDeadlineSeconds")]
        public long? ActiveDeadlineSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "affinity")]
        public AffinityV1? Affinity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "automountServiceAccountToken")]
        public bool? AutomountServiceAccountToken { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "containers")]
        public System.Collections.Generic.List<ContainerV1> Containers { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "dnsConfig")]
        public PodDnsConfigV1? DnsConfig { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "dnsPolicy")]
        public string? DnsPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "enableServiceLinks")]
        public bool? EnableServiceLinks { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ephemeralContainers")]
        public System.Collections.Generic.List<EphemeralContainerV1> EphemeralContainers { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostAliases")]
        public System.Collections.Generic.List<HostAliasV1> HostAliases { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostIPC")]
        public bool? HostIpc { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostname")]
        public string? Hostname { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostNetwork")]
        public bool? HostNetwork { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostPID")]
        public bool? HostPid { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostUsers")]
        public bool? HostUsers { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "imagePullSecrets")]
        public System.Collections.Generic.List<LocalObjectReferenceV1> ImagePullSecrets { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "initContainers")]
        public System.Collections.Generic.List<ContainerV1> InitContainers { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodeName")]
        public string? NodeName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodeSelector")]
        public System.Collections.Generic.Dictionary<string, string> NodeSelector { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "os")]
        public PodOsv1? Os { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "overhead")]
        public System.Collections.Generic.Dictionary<string, string> Overhead { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "preemptionPolicy")]
        public string? PreemptionPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "priority")]
        public int? Priority { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "priorityClassName")]
        public string? PriorityClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readinessGates")]
        public System.Collections.Generic.List<PodReadinessGateV1> ReadinessGates { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceClaims")]
        public System.Collections.Generic.List<PodResourceClaimV1> ResourceClaims { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "restartPolicy")]
        public string? RestartPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runtimeClassName")]
        public string? RuntimeClassName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "schedulerName")]
        public string? SchedulerName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "schedulingGates")]
        public System.Collections.Generic.List<PodSchedulingGateV1> SchedulingGates { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "securityContext")]
        public PodSecurityContextV1? SecurityContext { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "serviceAccount")]
        public string? ServiceAccount { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "serviceAccountName")]
        public string? ServiceAccountName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "setHostnameAsFQDN")]
        public bool? SetHostnameAsFqdn { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "shareProcessNamespace")]
        public bool? ShareProcessNamespace { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subdomain")]
        public string? Subdomain { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationGracePeriodSeconds")]
        public long? TerminationGracePeriodSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tolerations")]
        public System.Collections.Generic.List<TolerationV1> Tolerations { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "topologySpreadConstraints")]
        public System.Collections.Generic.List<TopologySpreadConstraintV1> TopologySpreadConstraints { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumes")]
        public System.Collections.Generic.List<VolumeV1> Volumes { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodTemplate : BaseKubernetesResource
    {
        public PodTemplate() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "template")]
        public PodTemplateSpecV1 Template { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PodTemplateSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "metadata")]
        public ObjectMetaV1 Metadata { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public PodSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PolicyRuleV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiGroups")]
        public System.Collections.Generic.List<string> ApiGroups { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nonResourceURLs")]
        public System.Collections.Generic.List<string> NonResourceUrLs { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resourceNames")]
        public System.Collections.Generic.List<string> ResourceNames { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resources")]
        public System.Collections.Generic.List<string> Resources { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "verbs")]
        public System.Collections.Generic.List<string> Verbs { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class PreferredSchedulingTermV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "preference")]
        public NodeSelectorTermV1 Preference { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "weight")]
        public int Weight { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ProbeV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "exec")]
        public ExecActionV1? Exec { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "failureThreshold")]
        public int? FailureThreshold { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "grpc")]
        public GrpcActionV1? Grpc { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "httpGet")]
        public HttpGetActionV1? HttpGet { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "initialDelaySeconds")]
        public int? InitialDelaySeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "periodSeconds")]
        public int? PeriodSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "successThreshold")]
        public int? SuccessThreshold { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tcpSocket")]
        public TcpSocketActionV1? TcpSocket { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "terminationGracePeriodSeconds")]
        public long? TerminationGracePeriodSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "timeoutSeconds")]
        public int? TimeoutSeconds { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ReplicaSet : BaseKubernetesResource
    {
        public ReplicaSet() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public ReplicaSetSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ReplicaSetSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "minReadySeconds")]
        public int? MinReadySeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "replicas")]
        public int? Replicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public LabelSelectorV1 Selector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "template")]
        public PodTemplateSpecV1 Template { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ResourceAttributesV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "fieldSelector")]
        public FieldSelectorAttributesV1? FieldSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "group")]
        public string? Group { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "labelSelector")]
        public LabelSelectorAttributesV1? LabelSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string? Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespace")]
        public string? Namespace { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resource")]
        public string? Resource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subresource")]
        public string? Subresource { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "verb")]
        public string? Verb { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "version")]
        public string? Version { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ResourceClaimV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "request")]
        public string Request { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ResourceFieldSelectorV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "containerName")]
        public string ContainerName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "divisor")]
        public string Divisor { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "resource")]
        public string Resource { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ResourceMetricSourceV2
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "target")]
        public MetricTargetV2 Target { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ResourceRequirementsV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "claims")]
        public System.Collections.Generic.List<ResourceClaimV1> Claims { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "limits")]
        public System.Collections.Generic.Dictionary<string, string> Limits { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requests")]
        public System.Collections.Generic.Dictionary<string, string> Requests { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Role : BaseKubernetesResource
    {
        public Role() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "rules")]
        public System.Collections.Generic.List<PolicyRuleV1> Rules { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class RoleBinding : BaseKubernetesResource
    {
        public RoleBinding() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "roleRef")]
        public RoleRefV1 RoleRef { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subjects")]
        public System.Collections.Generic.List<SubjectV1> Subjects { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class RoleRefV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiGroup")]
        public string ApiGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kind")]
        public string Kind { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class RollingUpdateDeploymentV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "maxSurge")]
        public int MaxSurge { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "maxUnavailable")]
        public int MaxUnavailable { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class RollingUpdateStatefulSetStrategyV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "maxUnavailable")]
        public int MaxUnavailable { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "partition")]
        public int? Partition { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SeccompProfileV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "localhostProfile")]
        public string LocalhostProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Secret : BaseKubernetesResource
    {
        public Secret() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "data")]
        public System.Collections.Generic.Dictionary<string, string> Data { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "immutable")]
        public bool? Immutable { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "stringData")]
        public System.Collections.Generic.Dictionary<string, string> StringData { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SecretEnvSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SecretKeySelectorV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SecretVolumeSourceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "defaultMode")]
        public int? DefaultMode { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "items")]
        public System.Collections.Generic.List<KeyToPathV1> Items { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "optional")]
        public bool? Optional { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "secretName")]
        public string SecretName { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SecurityContextV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "allowPrivilegeEscalation")]
        public bool? AllowPrivilegeEscalation { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "appArmorProfile")]
        public AppArmorProfileV1? AppArmorProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "capabilities")]
        public CapabilitiesV1? Capabilities { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "privileged")]
        public bool? Privileged { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "procMount")]
        public string? ProcMount { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readOnlyRootFilesystem")]
        public bool? ReadOnlyRootFilesystem { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsGroup")]
        public long? RunAsGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsNonRoot")]
        public bool? RunAsNonRoot { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsUser")]
        public long? RunAsUser { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "seccompProfile")]
        public SeccompProfileV1? SeccompProfile { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "seLinuxOptions")]
        public SeLinuxOptionsV1? SeLinuxOptions { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "windowsOptions")]
        public WindowsSecurityContextOptionsV1? WindowsOptions { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SeLinuxOptionsV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "level")]
        public string Level { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "role")]
        public string Role { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "user")]
        public string User { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class Service : BaseKubernetesResource
    {
        public Service() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public ServiceSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ServiceBackendPortV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "number")]
        public int? Number { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ServicePortV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "appProtocol")]
        public string AppProtocol { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodePort")]
        public int? NodePort { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "port")]
        public Int32OrStringV1 Port { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "protocol")]
        public string Protocol { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "targetPort")]
        public Int32OrStringV1 TargetPort { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class ServiceSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "allocateLoadBalancerNodePorts")]
        public bool? AllocateLoadBalancerNodePorts { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "clusterIP")]
        public string? ClusterIp { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "clusterIPs")]
        public System.Collections.Generic.List<string> ClusterIPs { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "externalIPs")]
        public System.Collections.Generic.List<string> ExternalIPs { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "externalName")]
        public string? ExternalName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "externalTrafficPolicy")]
        public string? ExternalTrafficPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "healthCheckNodePort")]
        public int? HealthCheckNodePort { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "internalTrafficPolicy")]
        public string? InternalTrafficPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ipFamilies")]
        public System.Collections.Generic.List<string> IpFamilies { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ipFamilyPolicy")]
        public string? IpFamilyPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "loadBalancerClass")]
        public string? LoadBalancerClass { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "loadBalancerIP")]
        public string? LoadBalancerIp { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "loadBalancerSourceRanges")]
        public System.Collections.Generic.List<string> LoadBalancerSourceRanges { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ports")]
        public System.Collections.Generic.List<ServicePortV1> Ports { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "publishNotReadyAddresses")]
        public bool? PublishNotReadyAddresses { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public System.Collections.Generic.Dictionary<string, string> Selector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sessionAffinity")]
        public string? SessionAffinity { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "sessionAffinityConfig")]
        public SessionAffinityConfigV1? SessionAffinityConfig { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "trafficDistribution")]
        public string? TrafficDistribution { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SessionAffinityConfigV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "clientIP")]
        public ClientIPConfigV1 ClientIp { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SleepActionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "seconds")]
        public long Seconds { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class StatefulSet : BaseKubernetesResource
    {
        public StatefulSet() : base(default!, default!) { }

        [YamlDotNet.Serialization.YamlMember(Alias = "spec")]
        public StatefulSetSpecV1 Spec { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class StatefulSetOrdinalsV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "start")]
        public int? Start { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class StatefulSetPersistentVolumeClaimRetentionPolicyV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "whenDeleted")]
        public string? WhenDeleted { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "whenScaled")]
        public string? WhenScaled { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class StatefulSetSpecV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "minReadySeconds")]
        public int? MinReadySeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ordinals")]
        public StatefulSetOrdinalsV1? Ordinals { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "persistentVolumeClaimRetentionPolicy")]
        public StatefulSetPersistentVolumeClaimRetentionPolicyV1 PersistentVolumeClaimRetentionPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "podManagementPolicy")]
        public string? PodManagementPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "replicas")]
        public int? Replicas { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "revisionHistoryLimit")]
        public int? RevisionHistoryLimit { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "selector")]
        public LabelSelectorV1 Selector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "serviceName")]
        public string ServiceName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "template")]
        public PodTemplateSpecV1 Template { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "updateStrategy")]
        public StatefulSetUpdateStrategyV1 UpdateStrategy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "volumeClaimTemplates")]
        public System.Collections.Generic.List<PersistentVolumeClaim> VolumeClaimTemplates { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class StatefulSetUpdateStrategyV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "rollingUpdate")]
        public RollingUpdateStatefulSetStrategyV1 RollingUpdate { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "type")]
        public string Type { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SubjectV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiGroup")]
        public string ApiGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kind")]
        public string Kind { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespace")]
        public string Namespace { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class SysctlV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class TcpSocketActionV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "host")]
        public string Host { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "port")]
        public int Port { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class TolerationV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "effect")]
        public string Effect { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "key")]
        public string Key { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "operator")]
        public string Operator { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "tolerationSeconds")]
        public long? TolerationSeconds { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "value")]
        public string Value { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class TopologySpreadConstraintV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "labelSelector")]
        public LabelSelectorV1 LabelSelector { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "matchLabelKeys")]
        public System.Collections.Generic.List<string> MatchLabelKeys { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "maxSkew")]
        public int? MaxSkew { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "minDomains")]
        public int? MinDomains { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodeAffinityPolicy")]
        public string? NodeAffinityPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "nodeTaintsPolicy")]
        public string? NodeTaintsPolicy { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "topologyKey")]
        public string? TopologyKey { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "whenUnsatisfiable")]
        public string? WhenUnsatisfiable { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class TypedLocalObjectReferenceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiGroup")]
        public string ApiGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kind")]
        public string Kind { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class TypedObjectReferenceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "apiGroup")]
        public string ApiGroup { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "kind")]
        public string Kind { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "namespace")]
        public string Namespace { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class VolumeDeviceV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "devicePath")]
        public string DevicePath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class VolumeMountV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "mountPath")]
        public string MountPath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "mountPropagation")]
        public string? MountPropagation { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "readOnly")]
        public bool? ReadOnly { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "recursiveReadOnly")]
        public string? RecursiveReadOnly { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subPath")]
        public string SubPath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "subPathExpr")]
        public string? SubPathExpr { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class VolumeNodeAffinityV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "required")]
        public NodeSelectorV1 Required { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class VolumeResourceRequirementsV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "limits")]
        public System.Collections.Generic.Dictionary<string, string> Limits { get { throw null; } }

        [YamlDotNet.Serialization.YamlMember(Alias = "requests")]
        public System.Collections.Generic.Dictionary<string, string> Requests { get { throw null; } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class VolumeV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "configMap")]
        public ConfigMapVolumeSourceV1? ConfigMap { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "emptyDir")]
        public EmptyDirVolumeSourceV1? EmptyDir { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "ephemeral")]
        public EphemeralVolumeSourceV1? Ephemeral { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostPath")]
        public HostPathVolumeSourceV1? HostPath { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "image")]
        public ImageVolumeSourceV1? Image { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "name")]
        public string Name { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "persistentVolumeClaim")]
        public PersistentVolumeClaimVolumeSourceV1? PersistentVolumeClaim { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "secret")]
        public SecretVolumeSourceV1? Secret { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class WeightedPodAffinityTermV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "podAffinityTerm")]
        public PodAffinityTermV1 PodAffinityTerm { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "weight")]
        public int Weight { get { throw null; } set { } }
    }

    [YamlDotNet.Serialization.YamlSerializable]
    public sealed partial class WindowsSecurityContextOptionsV1
    {
        [YamlDotNet.Serialization.YamlMember(Alias = "gmsaCredentialSpec")]
        public string GmsaCredentialSpec { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "gmsaCredentialSpecName")]
        public string GmsaCredentialSpecName { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "hostProcess")]
        public bool? HostProcess { get { throw null; } set { } }

        [YamlDotNet.Serialization.YamlMember(Alias = "runAsUserName")]
        public string RunAsUserName { get { throw null; } set { } }
    }
}

namespace Aspire.Hosting.Kubernetes.Yaml
{
    public partial class IntOrStringYamlConverter : YamlDotNet.Serialization.IYamlTypeConverter
    {
        public bool Accepts(System.Type type) { throw null; }

        public object? ReadYaml(YamlDotNet.Core.IParser parser, System.Type type, YamlDotNet.Serialization.ObjectDeserializer rootDeserializer) { throw null; }

        public void WriteYaml(YamlDotNet.Core.IEmitter emitter, object? value, System.Type type, YamlDotNet.Serialization.ObjectSerializer serializer) { }
    }
}