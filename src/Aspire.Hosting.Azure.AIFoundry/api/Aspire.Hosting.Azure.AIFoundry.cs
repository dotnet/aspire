//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class AzureAIFoundryExtensions
    {
        public static ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryResource> AddAzureAIFoundry(this IDistributedApplicationBuilder builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryDeploymentResource> AddDeployment(this ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryResource> builder, string name, string modelName, string modelVersion, string format) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryResource> RunAsFoundryLocal(this ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryResource> builder) { throw null; }

        public static ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryDeploymentResource> WithProperties(this ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryDeploymentResource> builder, System.Action<Azure.AzureAIFoundryDeploymentResource> configure) { throw null; }

        public static ApplicationModel.IResourceBuilder<T> WithRoleAssignments<T>(this ApplicationModel.IResourceBuilder<T> builder, ApplicationModel.IResourceBuilder<Azure.AzureAIFoundryResource> target, params global::Azure.Provisioning.CognitiveServices.CognitiveServicesBuiltInRole[] roles)
            where T : ApplicationModel.IResource { throw null; }
    }
}

namespace Aspire.Hosting.Azure
{
    public partial class AzureAIFoundryDeploymentResource : ApplicationModel.Resource, ApplicationModel.IResourceWithParent<AzureAIFoundryResource>, ApplicationModel.IResourceWithParent, ApplicationModel.IResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences
    {
        public AzureAIFoundryDeploymentResource(string name, string modelName, string modelVersion, string format, AzureAIFoundryResource parent) : base(default!) { }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public string DeploymentName { get { throw null; } set { } }

        public string Format { get { throw null; } set { } }

        public string ModelName { get { throw null; } set { } }

        public string ModelVersion { get { throw null; } set { } }

        public AzureAIFoundryResource Parent { get { throw null; } set { } }

        public int SkuCapacity { get { throw null; } set { } }

        public string SkuName { get { throw null; } set { } }
    }

    public partial class AzureAIFoundryResource : AzureProvisioningResource, ApplicationModel.IResourceWithConnectionString, ApplicationModel.IResource, ApplicationModel.IManifestExpressionProvider, ApplicationModel.IValueProvider, ApplicationModel.IValueWithReferences
    {
        public AzureAIFoundryResource(string name, System.Action<AzureResourceInfrastructure> configureInfrastructure) : base(default!, default!) { }

        public BicepOutputReference AIFoundryApiEndpoint { get { throw null; } }

        public string? ApiKey { get { throw null; } }

        public ApplicationModel.ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public System.Collections.Generic.IReadOnlyList<AzureAIFoundryDeploymentResource> Deployments { get { throw null; } }

        public BicepOutputReference Endpoint { get { throw null; } }

        public bool IsEmulator { get { throw null; } }

        public BicepOutputReference NameOutputReference { get { throw null; } }

        public override global::Azure.Provisioning.Primitives.ProvisionableResource AddAsExistingResource(AzureResourceInfrastructure infra) { throw null; }
    }
}