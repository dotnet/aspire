//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class OrleansServiceClientExtensions
    {
        public static ApplicationModel.IResourceBuilder<T> WithReference<T>(this ApplicationModel.IResourceBuilder<T> builder, Orleans.OrleansServiceClient orleansServiceClient)
            where T : ApplicationModel.IResourceWithEnvironment, ApplicationModel.IResourceWithEndpoints { throw null; }
    }

    public static partial class OrleansServiceExtensions
    {
        public static Orleans.OrleansService AddOrleans(this IDistributedApplicationBuilder builder, string name) { throw null; }

        public static Orleans.OrleansServiceClient AsClient(this Orleans.OrleansService orleansService) { throw null; }

        public static Orleans.OrleansService WithBroadcastChannel(this Orleans.OrleansService orleansServiceBuilder, string name, Orleans.IProviderConfiguration provider) { throw null; }

        public static Orleans.OrleansService WithBroadcastChannel(this Orleans.OrleansService orleansServiceBuilder, string name) { throw null; }

        public static Orleans.OrleansService WithClusterId(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource> clusterId) { throw null; }

        public static Orleans.OrleansService WithClusterId(this Orleans.OrleansService orleansServiceBuilder, string clusterId) { throw null; }

        public static Orleans.OrleansService WithClustering(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithClustering(this Orleans.OrleansService orleansServiceBuilder, Orleans.IProviderConfiguration provider) { throw null; }

        public static Orleans.OrleansService WithDevelopmentClustering(this Orleans.OrleansService orleansServiceBuilder) { throw null; }

        public static Orleans.OrleansService WithGrainDirectory(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithGrainDirectory(this Orleans.OrleansService orleansServiceBuilder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithGrainDirectory(this Orleans.OrleansService orleansServiceBuilder, string name, Orleans.IProviderConfiguration provider) { throw null; }

        public static Orleans.OrleansService WithGrainStorage(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithGrainStorage(this Orleans.OrleansService orleansServiceBuilder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithGrainStorage(this Orleans.OrleansService orleansServiceBuilder, string name, Orleans.IProviderConfiguration provider) { throw null; }

        public static Orleans.OrleansService WithMemoryGrainStorage(this Orleans.OrleansService orleansServiceBuilder, string name) { throw null; }

        public static Orleans.OrleansService WithMemoryReminders(this Orleans.OrleansService orleansServiceBuilder) { throw null; }

        public static Orleans.OrleansService WithMemoryStreaming(this Orleans.OrleansService orleansServiceBuilder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<T> WithReference<T>(this ApplicationModel.IResourceBuilder<T> builder, Orleans.OrleansService orleansService)
            where T : ApplicationModel.IResourceWithEnvironment, ApplicationModel.IResourceWithEndpoints { throw null; }

        public static Orleans.OrleansService WithReminders(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithReminders(this Orleans.OrleansService orleansServiceBuilder, Orleans.IProviderConfiguration provider) { throw null; }

        public static Orleans.OrleansService WithServiceId(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource> serviceId) { throw null; }

        public static Orleans.OrleansService WithServiceId(this Orleans.OrleansService orleansServiceBuilder, string serviceId) { throw null; }

        public static Orleans.OrleansService WithStreaming(this Orleans.OrleansService orleansServiceBuilder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithStreaming(this Orleans.OrleansService orleansServiceBuilder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> provider) { throw null; }

        public static Orleans.OrleansService WithStreaming(this Orleans.OrleansService orleansServiceBuilder, string name, Orleans.IProviderConfiguration provider) { throw null; }
    }
}

namespace Aspire.Hosting.Orleans
{
    public partial interface IProviderConfiguration
    {
        void ConfigureResource<T>(ApplicationModel.IResourceBuilder<T> resourceBuilder, string configSectionPath)
            where T : ApplicationModel.IResourceWithEnvironment;
    }

    public sealed partial class OrleansService
    {
        public OrleansService(IDistributedApplicationBuilder builder, string name) { }

        public System.Collections.Generic.Dictionary<string, IProviderConfiguration> BroadcastChannel { get { throw null; } }

        public IDistributedApplicationBuilder Builder { get { throw null; } }

        public IProviderConfiguration? Clustering { get { throw null; } set { } }

        public bool? EnableDistributedTracing { get { throw null; } set { } }

        public System.Collections.Generic.Dictionary<string, IProviderConfiguration> GrainDirectory { get { throw null; } }

        public System.Collections.Generic.Dictionary<string, IProviderConfiguration> GrainStorage { get { throw null; } }

        public string Name { get { throw null; } }

        public IProviderConfiguration? Reminders { get { throw null; } set { } }

        public System.Collections.Generic.Dictionary<string, IProviderConfiguration> Streaming { get { throw null; } }
    }

    public sealed partial class OrleansServiceClient
    {
        public OrleansServiceClient(OrleansService service) { }

        public OrleansService Service { get { throw null; } }
    }
}