#nullable enable
Aspire.Hosting.Orleans.IProviderConfiguration
Aspire.Hosting.Orleans.IProviderConfiguration.ConfigureResource<T>(Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! resourceBuilder, string! configSectionPath) -> void
Aspire.Hosting.Orleans.OrleansService
Aspire.Hosting.Orleans.OrleansService.BroadcastChannel.get -> System.Collections.Generic.Dictionary<string!, Aspire.Hosting.Orleans.IProviderConfiguration!>!
Aspire.Hosting.Orleans.OrleansService.Builder.get -> Aspire.Hosting.IDistributedApplicationBuilder!
Aspire.Hosting.Orleans.OrleansService.Clustering.get -> Aspire.Hosting.Orleans.IProviderConfiguration?
Aspire.Hosting.Orleans.OrleansService.Clustering.set -> void
Aspire.Hosting.Orleans.OrleansService.EnableDistributedTracing.get -> bool?
Aspire.Hosting.Orleans.OrleansService.EnableDistributedTracing.set -> void
Aspire.Hosting.Orleans.OrleansService.GrainDirectory.get -> System.Collections.Generic.Dictionary<string!, Aspire.Hosting.Orleans.IProviderConfiguration!>!
Aspire.Hosting.Orleans.OrleansService.GrainStorage.get -> System.Collections.Generic.Dictionary<string!, Aspire.Hosting.Orleans.IProviderConfiguration!>!
Aspire.Hosting.Orleans.OrleansService.Name.get -> string!
Aspire.Hosting.Orleans.OrleansService.OrleansService(Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> void
Aspire.Hosting.Orleans.OrleansService.Reminders.get -> Aspire.Hosting.Orleans.IProviderConfiguration?
Aspire.Hosting.Orleans.OrleansService.Reminders.set -> void
Aspire.Hosting.Orleans.OrleansService.Streaming.get -> System.Collections.Generic.Dictionary<string!, Aspire.Hosting.Orleans.IProviderConfiguration!>!
Aspire.Hosting.Orleans.OrleansServiceClient
Aspire.Hosting.Orleans.OrleansServiceClient.OrleansServiceClient(Aspire.Hosting.Orleans.OrleansService! service) -> void
Aspire.Hosting.Orleans.OrleansServiceClient.Service.get -> Aspire.Hosting.Orleans.OrleansService!
Aspire.Hosting.OrleansServiceClientExtensions
Aspire.Hosting.OrleansServiceExtensions
static Aspire.Hosting.OrleansServiceClientExtensions.WithReference<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder, Aspire.Hosting.Orleans.OrleansServiceClient! orleansServiceClient) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static Aspire.Hosting.OrleansServiceExtensions.AddOrleans(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.AsClient(this Aspire.Hosting.Orleans.OrleansService! orleansService) -> Aspire.Hosting.Orleans.OrleansServiceClient!
static Aspire.Hosting.OrleansServiceExtensions.WithBroadcastChannel(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithBroadcastChannel(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithClusterId(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! clusterId) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithClusterId(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! clusterId) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithClustering(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithClustering(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithDevelopmentClustering(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainDirectory(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainDirectory(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainDirectory(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainStorage(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainStorage(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithGrainStorage(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithMemoryGrainStorage(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithMemoryReminders(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithMemoryStreaming(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithReference<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T>! builder, Aspire.Hosting.Orleans.OrleansService! orleansService) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T>!
static Aspire.Hosting.OrleansServiceExtensions.WithReminders(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithReminders(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithServiceId(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>! serviceId) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithServiceId(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! serviceId) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithStreaming(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithStreaming(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.IResourceWithConnectionString!>! provider) -> Aspire.Hosting.Orleans.OrleansService!
static Aspire.Hosting.OrleansServiceExtensions.WithStreaming(this Aspire.Hosting.Orleans.OrleansService! orleansServiceBuilder, string! name, Aspire.Hosting.Orleans.IProviderConfiguration! provider) -> Aspire.Hosting.Orleans.OrleansService!
