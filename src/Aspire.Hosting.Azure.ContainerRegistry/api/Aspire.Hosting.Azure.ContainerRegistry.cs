//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class AzureContainerRegistryExtensions
    {
        public static ApplicationModel.IResourceBuilder<Azure.AzureContainerRegistryResource> AddAzureContainerRegistry(this IDistributedApplicationBuilder builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<T> WithAzureContainerRegistry<T>(this ApplicationModel.IResourceBuilder<T> builder, ApplicationModel.IResourceBuilder<Azure.AzureContainerRegistryResource> registryBuilder)
            where T : ApplicationModel.IResource, ApplicationModel.IComputeEnvironmentResource { throw null; }

        public static ApplicationModel.IResourceBuilder<T> WithRoleAssignments<T>(this ApplicationModel.IResourceBuilder<T> builder, ApplicationModel.IResourceBuilder<Azure.AzureContainerRegistryResource> target, params global::Azure.Provisioning.ContainerRegistry.ContainerRegistryBuiltInRole[] roles)
            where T : ApplicationModel.IResource { throw null; }
    }
}

namespace Aspire.Hosting.Azure
{
    public partial class AzureContainerRegistryResource : AzureProvisioningResource, ApplicationModel.IContainerRegistry
    {
        public AzureContainerRegistryResource(string name, System.Action<AzureResourceInfrastructure> configureInfrastructure) : base(default!, default!) { }

        ApplicationModel.ReferenceExpression ApplicationModel.IContainerRegistry.Endpoint { get { throw null; } }

        ApplicationModel.ReferenceExpression ApplicationModel.IContainerRegistry.Name { get { throw null; } }

        public BicepOutputReference NameOutputReference { get { throw null; } }

        public BicepOutputReference RegistryEndpoint { get { throw null; } }

        public override global::Azure.Provisioning.Primitives.ProvisionableResource AddAsExistingResource(AzureResourceInfrastructure infra) { throw null; }
    }
}