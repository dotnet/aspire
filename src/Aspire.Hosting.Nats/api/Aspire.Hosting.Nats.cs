//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class NatsBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> AddNats(this IDistributedApplicationBuilder builder, string name, int? port = null, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? userName = null, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? password = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> AddNats(this IDistributedApplicationBuilder builder, string name, int? port) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> builder, string source, bool isReadOnly = false) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> builder, string? name = null, bool isReadOnly = false) { throw null; }

        [System.Obsolete("This method is obsolete and will be removed in a future version. Use the overload without the srcMountPath parameter and WithDataBindMount extension instead if you want to keep data locally.")]
        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> WithJetStream(this ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> builder, string? srcMountPath = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> WithJetStream(this ApplicationModel.IResourceBuilder<ApplicationModel.NatsServerResource> builder) { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class NatsServerResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public NatsServerResource(string name, ParameterResource? userName, ParameterResource? password) : base(default!, default) { }

        public NatsServerResource(string name) : base(default!, default) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public ParameterResource? PasswordParameter { get { throw null; } set { } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }

        public ParameterResource? UserNameParameter { get { throw null; } set { } }
    }
}