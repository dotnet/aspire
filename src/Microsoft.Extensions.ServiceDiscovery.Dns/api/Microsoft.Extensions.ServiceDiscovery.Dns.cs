//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.Hosting
{
    public static partial class ServiceDiscoveryDnsServiceCollectionExtensions
    {
        public static DependencyInjection.IServiceCollection AddDnsServiceEndpointProvider(this DependencyInjection.IServiceCollection services, System.Action<ServiceDiscovery.Dns.DnsServiceEndpointProviderOptions> configureOptions) { throw null; }

        public static DependencyInjection.IServiceCollection AddDnsServiceEndpointProvider(this DependencyInjection.IServiceCollection services) { throw null; }

        public static DependencyInjection.IServiceCollection AddDnsSrvServiceEndpointProvider(this DependencyInjection.IServiceCollection services, System.Action<ServiceDiscovery.Dns.DnsSrvServiceEndpointProviderOptions> configureOptions) { throw null; }

        public static DependencyInjection.IServiceCollection AddDnsSrvServiceEndpointProvider(this DependencyInjection.IServiceCollection services) { throw null; }
    }
}

namespace Microsoft.Extensions.ServiceDiscovery.Dns
{
    public partial class DnsServiceEndpointProviderOptions
    {
        public System.TimeSpan DefaultRefreshPeriod { get { throw null; } set { } }

        public System.TimeSpan MaxRetryPeriod { get { throw null; } set { } }

        public System.TimeSpan MinRetryPeriod { get { throw null; } set { } }

        public double RetryBackOffFactor { get { throw null; } set { } }

        public System.Func<ServiceEndpoint, bool> ShouldApplyHostNameMetadata { get { throw null; } set { } }
    }

    public partial class DnsSrvServiceEndpointProviderOptions
    {
        public System.TimeSpan DefaultRefreshPeriod { get { throw null; } set { } }

        public System.TimeSpan MaxRetryPeriod { get { throw null; } set { } }

        public System.TimeSpan MinRetryPeriod { get { throw null; } set { } }

        public string? QuerySuffix { get { throw null; } set { } }

        public double RetryBackOffFactor { get { throw null; } set { } }

        public System.Func<ServiceEndpoint, bool> ShouldApplyHostNameMetadata { get { throw null; } set { } }
    }
}