<Project>
  <Import Project="Workload.props" />

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <PackageType>DotnetPlatform</PackageType>
    <PackageId>$(MSBuildProjectName)</PackageId>
    <IsPackable>true</IsPackable>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <IncludeSymbols>false</IncludeSymbols>
    <NoWarn>$(NoWarn);NU5100;NU5128;NU5130;NU5131</NoWarn>
    <DotNetOutputPath>$(RepoRoot)artifacts/bin/</DotNetOutputPath>
    <DotNetDirectory>$(DotNetOutputPath)dotnet/</DotNetDirectory>
    <DotNetPacksDirectory>$(DotNetDirectory)packs/</DotNetPacksDirectory>
    <DotNetSdkManifestsFolder>$(DotNetVersionBand)</DotNetSdkManifestsFolder>
    <DotNetSdkManifestsDirectory>$(DotNetDirectory)sdk-manifests/$(DotNetSdkManifestsFolder)/</DotNetSdkManifestsDirectory>
  </PropertyGroup>

  <Import Project="$(RepoRoot)eng/ReplaceText.targets" />

  <Target Name="_SetVersionTextReplacementValue" BeforeTargets="GatherTextReplacementValues" >
    <PropertyGroup>
      <!-- Use VersionPrefix as the version for workload packaging, falling back to PackageVersion if it exists -->
      <WorkloadPackageVersion Condition="'$(WorkloadPackageVersion)' == ''">$(VersionPrefix)</WorkloadPackageVersion>
      <WorkloadPackageVersion Condition="'$(WorkloadPackageVersion)' == '' AND '$(PackageVersion)' != ''">$(PackageVersion)</WorkloadPackageVersion>
      <WorkloadPackageVersion Condition="'$(WorkloadPackageVersion)' == ''">1.0.0</WorkloadPackageVersion>
    </PropertyGroup>
    <ItemGroup>
      <TextReplacementValue Include="VERSION" NewValue="$(WorkloadPackageVersion)" />
    </ItemGroup>
  </Target>

</Project>
