<Project Sdk="Microsoft.NET.Sdk" InitialTargets="AddTemplatesToPackageAsContent">

  <PropertyGroup>
    <TargetFramework>$(DefaultTargetFramework)</TargetFramework>
    <OutputType>Library</OutputType>
    <IsPackable>true</IsPackable>
    <IncludeContentInPack>true</IncludeContentInPack>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <ContentTargetFolders>content</ContentTargetFolders>
    <PackageType>Template</PackageType>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <EnableDefaultItems>false</EnableDefaultItems>
    <Description>Aspire Template Pack for Microsoft Template Engine</Description>
    <UsingToolTemplateLocalizer>true</UsingToolTemplateLocalizer>
  </PropertyGroup>

  <PropertyGroup>
    <UsePublicApiAnalyzers>false</UsePublicApiAnalyzers>
  </PropertyGroup>

  <ItemGroup>
    <!-- see https://github.com/dotnet/aspire/pull/1225 -->
    <None Include="templates\**\*" />
  </ItemGroup>

  <ItemGroup>
    <!-- Template project files: *.csproj -->
    <TemplateProjectFiles Include="$(MSBuildThisFileDirectory)templates\**\*.csproj">
      <PackagePath>content/templates/%(RecursiveDir)</PackagePath>
      <DestinationFile>$(IntermediateOutputPath)content\templates\%(RecursiveDir)%(Filename)%(Extension)</DestinationFile>
    </TemplateProjectFiles>

    <!-- Template project files: apphost.cs (singlefile only) -->
    <TemplateProjectFiles Include="$(MSBuildThisFileDirectory)templates\aspire-apphost-singlefile\**\apphost.cs">
      <PackagePath>content/templates/%(RecursiveDir)</PackagePath>
      <DestinationFile>$(IntermediateOutputPath)content\templates\aspire-apphost-singlefile\%(RecursiveDir)%(Filename)%(Extension)</DestinationFile>
    </TemplateProjectFiles>

    <TemplateProjectFilesObj Include="@(TemplateProjectFiles->'%(DestinationFile)')" />

    <TemplateFiles Include="$(MSBuildThisFileDirectory)templates\**\*"
                   Exclude="$(MSBuildThisFileDirectory)templates\**\bin\**;$(MSBuildThisFileDirectory)templates\**\obj\**;$(MSBuildThisFileDirectory)templates\**\*.csproj">
      <PackagePath>content/templates/%(RecursiveDir)</PackagePath>
    </TemplateFiles>
    <TemplateFilesObj Include="@(TemplateFiles->'$(IntermediateOutputPath)content\templates\%(RecursiveDir)%(Filename)%(Extension)')" />
  </ItemGroup>

  <!-- When building a package, this target will run to copy all the templates into the intermediate directory,
       replaces the package versions, and adds them to the package.-->
  <Target Name="AddTemplatesToPackageAsContent"
          DependsOnTargets="ReplacePackageVersionOnTemplates">
    <ItemGroup>
      <Content Include="@(TemplateFilesObj);@(TemplateProjectFilesObj)" />
    </ItemGroup>
  </Target>

  <!-- Replaces the versions referenced by the templates projects to use the version of the packages being live-built -->
  <Target Name="ReplacePackageVersionOnTemplates"
          DependsOnTargets="CopyTemplatesToIntermediateOutputPath"
          Inputs="@(TemplateProjectFiles)"
          Outputs="@(TemplateProjectFilesObj)">

    <WriteLinesToFile File="%(TemplateProjectFiles.DestinationFile)"
                      Lines="$([System.IO.File]::ReadAllText('%(TemplateProjectFiles.FullPath)')
                                                 .Replace('!!REPLACE_WITH_LATEST_VERSION!!', '$(PackageVersion)')
                                                 .Replace('!!REPLACE_WITH_ASPNETCORE_9_VERSION!!', '$(MicrosoftAspNetCorePackageVersionForNet9)')
                                                 .Replace('!!REPLACE_WITH_ASPNETCORE_10_VERSION!!', '$(MicrosoftAspNetCorePackageVersionForNet10)')
                                                 .Replace('!!REPLACE_WITH_DOTNET_EXTENSIONS_VERSION!!', '$(MicrosoftExtensionsHttpResilienceVersion)')
                                                 .Replace('!!REPLACE_WITH_OTEL_NET8_VERSION!!', '$(OpenTelemetryNet8Version)')
                                                 .Replace('!!REPLACE_WITH_OTEL_EXPORTER_VERSION!!', '$(OpenTelemetryExporterOpenTelemetryProtocolVersion)')
                                                 .Replace('!!REPLACE_WITH_OTEL_HOSTING_VERSION!!', '$(OpenTelemetryInstrumentationExtensionsHostingVersion)')
                                                 .Replace('!!REPLACE_WITH_OTEL_ASPNETCORE_VERSION!!', '$(OpenTelemetryInstrumentationAspNetCoreVersion)')
                                                 .Replace('!!REPLACE_WITH_OTEL_HTTP_VERSION!!', '$(OpenTelemetryInstrumentationHttpVersion)')
                                                 .Replace('!!REPLACE_WITH_OTEL_RUNTIME_VERSION!!', '$(OpenTelemetryInstrumentationRuntimeVersion)') )"
                      WriteOnlyWhenDifferent="True"
                      Overwrite="true" />
  </Target>

  <!-- Grabs the contents of the templates folder and copies them to IntermediateOutputPath directory -->
  <Target Name="CopyTemplatesToIntermediateOutputPath"
          Inputs="@(TemplateFiles)"
          Outputs="@(TemplateFilesObj)">

    <Copy SourceFiles="@(TemplateFiles)"
          DestinationFiles="@(TemplateFilesObj)"
          SkipUnchangedFiles="true" />
  </Target>

</Project>
