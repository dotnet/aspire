#nullable enable
Aspire.Hosting.Azure.AzureBlobStorageResource
Aspire.Hosting.Azure.AzureBlobStorageResource.AzureBlobStorageResource(string! name, Aspire.Hosting.Azure.AzureStorageResource! storage) -> void
Aspire.Hosting.Azure.AzureBlobStorageResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.Azure.AzureBlobStorageResource.Parent.get -> Aspire.Hosting.Azure.AzureStorageResource!
Aspire.Hosting.Azure.AzureQueueStorageResource
Aspire.Hosting.Azure.AzureQueueStorageResource.AzureQueueStorageResource(string! name, Aspire.Hosting.Azure.AzureStorageResource! storage) -> void
Aspire.Hosting.Azure.AzureQueueStorageResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.Azure.AzureQueueStorageResource.Parent.get -> Aspire.Hosting.Azure.AzureStorageResource!
Aspire.Hosting.Azure.AzureStorageEmulatorResource
Aspire.Hosting.Azure.AzureStorageEmulatorResource.AzureStorageEmulatorResource(Aspire.Hosting.Azure.AzureStorageResource! innerResource) -> void
Aspire.Hosting.Azure.AzureStorageResource
Aspire.Hosting.Azure.AzureStorageResource.AzureStorageResource(string! name, System.Action<Aspire.Hosting.ResourceModuleConstruct!>! configureConstruct) -> void
Aspire.Hosting.Azure.AzureStorageResource.BlobEndpoint.get -> Aspire.Hosting.Azure.BicepOutputReference!
Aspire.Hosting.Azure.AzureStorageResource.IsEmulator.get -> bool
Aspire.Hosting.Azure.AzureStorageResource.QueueEndpoint.get -> Aspire.Hosting.Azure.BicepOutputReference!
Aspire.Hosting.Azure.AzureStorageResource.TableEndpoint.get -> Aspire.Hosting.Azure.BicepOutputReference!
Aspire.Hosting.Azure.AzureTableStorageResource
Aspire.Hosting.Azure.AzureTableStorageResource.AzureTableStorageResource(string! name, Aspire.Hosting.Azure.AzureStorageResource! storage) -> void
Aspire.Hosting.Azure.AzureTableStorageResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.Azure.AzureTableStorageResource.Parent.get -> Aspire.Hosting.Azure.AzureStorageResource!
Aspire.Hosting.AzureStorageExtensions
override Aspire.Hosting.Azure.AzureStorageEmulatorResource.Annotations.get -> Aspire.Hosting.ApplicationModel.ResourceAnnotationCollection!
override Aspire.Hosting.Azure.AzureStorageEmulatorResource.Name.get -> string!
static Aspire.Hosting.AzureStorageExtensions.AddAzureStorage(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.AddAzureStorage(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, System.Action<Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>!, Aspire.Hosting.ResourceModuleConstruct!, Azure.Provisioning.Storage.StorageAccount!>? configureResource) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.AddBlobs(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureBlobStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.AddQueues(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureQueueStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.AddTables(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureTableStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.RunAsEmulator(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>! builder, System.Action<Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!>? configureContainer = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageResource!>!
static Aspire.Hosting.AzureStorageExtensions.UseBlobPort(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>! builder, int port) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!
static Aspire.Hosting.AzureStorageExtensions.UseQueuePort(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>! builder, int port) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!
static Aspire.Hosting.AzureStorageExtensions.UseTablePort(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>! builder, int port) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!
static Aspire.Hosting.AzureStorageExtensions.WithDataBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>! builder, string? path = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!
static Aspire.Hosting.AzureStorageExtensions.WithDataVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.Azure.AzureStorageEmulatorResource!>!
