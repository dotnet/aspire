@page "/provisioning"
@using Amazon.SQS;
@using Amazon.SQS.Model;
@using Microsoft.Extensions.Options;

@inject IOptions<AWSResources> awsResources;
@inject IAmazonSQS sqsClient;

<PageTitle>SQS Send Message Example</PageTitle>

<h1>Provisioning</h1>

<p>
This page tests that AWS resources that were provisioned as part of the CloudFormation template included in the AppHost
are accessible to the project.
</p>
<p>
Resources provisioned:
<ul>
        <li><b>OrderQueueUrl:</b> @awsResources.Value?.OrderQueueUrl</li>
</ul>
</p>


<p>
Message to send to the queue:
</p>
<p>
<textarea @bind="MessageToSend" rows="10" cols="80" />
</p>

<button @onclick="SendMessageAsync">Send Message</button>


@code {
    public string? MessageToSend {get;set;}

    public async Task SendMessageAsync()
    {
        if (string.IsNullOrEmpty(this.MessageToSend))
        {
            throw new ArgumentException("The OrderQueueUrl is not configured in configuration");
        }

        if(string.IsNullOrEmpty(awsResources.Value?.OrderQueueUrl))
        {
            throw new ArgumentException("The OrderQueueUrl is not configured in configuration");
        }

        var request = new SendMessageRequest
        {
            QueueUrl = awsResources.Value.OrderQueueUrl,
            MessageBody = MessageToSend
        };

        await sqsClient.SendMessageAsync(request);
    }
}
