{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "infra": {
      "type": "azure.bicep.v0",
      "path": "infra.module.bicep",
      "params": {
        "userPrincipalId": ""
      }
    },
    "customDomain": {
      "type": "parameter.v0",
      "value": "{customDomain.inputs.value}",
      "inputs": {
        "value": {
          "type": "string"
        }
      }
    },
    "certificateName": {
      "type": "parameter.v0",
      "value": "{certificateName.inputs.value}",
      "inputs": {
        "value": {
          "type": "string"
        }
      }
    },
    "secretparam": {
      "type": "parameter.v0",
      "value": "{secretparam.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true
        }
      }
    },
    "cache": {
      "type": "container.v1",
      "connectionString": "{cache.bindings.tcp.host}:{cache.bindings.tcp.port},password={cache-password.value}",
      "image": "docker.io/library/redis:7.4",
      "deployment": {
        "type": "azure.bicep.v0",
        "path": "cache.module.bicep",
        "params": {
          "infra_outputs_volumes_cache_0": "{infra.outputs.volumes_cache_0}",
          "cache_password_value": "{cache-password.value}",
          "infra_outputs_azure_container_registry_managed_identity_id": "{infra.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID}",
          "infra_outputs_azure_container_apps_environment_id": "{infra.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID}"
        }
      },
      "entrypoint": "/bin/sh",
      "args": [
        "-c",
        "redis-server --requirepass $REDIS_PASSWORD --save 60 1"
      ],
      "volumes": [
        {
          "name": "azurecontainerapps.apphost-a01ec9bc8d-cache-data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "env": {
        "REDIS_PASSWORD": "{cache-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "account": {
      "type": "azure.bicep.v0",
      "connectionString": "{account.secretOutputs.connectionString}",
      "path": "account.module.bicep",
      "params": {
        "keyVaultName": "{infra.outputs.secret_output_account}"
      }
    },
    "db": {
      "type": "value.v0",
      "connectionString": "{account.secretOutputs.connectionString}"
    },
    "storage": {
      "type": "azure.bicep.v0",
      "path": "storage.module.bicep"
    },
    "blobs": {
      "type": "value.v0",
      "connectionString": "{storage.outputs.blobEndpoint}"
    },
    "pythonapp": {
      "type": "container.v1",
      "build": {
        "context": "AppWithDocker",
        "dockerfile": "AppWithDocker/Dockerfile"
      },
      "deployment": {
        "type": "azure.bicep.v0",
        "path": "pythonapp.module.bicep",
        "params": {
          "infra_outputs_azure_container_registry_managed_identity_id": "{infra.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID}",
          "infra_outputs_azure_container_apps_environment_id": "{infra.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID}",
          "infra_outputs_azure_container_registry_endpoint": "{infra.outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT}",
          "pythonapp_containerimage": "{pythonapp.containerImage}"
        }
      }
    },
    "api": {
      "type": "project.v1",
      "path": "../AzureContainerApps.ApiService/AzureContainerApps.ApiService.csproj",
      "deployment": {
        "type": "azure.bicep.v0",
        "path": "api.module.bicep",
        "params": {
          "api_identity_outputs_id": "{api-identity.outputs.id}",
          "api_identity_outputs_clientid": "{api-identity.outputs.clientId}",
          "api_containerport": "{api.containerPort}",
          "storage_outputs_blobendpoint": "{storage.outputs.blobEndpoint}",
          "cache_password_value": "{cache-password.value}",
          "infra_outputs_secret_output_account": "{infra.outputs.secret_output_account}",
          "infra_outputs_azure_container_registry_managed_identity_id": "{infra.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID}",
          "secretparam_value": "{secretparam.value}",
          "infra_outputs_azure_container_apps_environment_id": "{infra.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID}",
          "infra_outputs_azure_container_registry_endpoint": "{infra.outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT}",
          "api_containerimage": "{api.containerImage}",
          "certificateName": "{certificateName.value}",
          "customDomain": "{customDomain.value}"
        }
      },
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{api.bindings.http.targetPort}",
        "ConnectionStrings__blobs": "{blobs.connectionString}",
        "ConnectionStrings__cache": "{cache.connectionString}",
        "ConnectionStrings__account": "{account.connectionString}",
        "VALUE": "{secretparam.value}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        }
      }
    },
    "api-identity": {
      "type": "azure.bicep.v0",
      "path": "api-identity.module.bicep"
    },
    "api-roles-storage": {
      "type": "azure.bicep.v0",
      "path": "api-roles-storage.module.bicep",
      "params": {
        "storage_outputs_name": "{storage.outputs.name}",
        "principalId": "{api-identity.outputs.principalId}"
      }
    },
    "cache-password": {
      "type": "parameter.v0",
      "value": "{cache-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22,
              "special": false
            }
          }
        }
      }
    }
  }
}