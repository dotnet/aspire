name: Workload Tests

on:
  pull_request:
    branches:
      - main
      - 'release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_for_template_tests:
    name: Setup for template tests
    runs-on: ubuntu-latest
    outputs:
      templates_tests_matrix: ${{ steps.enumerateNamesStep.outputs.templates_test_matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build with packages
        env:
          CI: false
        run: ./build.sh -restore -build -ci -pack /bl

      - name: Install sdk for testing
        env:
          CI: false
        run: |
          ./dotnet.sh build ${{ github.workspace }}/tests/workloads.proj \
            /p:SkipPackageCheckForWorkloadTesting=true \
            /bl:${{ github.workspace }}/artifacts/log/Debug/InstallSdkForTesting.binlog

      - name: Build workload tests
        env:
          CI: false
        run: |
          ./dotnet.sh build ${{ github.workspace }}/tests/Aspire.Workload.Tests/Aspire.Workload.Tests.csproj \
            -p:ContinuousIntegrationBuild=true \
            /p:ArchiveTests=true \
            /bl:${{ github.workspace }}/artifacts/log/Debug/BuildWorkloadTests.binlog

      - name: Enumerate test class names
        id: enumerateNamesStep
        env:
          CI: false
        run: |
          cat ${{ github.workspace }}/artifacts/helix/workload-tests/Aspire.Workload.Tests.for-gh-actions.list >> $GITHUB_OUTPUT

      - name: Archive built nugets
        uses: actions/upload-artifact@v4
        with:
          name: built-nugets
          path: artifacts/packages

      - name: Archive artifacts for template tests
        uses: actions/upload-artifact@v4
        with:
          name: workload-artifacts
          path: |
            artifacts/bin/dotnet-*
            artifacts/bin/playwright-deps
          retention-days: 3

  test:
    uses: ./.github/workflows/run-tests.yml
    needs: setup_for_template_tests
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_for_template_tests.outputs.templates_tests_matrix) }}
    with:
      testName: ${{ matrix.tests.shortname }}
      testProject: tests/Aspire.Workload.Tests/Aspire.Workload.Tests.csproj
      testSessionTimeoutMs: 1200000
      testHangTimeout: 12m
      extraArgs: "-p:VSTestTestCaseFilter=FullyQualifiedName~${{ matrix.tests.fullname }}"
      isWorkloadTests: true

  results: # This job is used for branch protection. It ensures all the above tests passed
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs: [test]
    steps:
      # get all the test-job-result* artifacts into a single directory
      - uses: actions/download-artifact@v4
        with:
          pattern: test-job-result-*
          merge-multiple: true
          path: test-job-result

      # return success if zero result-failed-* files are found
      - name: Compute result
        run: |
          ls -al test-job-result/
          [ 0 -eq $(find test-job-result -name 'result-failed-*' | wc -l) ]
