
name: Run Tests

on:
  workflow_call:
    inputs:
      testProject:
        required: true
        type: string
      testName:
        required: true
        type: string
      testSessionTimeoutMs:
        required: false
        type: string
      extraArgs:
        required: false
        type: string

jobs:

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x
            9.x

      - name: Trust HTTPS development certificate
        run: dotnet dev-certs https --trust

      - name: Verify Docker is running
        run: docker info

      - name: Install Azure Functions Core Tools
        if: inputs.testName == 'Playground' || inputs.testName == 'Azure'
        run: |
          sudo apt-get update
          sudo apt-get install -y azure-functions-core-tools-4

      - name: Build test project
        env:
          CI: false
        run: |
          ./build.sh -restore -ci -build -projects ${{ github.workspace }}/${{ inputs.testProject }} /bl

      - name: Run tests
        id: run-tests
        env:
          CI: false
          TEMPLATE_TESTS_ON_GITHUB_ACTIONS: ${{ inputs.testName == 'Workload' }}
          DCP_DIAGNOSTICS_LOG_LEVEL: debug
          DCP_DIAGNOSTICS_LOG_FOLDER: ${{ github.workspace }}/testresults/dcp
        run: |
          ./dotnet.sh test ${{ github.workspace }}/${{ inputs.testProject }} \
            /p:ContinuousIntegrationBuild=true \
            -s eng/testing/.runsettings \
            --logger "console;verbosity=normal" \
            --logger "trx" \
            --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true" \
            --blame \
            --blame-hang-timeout 7m \
            --blame-crash \
            --results-directory testresults \
            --no-restore \
            --no-build \
            ${{ matrix.extraArgs }} \
            -- \
            RunConfiguration.CollectSourceInformation=true \
            RunConfiguration.TestSessionTimeout=${{ matrix.testSessionTimeoutMs || 600000 }}

      - name: Dump docker info
        if: always()
        run: |
          docker container ls --all
          docker container ls --all --format json
          docker volume ls
          docker network ls

      - name: Upload bin log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: binlog-${{ inputs.testName }}
          path: "**/*.binlog"

      - name: Upload test results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testresults-${{ inputs.testName }}
          path: testresults/**

      - name: Upload built nugets
        uses: actions/upload-artifact@v4
        with:
          name: built-nugets
          path: "artifacts/packages/**/*.nupkg"
