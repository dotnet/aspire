# Executes all the tests on all the platforms
name: Tests

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Duplicated jobs so their dependencies are not blocked on both the
  # setup jobs

  # Generates a runsheet for all the tests in the solution that do not require
  # NuGet packages to be built.
  # The runsheet generation is expected to be fast.
  generate_tests_matrix:
    name: Generate test runsheet
    runs-on: windows-latest
    outputs:
      runsheet: ${{ steps.generate_tests_matrix.outputs.runsheet }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # In order to build the solution, we need to install the SDK and the toolsets first
      # as defined in global.json. For this, create a temporary project file and run the
      # build command with the -restore option. This will install the SDK and toolsets.
      #
      # We don't want to run 'build.cmd -restore' as it will also restore all the packages,
      # which takes a long time and is not needed for this job.
      - name: Install toolsets
        shell: pwsh
        run: |
          mkdir ./artifacts/tmp -force | Out-Null
          '<Project />' | Out-File -FilePath ./artifacts/tmp/install-toolset.proj -Encoding utf8
          ./build.cmd -restore -projects ./artifacts/tmp/install-toolset.proj

      - name: Generate test runsheet
        id: generate_tests_matrix
        shell: pwsh
        run: |
          ./build.cmd -test /p:TestRunnerName=TestRunsheetBuilder -bl -c Release

      - name: Upload logs, and test results
        if: ${{ always() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: runsheet-logs
          path: |
            ${{ github.workspace }}/artifacts/log/*/*.binlog
            ${{ github.workspace }}/artifacts/log/*/TestLogs/**
            ${{ github.workspace }}/artifacts/tmp/*/combined_runsheet.json
          retention-days: 3

  # Generates a runsheet for all the tests in the solution that DO require
  # NuGet packages to be built.
  # The runsheet generation is expected to be slow as we need to restore and build
  # the whole solution and publish all the packages.
  generate_e2e_matrix:
    name: Generate E2E test runsheet
    runs-on: windows-latest
    outputs:
      runsheet: ${{ steps.generate_e2e_matrix.outputs.runsheet }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build with packages
        run: |
          ./build.cmd -restore -build -pack -c Release -ci -bl /p:InstallBrowsersForPlaywright=false /p:SkipTestProjects=true /p:CI=false

      - name: Generate test runsheet
        id: generate_e2e_matrix
        run: |
          ./build.cmd -test /p:TestRunnerName=TestRunsheetBuilder /p:FullE2e=true -bl -c Release

      - name: Upload built NuGets
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: built-nugets
          path: artifacts/packages
          retention-days: 3

      - name: Upload logs, and test results
        if: ${{ always() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: runsheet-e2e-logs
          path: |
            ${{ github.workspace }}/artifacts/log/*/*.binlog
            ${{ github.workspace }}/artifacts/log/*/TestLogs/**
            ${{ github.workspace }}/artifacts/tmp/*/combined_runsheet.json
          retention-days: 3

  run_tests:
    name: Test
    needs: generate_tests_matrix
    strategy:
      fail-fast: false
      matrix:
        tests: ${{ fromJson(needs.generate_tests_matrix.outputs.runsheet) }}

    runs-on: ${{ matrix.tests.os }} # Use the OS from the matrix

    steps:
      - name: Trust HTTPS development certificate
        if: runner.os == 'Linux'
        run: dotnet dev-certs https --trust

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Verify Docker is running
        # nested docker containers not supported on windows
        if: runner.os == 'Linux'
        run: docker info

      - name: Install Azure Functions Core Tools
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y azure-functions-core-tools-4

      - name: Test ${{ matrix.tests.project }}
        run: |
          ${{ matrix.tests.command }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: ${{ matrix.tests.project }}-${{ matrix.tests.os }}-logs
          path: |
            ${{ github.workspace }}/artifacts/TestResults/*/*.trx
            ${{ github.workspace }}/artifacts/log/*/TestLogs/**
          retention-days: 30

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: ${{ matrix.tests.project }}-${{ matrix.tests.os }}-binlogs
          path: |
            ${{ github.workspace }}/artifacts/log/*/*.binlog
          retention-days: 3

  run_e2e_tests:
    name: E2ETest
    needs: generate_e2e_matrix
    strategy:
      fail-fast: false
      matrix:
        tests: ${{ fromJson(needs.generate_e2e_matrix.outputs.runsheet) }}

    runs-on: ${{ matrix.tests.os }} # Use the OS from the matrix

    steps:
      - name: Trust HTTPS development certificate
        if: runner.os == 'Linux'
        run: dotnet dev-certs https --trust

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download built NuGets
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: built-nugets
          path: ${{ github.workspace }}/artifacts/packages

      - name: Copy NuGets to the correct location
        shell: pwsh
        run:
          Move-Item -Path "${{ github.workspace }}/artifacts/packages/built-nugets/Release" -Destination "${{ github.workspace }}/artifacts/packages"

      - name: Verify Docker is running
        # nested docker containers not supported on windows
        if: runner.os == 'Linux'
        run: docker info

      - name: Install Azure Functions Core Tools
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y azure-functions-core-tools-4

      - name: Test ${{ matrix.tests.project }}
        env:
          BUILT_NUGETS_PATH: ${{ github.workspace }}/artifacts/packages/Release/Shipping
        run: |
          ${{ matrix.tests.command }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: ${{ matrix.tests.project }}-${{ matrix.tests.os }}-logs
          path: |
            ${{ github.workspace }}/artifacts/TestResults/*/*.trx
            ${{ github.workspace }}/artifacts/log/*/TestLogs/**
          retention-days: 30

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: ${{ matrix.tests.project }}-${{ matrix.tests.os }}-binlogs
          path: |
            ${{ github.workspace }}/artifacts/log/*/*.binlog
          retention-days: 3
