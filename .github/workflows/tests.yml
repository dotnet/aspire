# Executes all the tests on all the platforms
name: Tests

on:
  workflow_call:
    inputs:
      versionOverrideArg:
        required: false
        type: string

jobs:
  setup_for_tests:
    name: Setup for tests
    runs-on: ubuntu-latest
    outputs:
      tests_matrix_requires_nugets: ${{ steps.generate_tests_matrix.outputs.tests_matrix_requires_nugets }}
      tests_matrix_no_nugets: ${{ steps.generate_tests_matrix.outputs.tests_matrix_no_nugets }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./.github/actions/enumerate-tests
        id: generate_tests_matrix
        with:
          includeIntegrations: true
          includeTemplates: true

  build_packages:
    name: Build packages
    uses: ./.github/workflows/build-packages.yml
    with:
      versionOverrideArg: ${{ inputs.versionOverrideArg }}

  tests_no_nugets:
    uses: ./.github/workflows/run-tests.yml
    name: Tests
    needs: setup_for_tests
    if: ${{ fromJson(needs.setup_for_tests.outputs.tests_matrix_no_nugets).include[0] != null }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_for_tests.outputs.tests_matrix_no_nugets) }}
    with:
      testShortName: ${{ matrix.shortname }}
      os: ${{ matrix.runs-on }}
      testProjectPath: ${{ matrix.testProjectPath }}
      testSessionTimeout: ${{ matrix.testSessionTimeout }}
      testHangTimeout: ${{ matrix.testHangTimeout }}
      extraTestArgs: "--filter-not-trait \"quarantined=true\" --filter-not-trait \"outerloop=true\" ${{ matrix.extraTestArgs }}"
      versionOverrideArg: ${{ inputs.versionOverrideArg }}
      requiresNugets: ${{ matrix.requiresNugets }}
      requiresTestSdk: ${{ matrix.requiresTestSdk }}

  tests_requires_nugets:
    name: Tests (Requires Nugets)
    uses: ./.github/workflows/run-tests.yml
    needs: [setup_for_tests, build_packages]
    if: ${{ fromJson(needs.setup_for_tests.outputs.tests_matrix_requires_nugets).include[0] != null }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_for_tests.outputs.tests_matrix_requires_nugets) }}
    with:
      testShortName: ${{ matrix.shortname }}
      os: ${{ matrix.runs-on }}
      testProjectPath: ${{ matrix.testProjectPath }}
      testSessionTimeout: ${{ matrix.testSessionTimeout }}
      testHangTimeout: ${{ matrix.testHangTimeout }}
      extraTestArgs: "--filter-not-trait \"quarantined=true\" --filter-not-trait \"outerloop=true\" ${{ matrix.extraTestArgs }}"
      versionOverrideArg: ${{ inputs.versionOverrideArg }}
      requiresNugets: ${{ matrix.requiresNugets }}
      requiresTestSdk: ${{ matrix.requiresTestSdk }}

  extension_tests_win:
    name: Run VS Code extension tests (Windows)
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./extension
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn test
      - name: Package VSIX
        run: npx @vscode/vsce package --yarn --pre-release -o out/aspire-extension.vsix
      - name: Upload VSIX
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: aspire-extension
          path: extension/out/aspire-extension.vsix

  results:
    if: ${{ always() && github.repository_owner == 'dotnet' }}
    runs-on: ubuntu-latest
    name: Final Test Results
    needs: [
      extension_tests_win,
      tests_no_nugets,
      tests_requires_nugets
    ]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: logs-*-ubuntu-latest
          merge-multiple: true
          path: ${{ github.workspace }}/testresults/ubuntu-latest

      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: logs-*-windows-latest
          merge-multiple: true
          path: ${{ github.workspace }}/testresults/windows-latest

      - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: logs-*-macos-latest
          merge-multiple: true
          path: testresults/macos-latest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: All-TestResults
          path: ${{ github.workspace }}/testresults/**/*.trx

      - name: Generate test results summary
        if: always()
        run: >
          ${{ github.workspace }}/dotnet.sh
          run
          --project ${{ github.workspace }}/tools/GenerateTestSummary/GenerateTestSummary.csproj
          --
          ${{ github.workspace }}/testresults
          --combined

      - name: Fail if any dependency failed
        # 'skipped' can be when a transitive dependency fails and the dependent job gets 'skipped'.
        # For example, one of setup_* jobs failing and the Integration test jobs getting 'skipped'
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped')) }}
        run: |
          echo "One or more dependent jobs failed."
          exit 1
