name: Run Integration Tests

on:
  pull_request:
    branches:
      - main
      - 'release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup_for_template_tests:
    name: Setup for template tests
    runs-on: ubuntu-latest
    outputs:
      template_matrix: ${{ steps.enumerateNamesStep.outputs.templates_output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x
            9.x

      - name: Build with packages
        env:
          CI: false
        run: ./build.sh -restore -build -ci -pack /bl

      - name: Install sdk for testing
        env:
          CI: false
        run: |
          ./dotnet.sh build ${{ github.workspace }}/tests/workloads.proj \
            /p:SkipPackageCheckForWorkloadTesting=true \
            /bl:${{ github.workspace }}/artifacts/log/Debug/InstallSdkForTesting.binlog

      - name: Build workload tests
        env:
          CI: false
        run: |
          ./dotnet.sh build ${{ github.workspace }}/tests/Aspire.Workload.Tests/Aspire.Workload.Tests.csproj \
            -p:ContinuousIntegrationBuild=true \
            /p:ArchiveTests=true \
            /bl:${{ github.workspace }}/artifacts/log/Debug/BuildWorkloadTests.binlog

      - name: Enumerate test class names
        id: enumerateNamesStep
        env:
          CI: false
        run: |
          echo "templates_output=$(jq -cR '{class_names: [inputs]}' < artifacts/helix/workload-tests/Aspire.Workload.Tests.tests.list)" >> $GITHUB_OUTPUT

      - name: Archive artifacts for template tests
        uses: actions/upload-artifacts@v4
        with:
          name: workload-artifacts
          path:
            artifacts/packages
            artifacts/bin/dotnet-*
            artifacts/bin/Aspire.Workload.Tests

  template_tests:
    needs: setup_for_template_tests
    strategy:
      matrix: ${{ fromJson(needs.setup_for_template_tests.outputs.template_matrix) }}
    uses: ./.github/workflows/run-tests.yml
    with:
      testProject: tests/Aspire.Workload.Tests/Aspire.Workload.Tests.csproj
      testName: Workload
      testSessionTimeoutMs: 1200000
      extraArgs: "-p:VSTestTestCaseFilter=FullyQualifiedName=${{ matrix.class_names }}"

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Hosting projects
          - project: tests/Aspire.Hosting.Analyzers.Tests/Aspire.Hosting.Analyzers.Tests.csproj
            name: Hosting.Analyzers
          - project: tests/Aspire.Hosting.Azure.Tests/Aspire.Hosting.Azure.Tests.csproj
            name: Hosting.Azure
          - project: tests/Microsoft.Extensions.ServiceDiscovery.Yarp.Tests/Microsoft.Extensions.ServiceDiscovery.Yarp.Tests.csproj
            name: Extensions.ServiceDiscovery.Yarp
    uses: ./.github/workflows/run-tests.yml
    with:
      testProject: ${{ matrix.project }}
      testName: ${{ matrix.name }}
      testSessionTimeoutMs: ${{ matrix.testSessionTimeoutMs }}
      extraArgs: ${{ matrix.extraArgs }}
