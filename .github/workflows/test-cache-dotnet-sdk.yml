name: Test Cache .NET SDK Action

# This workflow demonstrates how to use the cache-dotnet-sdk action.
# It can be manually triggered from the Actions tab to verify the caching behavior.
on:
  workflow_dispatch:

jobs:
  test-cache-action:
    name: Test SDK Caching
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Cache .NET SDK
        id: cache-sdk
        uses: ./.github/actions/cache-dotnet-sdk
        with:
          cache-key: dotnet-sdk-${{ runner.os }}-${{ hashFiles('global.json') }}
          restore-keys: |
            dotnet-sdk-${{ runner.os }}-

      - name: Verify SDK installation
        run: |
          echo "Cache hit: ${{ steps.cache-sdk.outputs.cache-hit }}"
          if [ -d ".dotnet" ]; then
            echo "✓ .dotnet directory exists"
            ls -la .dotnet
            if [ -f ".dotnet/dotnet" ]; then
              echo "✓ dotnet executable found"
              ./.dotnet/dotnet --version
            else
              echo "✗ dotnet executable not found"
              exit 1
            fi
          else
            echo "✗ .dotnet directory does not exist"
            exit 1
          fi

      - name: Test dotnet command
        run: |
          echo "Testing dotnet command..."
          ./dotnet.sh --version
