<Project DefaultTargets="GenerateListOfTestsForGithubActions">
  <!--
    This is meant to be invoked directly to get the list of test projects to run for PR validation.
    It emits "shortnames" for the project which is essentially the project name with `Aspire.` prefix
    `.Tests` removed.

    Input: $(TestsListOutputPath) 
    Optional: $(GenerateSplitTestsMatrix) - if true, also generates split-tests-matrix.json -->

  <Target Name="GenerateListOfTestsForGithubActions" DependsOnTargets="GenerateSplitTestsMatrix">
    <Error Condition="'$(TestsListOutputPath)' == ''"
           Text="%24(TestsListOutputPath) is unset" />

    <PropertyGroup>
      <RepoRoot>$(MSBuildThisFileDirectory)..\..\</RepoRoot>
    </PropertyGroup>

    <ItemGroup>
      <_TestProjectsToExclude Include="$(RepoRoot)tests\Shared\**\*Tests.csproj" />
      <_TestProjectsToExclude Include="$(RepoRoot)tests\testproject\**\*Tests.csproj" />
      <_TestProjectsToExclude Include="$(RepoRoot)tests\TestingAppHost1\**\*Tests.csproj" />

      <!-- This runs in a separate job -->
      <_TestProjectsToExclude Include="$(RepoRoot)tests\Aspire.EndToEnd.Tests\**\*Tests.csproj" />
      <!-- This runs in a separate job (split tests handled separately) -->
      <_TestProjectsToExclude Include="$(RepoRoot)tests\Aspire.Templates.Tests\**\*Tests.csproj" />

      <_TestProjects Include="$(RepoRoot)tests\**\*Tests.csproj"
                     Exclude="@(_TestProjectsToExclude)" />
    </ItemGroup>

    <!-- this returns an item list of [true, true, false...] with %(MSBuildSourceProjectFile) set -->
    <MSBuild Projects="@(_TestProjects)" Targets="GetRunTestsOnGithubActions">
      <Output TaskParameter="TargetOutputs" ItemName="ProjectRunTestsOnGithubActions" />
    </MSBuild>

    <ItemGroup>
      <ProjectRunTestsOnGithubActions Remove="@(ProjectRunTestsOnGithubActions)" Condition="'%(RunTestsOnGithubActions)' != 'true'" />
      <ProjectRunTestsOnGithubActions ShortName="$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)').Replace('Aspire.', '').Replace('.Tests', ''))" />
    </ItemGroup>

    <Error Condition="@(ProjectRunTestsOnGithubActions->Count()) == 0" Text="Could not find any test projects" />

    <WriteLinesToFile File="$(TestsListOutputPath)"
                      Lines="@(ProjectRunTestsOnGithubActions->'%(ShortName)')"
                      Overwrite="true" />
  </Target>

  <!-- Generate split tests matrix from .tests.list files -->
  <Target Name="GenerateSplitTestsMatrix" Condition="'$(GenerateSplitTestsMatrix)' == 'true'">
    <PropertyGroup>
      <RepoRoot>$(MSBuildThisFileDirectory)..\..\</RepoRoot>
      <_TestListsDirectory>$(RepoRoot)artifacts\helix\</_TestListsDirectory>
      <_OutputDirectory>$(RepoRoot)artifacts\test-matrices\</_OutputDirectory>
      <_GenerateScriptPath>$(RepoRoot)eng\scripts\generate-test-matrix.ps1</_GenerateScriptPath>
      <_PwshCommand>pwsh -NoProfile -ExecutionPolicy Bypass -File &quot;$(_GenerateScriptPath)&quot;</_PwshCommand>
      <_PwshCommand>$(_PwshCommand) -TestListsDirectory &quot;$(_TestListsDirectory)&quot;</_PwshCommand>
      <_PwshCommand>$(_PwshCommand) -OutputDirectory &quot;$(_OutputDirectory)&quot;</_PwshCommand>
      <_PwshCommand Condition="'$(BuildOs)' != ''">$(_PwshCommand) -BuildOs &quot;$(BuildOs)&quot;</_PwshCommand>
    </PropertyGroup>

    <MakeDir Directories="$(_OutputDirectory)" />

    <Exec Command="$(_PwshCommand)"
          WorkingDirectory="$(RepoRoot)"
          IgnoreExitCode="false" />

    <Message Text="Split tests matrix generated: $(_OutputDirectory)split-tests-matrix.json" Importance="high" />
  </Target>

</Project>
