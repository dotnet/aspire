<Project>
  <!-- FIXME: Expand description -->
  <!-- This is for projects that want to use a TestsRunningOutsideOfRepo mode
       which uses `PackageReference` for running outside, and `ProjectReference`
       when running in the repo. -->

  <ItemGroup Condition="'$(TestsRunningOutsideOfRepo)' != 'true'">
    <ProjectReference Include="@(ComponentReferenceForTests -> '$(RepoRoot)src\Components\%(Identity)\%(Identity).csproj')" />
    <ProjectReference Include="@(NonComponentReferenceForTests -> '$(RepoRoot)src\%(Identity)\%(Identity).csproj')" />
  </ItemGroup>

  <!-- FIXME: add target to validate these, for example - ComponentReferenceForTests only for non-apphost etc -->
  <ItemGroup Condition="'$(TestsRunningOutsideOfRepo)' == 'true'">
    <!-- TODO: this is only for non-apphost projects -->
    <PackageReference Include="@(ComponentReferenceForTests)" />
    <PackageReference Include="@(NonComponentReferenceForTests)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TestsRunningOutsideOfRepo)' == 'true' and '$(IncludeTestPackages)' == 'true'">
    <!-- FIXME: compare with the set added by arcade -->
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.core" />
    <PackageReference Include="xunit.analyzers" />
    <PackageReference Include="xunit.assert" />
    <PackageReference Include="xunit.runner.visualstudio" />
    <!-- <PackageReference Include="Microsoft.NET.Test.Sdk" /> -->
    <PackageReference Include="Microsoft.DotNet.XUnitAssert" />
  </ItemGroup>

  <ItemGroup>
    <PropertyForHelixRun Include="XunitVersion" />
    <PropertyForHelixRun Include="XunitAnalyzersVersion" />
    <PropertyForHelixRun Include="XunitRunnerVisualStudioVersion" />
    <PropertyForHelixRun Include="MSTestTestAdapterVersion" />
    <PropertyForHelixRun Include="MicrosoftNETTestSdkVersion" />
    <PropertyForHelixRun Include="MicrosoftDotNetXUnitAssertVersion" />
  </ItemGroup>

  <PropertyGroup>
    <DefineConstants Condition="'$(TestsRunningOutsideOfRepo)' == 'true'">TESTS_RUNNING_OUTSIDE_OF_REPO;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <ImportGroup Condition="'$(RepoRoot)' != 'null' and '$(TestsRunningOutsideOfRepo)' != 'true' and '$(IsAspireHost)' == 'true'">
    <Import Project="$(RepoRoot)src\Aspire.Hosting.AppHost\build\Aspire.Hosting.AppHost.targets" Condition="Exists('$(RepoRoot)src\Aspire.Hosting.AppHost\build\Aspire.Hosting.AppHost.targets')" />
    <Import Project="$(RepoRoot)src\Aspire.Hosting.Sdk\SDK\Sdk.targets" Condition="Exists('$(RepoRoot)src\Aspire.Hosting.Sdk\SDK\Sdk.targets')" />
  </ImportGroup>

</Project>
