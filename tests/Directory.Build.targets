<Project>
  <Import Project="..\Directory.Build.targets" />
  <PropertyGroup>
    <DeployRunSettingsFile Condition="'$(DeployRunSettingsFile)' == ''">true</DeployRunSettingsFile>
    <XunitRunnerJson Condition="'$(XunitRunnerJson)' == ''">$(RepositoryEngineeringDir)testing\xunit.runner.json</XunitRunnerJson>

    <RunTestsOnHelix Condition="'$(RunTestsOnHelix)' == ''">false</RunTestsOnHelix>
    <SkipTests Condition="'$(SkipTests)' == '' and ('$(IsTestSupportProject)' == 'true' or '$(RunTestsOnHelix)' == 'true')">true</SkipTests>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(RepositoryEngineeringDir)testing\.runsettings" CopyToOutputDirectory="PreserveNewest" Condition="'$(DeployRunSettingsFile)' == 'true'" />
    <None Include="$(XunitRunnerJson)" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <Target Name="ZipTestArchive" AfterTargets="Build" Condition="'$(ArchiveTests)' == 'true' and '$(RunTestsOnHelix)' == 'true'">
    <Error Condition="'$(TestArchiveTestsDir)' == ''" Text="TestArchiveTestsDir property to archive the test folder must be set." />

    <MakeDir Directories="$(TestArchiveTestsDir)" />
    <ZipDirectory SourceDirectory="$(OutDir)"
                  DestinationFile="$([MSBuild]::NormalizePath('$(TestArchiveTestsDir)', '$(MSBuildProjectName).zip'))"
                  Overwrite="true" />
  </Target>

  <Import Project="Shared\Aspire.Workload.Testing.targets" Condition="'$(IsWorkloadTestProject)' == 'true'" />

  <!-- target used to explicitly install the workload on CI, after Build -->
  <Target Name="_TriggerWorkloadInstallForTesting"
          AfterTargets="Build"
          DependsOnTargets="InstallWorkloadUsingArtifacts"
          Condition="'$(IsWorkloadTestProject)' == 'true' and '$(TriggerInstallWorkloadForTesting)' == 'true'" />

</Project>
