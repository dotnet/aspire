<Project>

  <PropertyGroup>
    <WorkItemArchiveWildCard>$(TestArchiveTestsDirForHostingTestingTests)**/*.zip</WorkItemArchiveWildCard>
    <BuildHelixWorkItemsDependsOn>$(BuildHelixWorkItemsDependsOn);BuildHelixWorkItemsForHostingTestingTests</BuildHelixWorkItemsDependsOn>
    <NeedsWorkload>true</NeedsWorkload>
  </PropertyGroup>

  <ItemGroup>
    <HelixPreCommand Include="$(_EnvVarSetKeyword) PackageVersion=8.1.0-ci" />
    <HelixPreCommand Include="$(_EnvVarSetKeyword) NetCurrent=net8.0" />
    <HelixPreCommand Include="$(_EnvVarSetKeyword) TestsRunningOutsideOfRepo=true" />
  </ItemGroup>

  <Target Name="BuildHelixWorkItemsForHostingTestingTests">
    <ItemGroup>
      <_TestRunCommandArguments Remove="@(_TestRunCommandArguments)" />
      <_TestRunCommandArguments Include="dotnet test" />
      <_TestRunCommandArguments Include="-s .runsettings" />
      <_TestRunCommandArguments Include="$(_TestNameEnvVar).csproj" />
      <_TestRunCommandArguments Include="--ResultsDirectory:$(_HelixLogsPath)" />
      <_TestRunCommandArguments Include="--blame-hang" />
      <_TestRunCommandArguments Include="--blame-hang-dump-type" />
      <_TestRunCommandArguments Include="full" />
      <_TestRunCommandArguments Include="--blame-hang-timeout" />
      <_TestRunCommandArguments Include="10m" />
      <_TestRunCommandArguments Include="--blame-crash" />
      <_TestRunCommandArguments Include="--blame-crash-dump-type" />
      <_TestRunCommandArguments Include="full" />
    </ItemGroup>
    <PropertyGroup>
      <_TestRunCommand Condition="'$(RunWithCodeCoverage)' == 'true'">@(_TestCoverageCommand, ' ') &quot;@(_TestRunCommandArguments, ' ')&quot;</_TestRunCommand>
      <_TestRunCommand Condition="'$(RunWithCodeCoverage)' != 'true'">@(_TestRunCommandArguments, ' ')</_TestRunCommand>

      <HelixPreCommands>$(HelixPreCommands);@(HelixPreCommand)</HelixPreCommands>
    </PropertyGroup>

    <ItemGroup>
      <_DefaultWorkItems Include="$(WorkItemArchiveWildCard)" />

      <HelixWorkItem Include="@(_DefaultWorkItems -> '%(FileName)')">
        <PayloadArchive>%(Identity)</PayloadArchive>
        <PreCommands>$(_EnvVarSetKeyword) &quot;TEST_NAME=%(FileName)&quot;</PreCommands>
        <Command>cd %(FileName) %3B $(_TestRunCommand)</Command>
        <Timeout>$(_workItemTimeout)</Timeout>

        <!-- Download results file so coverage files can be extracted -->
        <DownloadFilesFromResults>logs/%(FileName).cobertura.xml</DownloadFilesFromResults>
      </HelixWorkItem>
    </ItemGroup>
  </Target>
</Project>
