<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(NetCurrent)</TargetFramework>

    <IsTestProject>true</IsTestProject>
    <!-- no docker support on helix/windows yet -->
    <RunTestsOnHelix Condition="'$(OS)' != 'Windows_NT'">true</RunTestsOnHelix>
    <SkipTests Condition="'$(OS)' == 'Windows_NT'">true</SkipTests>

    <!-- no docker support on helix/windows yet -->
    <!-- <TestUsingWorkloads Condition="! ('$(ContinuousIntegrationBuild)' == 'true' and '$(OS)' == 'Windows_NT')">true</TestUsingWorkloads> -->
    <!-- <InstallWorkloadForTesting>$(TestUsingWorkloads)</InstallWorkloadForTesting> -->

    <TestsRunningOutsideOfRepo Condition="'$(TestsRunningOutsideOfRepo)' == '' and '$(ContinuousIntegrationBuild)' == 'true'">true</TestsRunningOutsideOfRepo>
    <!--<DefineConstants Condition="'$(TestsRunningOutsideOfRepo)' == 'true'">TESTS_RUNNING_OUTSIDE_OF_REPO;$(DefineConstants)</DefineConstants>-->

    <!--<XunitRunnerJson>xunit.runner.json</XunitRunnerJson>-->
    <!--<RunSettingsFilePath>$(MSBuildThisFileDirectory).runsettings</RunSettingsFilePath>-->
    <TestArchiveTestsDir>$(TestArchiveTestsDirForPlaygroundTests)</TestArchiveTestsDir>
    <!--<TestsArchiveSourceDir>$(ArtifactsObjDir)staging-archive\$(MSBuildProjectName)\</TestsArchiveSourceDir>-->

    <!-- <ExtractTestClassNamesForHelix Condition="'$(ContinuousIntegrationBuild)' == 'true' or '$(ArchiveTests)' == 'true'">true</ExtractTestClassNamesForHelix> -->
    <!-- <ExtractTestClassNamesPrefix>Aspire.Playground.Tests</ExtractTestClassNamesPrefix> -->

    <PlaygroundSourceDir Condition="'$(PlaygroundSourceDir)' == ''">..\playground\</PlaygroundSourceDir>

    <RunSettingsFilePath>$(MSBuildThisFileDirectory).runsettings</RunSettingsFilePath>
    <IncludeTestPackages Condition="'$(TestsRunningOutsideOfRepo)' == 'true'">true</IncludeTestPackages>
  </PropertyGroup>

  <ItemGroup>
    <NonComponentReferenceForTests Include="Aspire.Hosting.Testing" />
    <NonComponentReferenceForTests Include="Aspire.Hosting.Azure" />
    <NonComponentReferenceForTests Include="Aspire.Hosting.AppHost" />
    <NonComponentReferenceForTests Include="Aspire.Hosting.NodeJs" />

    <!-- <ProjectReference Include="$(PlaygroundSourceDir)**\*.AppHost\*AppHost.csproj" /> -->
    <ProjectReference Include="$(PlaygroundSourceDir)mongo\Mongo.AppHost\Mongo.AppHost.csproj" />

    <PackageReference Include="Microsoft.DotNet.XUnitExtensions" />
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" />

    <Using Include="Aspire.Hosting.Testing" />
    <Using Include="Xunit" />
  </ItemGroup>

  <ItemGroup Condition="'$(ArchiveTests)' == 'true'">
    <None Include="$(RepoRoot)playground\**\*" Link="staging-for-archive\playground\%(RecursiveDir)%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(MSBuildProjectDirectory)\**\*" Link="staging-for-archive\$(MSBuildProjectName)\%(RecursiveDir)%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(RepoRoot)src\Shared\**\*" Link="staging-for-archive\src\Shared\%(RecursiveDir)%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <!-- helps to isolate the build -->
    <None Include="$(TestsSharedDir)EmptyProject.proj" Link="staging-for-archive\Directory.Build.props" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(TestsSharedDir)EmptyProject.proj" Link="staging-for-archive\Directory.Build.targets" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(TestsSharedRepoTestingDir)\*" Link="staging-for-archive\%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(GeneratedPackagesVersionsPropsPath)" Link="staging-for-archive\Directory.Packages.Versions.props" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(TestsSharedDir)nuget-with-package-source-mapping.config" Link="staging-for-archive\nuget.config" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(TestsSharedDir)WorkloadTesting\data\Directory.Packages.Helix.props" Link="staging-for-archive\%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <!-- FIXME: rename to PropertyForOutsideOfRepoRun ? -->
    <PropertyForHelixRun Include="NetCurrent" />
  </ItemGroup>

  <Target Name="_UpdateArchiveSourcePath" BeforeTargets="ZipTestArchive" Condition="'$(ArchiveTests)' == 'true'">
    <PropertyGroup>
      <TestsArchiveSourceDir>$(OutDir)staging-for-archive\</TestsArchiveSourceDir>
    </PropertyGroup>
  </Target>

</Project>
