<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(NetCurrent)</TargetFramework>

    <!-- no docker support on helix/windows yet -->
    <RunTestsOnHelix Condition="'$(OS)' != 'Windows_NT'">true</RunTestsOnHelix>
    <SkipTests Condition="'$(OS)' == 'Windows_NT'">true</SkipTests>

    <!-- no docker support on helix/windows yet -->
    <TestUsingWorkloads Condition="! ('$(ContinuousIntegrationBuild)' == 'true' and '$(OS)' == 'Windows_NT')">true</TestUsingWorkloads>
    <InstallWorkloadForTesting>$(TestUsingWorkloads)</InstallWorkloadForTesting>

    <TestsRunningOutsideOfRepo Condition="'$(TestsRunningOutsideOfRepo)' == '' and '$(ContinuousIntegrationBuild)' == 'true'">true</TestsRunningOutsideOfRepo>
    <!--<DefineConstants Condition="'$(TestsRunningOutsideOfRepo)' == 'true'">TESTS_RUNNING_OUTSIDE_OF_REPO;$(DefineConstants)</DefineConstants>-->

    <!--<XunitRunnerJson>xunit.runner.json</XunitRunnerJson>-->
    <!--<RunSettingsFilePath>$(MSBuildThisFileDirectory).runsettings</RunSettingsFilePath>-->
    <TestArchiveTestsDir>$(TestArchiveTestsDirForPlaygroundTests)</TestArchiveTestsDir>
    <!--<TestsArchiveSourceDir>$(ArtifactsObjDir)staging-archive\$(MSBuildProjectName)\</TestsArchiveSourceDir>-->

    <ExtractTestClassNamesForHelix Condition="'$(ContinuousIntegrationBuild)' == 'true' or '$(ArchiveTests)' == 'true'">true</ExtractTestClassNamesForHelix>
    <ExtractTestClassNamesPrefix>Aspire.Playground.Tests</ExtractTestClassNamesPrefix>

    <!--<IncludeTestPackages>true</IncludeTestPackages>-->
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(RepoRoot)src\Aspire.Hosting.MongoDB\MongoDBContainerImageTags.cs" />
    <Compile Include="$(RepoRoot)src\Aspire.Hosting.Qdrant\QdrantContainerImageTags.cs" />
    <Compile Include="$(RepoRoot)src\Aspire.Hosting.Nats\NatsContainerImageTags.cs" />

    <None Include="$(RepoRoot)tests\WorkloadTesting\data\**\*" Link="testassets" CopyToOutputDirectory="PreserveNewest" />

    <PackageReference Include="Microsoft.DotNet.XUnitExtensions" />
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" />
  </ItemGroup>

  <ItemGroup Condition="'$(ArchiveTests)' == 'true' or '$(TestsRunningOutsideOfRepo)' == 'true'">
    <None Include="$(RepoRoot)playground\**\*" Link="testassets\playground\%(RecursiveDir)%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(RepoRoot)src\Shared\**\*" Link="testassets\Shared-src\%(RecursiveDir)%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <!-- helps to isolate the build -->
    <None Include="$(TestsSharedDir)EmptyProject.proj" Link="testassets\Directory.Build.props" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(TestsSharedDir)EmptyProject.proj" Link="testassets\Directory.Build.targets" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(TestsSharedRepoTestingDir)\*" Link="testassets\%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(GeneratedPackagesVersionsPropsPath)" Link="testassets\Directory.Packages.Versions.props" CopyToOutputDirectory="PreserveNewest" />

    <None Include="$(TestsSharedDir)nuget-with-package-source-mapping.config" Link="testassets\nuget.config" CopyToOutputDirectory="PreserveNewest" />
    <None Include="$(TestsSharedDir)WorkloadTesting\data\Directory.Packages.Helix.props" Link="testassets\%(FileName)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <!-- FIXME: are these really needed? - um .. for test projects where the sdk would add the references! -->
    <PropertyForHelixRun Include="XunitPackageVersion" />
    <PropertyForHelixRun Include="XunitRunnerVisualStudioPackageVersion" />
    <PropertyForHelixRun Include="XunitPackageVersion" />
    <PropertyForHelixRun Include="MSTestTestAdapterPackageVersion" />
    <PropertyForHelixRun Include="MicrosoftNETTestSdkPackageVersion" />
  </ItemGroup>

  <Import Project="..\Shared\WorkloadTesting\Aspire.Shared.WorkloadTesting.targets" />
</Project>
